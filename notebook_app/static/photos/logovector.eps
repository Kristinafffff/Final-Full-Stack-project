%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 25.4
%%For: Виталий Викторович
%%CreationDate: 4/14/2022
%%BoundingBox: 0 0 3000 2000
%%HiResBoundingBox: 0 0 3000 2000
%%CropBox: 0 0 3000 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 25.4.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 25.4.1 x498 R agm 4.7767 ct 6.0%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=0 RasterRes=72 GradRes=72 Text=0 Stroke=0 Clip=0 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.4d2f597, 2021/09/01-20:51:22        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/postscript"
   xmp:MetadataDate="2022-05-01T10:54+03:00"
   xmp:ModifyDate="2022-04-11T10:52:12+05:00"
   xmp:CreateDate="2022-04-11T10:52:12+05:00"
   xmp:CreatorTool="Adobe Illustrator 24.3 (Windows)"
   xmpMM:InstanceID="xmp.iid:f613a62a-c0e5-0a4e-b3ce-73f48030020a"
   xmpMM:DocumentID="xmp.did:29870882-0584-7440-a24e-c7a271504a97"
   xmpMM:OriginalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Print"
   xmpTPg:HasVisibleOverprint="False"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:NPages="1"
   pdf:Producer="Adobe PDF library 10.01">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Person writing love letter flat vector illustration</rdf:li>
     <rdf:li xml:lang="x-repair">Person writing love letter flat vector illustration</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Person writing love letter flat vector illustration. Pen in human hand. Person sending or receiving letter. Correspondence, communication, relationship, friendship concept</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:subject>
    <rdf:Bag>
     <rdf:li>concept</rdf:li>
     <rdf:li>flat</rdf:li>
     <rdf:li>vector</rdf:li>
     <rdf:li>illustration</rdf:li>
     <rdf:li>background</rdf:li>
     <rdf:li>hand</rdf:li>
     <rdf:li>holding</rdf:li>
     <rdf:li>person</rdf:li>
     <rdf:li>writing</rdf:li>
     <rdf:li>love</rdf:li>
     <rdf:li>letter</rdf:li>
     <rdf:li>human</rdf:li>
     <rdf:li>sending</rdf:li>
     <rdf:li>receiving</rdf:li>
     <rdf:li>correspondence</rdf:li>
     <rdf:li>communication</rdf:li>
     <rdf:li>relationship</rdf:li>
     <rdf:li>friendship</rdf:li>
     <rdf:li>heart</rdf:li>
     <rdf:li>pencil</rdf:li>
     <rdf:li>message</rdf:li>
     <rdf:li>education</rdf:li>
     <rdf:li>write</rdf:li>
     <rdf:li>pen</rdf:li>
     <rdf:li>romantic</rdf:li>
     <rdf:li>tiny</rdf:li>
     <rdf:li>reading</rdf:li>
     <rdf:li>note</rdf:li>
     <rdf:li>sitting</rdf:li>
     <rdf:li>create</rdf:li>
     <rdf:li>library</rdf:li>
     <rdf:li>poetry</rdf:li>
     <rdf:li>sheet</rdf:li>
     <rdf:li>romance</rdf:li>
     <rdf:li>postcard</rdf:li>
     <rdf:li>occupation</rdf:li>
     <rdf:li>typewriter</rdf:li>
     <rdf:li>desk</rdf:li>
     <rdf:li>author</rdf:li>
     <rdf:li>diary</rdf:li>
     <rdf:li>future</rdf:li>
     <rdf:li>journal</rdf:li>
     <rdf:li>classic</rdf:li>
     <rdf:li>studying</rdf:li>
     <rdf:li>student</rdf:li>
     <rdf:li>teenage</rdf:li>
     <rdf:li>thinking</rdf:li>
     <rdf:li>hobby</rdf:li>
    </rdf:Bag>
   </dc:subject>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="172"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEAtAC0AAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAAtAAAAAEA&#xA;AQC0AAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgArAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVjTRKaM6g+BIw0g&#xA;yCmb21H7f4H+mPCWPiB3161/n/A/0x4SviRXi5tz0kX6TT9eNFPGFQEEVBqPEYGTsVaDKSQCCR1A&#xA;xW28VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirTuqLyYgAdzigmkHNqQ&#xA;G0S1/wAo9PuyYi1Sy9yDkuJpPtuSPDoPuGSAajIlTwodirsVdirYZlNVJB8RiqvHfXCftch4Nv8A&#xA;jkTEMxkIbHoyNyjcwynehPw/QcV2PLZER3kkbencrQ9nwGPc2CZGxRgIIBBqD0OQbXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqh7m9jiqq/FJ4dh88kItcsgCWyzSStyc18B2GTAa&#xA;DIlZhQ7FXYq7FXYq7FXYq7FXYqrxTjj6Uw5RHp4r8siQzEuh5Jhaw+khAfmrbrkCW6EaCtgZuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KrZJY4xV2Cj3xpBICGbUo60RCx+7JcLWcoa+vTdoDT6f6YeFfEP&#xA;c765cn7MB/H+mPCF4z3KcpupB++YQx9x4/R1OIpieI89lN7srGIYaqg/aP2j/TDTEz2oIbJMHYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYqjtOnNTCx90/iMhIN2KXRH5BudirsVdirsVdirsVdirsVdirsVdir&#xA;sVQN59WEvJyXen92Dt9JycbaZ1aHN5KNowI18FGHhYcZ6LDPOesjfecNMeItevP/AL8b7zjS8Rap&#xA;IxrQsfHrijdcIJz0jb7jjaeErhaXJ/3Wf1Y2E8BXCxuj+xT6Rg4gnwyuGnXB/lH048QT4RS7UhLb&#xA;zrHz3C1PHpucuxgEOLmuJpA3NzdNbuqVcmgoDxNK70O1Nsjmx3E1zZ6XMBMcR28xfu+1FWt2kcaR&#xA;yhm4KFLg7mgpU1xjhoAWstQJSJqrPRFi70xoyQ0ivTYMBSv0VwcEk+JCurQIIBG4PTAkFvFLsVdi&#xA;rsVXxPwlV/5SCflgKYminWVOW7FXYq7FXYq7FXYq7FXYq7FXYq7FUJe3ZjHpofjPU+AyUQ1ZJ1sl&#xA;uWNDsVdirsVTm3NYIz/kj9WVHm5UeSRDzzoa3d1aTyEXFtKYhDEkk7kBmQEiNWoS0b/D4CuHgKOM&#xA;IyLzAlzpc17ZWV1NJEeItHiaCUnlTb1Qgp+0aV299sFJ4tlM6/qHLkNDvRbqQJZGMHID4uRWNZGd&#xA;+NF+yN67bimGvNeLyTnIsmOXhhm1OYyvxRNh7laCld6ZlRsRFOtyVKZtDLztwXHCRHHE71HY9NiM&#xA;nzaxcd9iulCBAXg4cgCrITTcbVryxHvTLzCG65JqTVRxUL4CmYxc0BvFLsVdirsVdiqejplLmOxV&#xA;2KuxV2KuxV2KuxV2KuxV2KrZHCIznooriEE0Emd2dyzdWNTlriE2twq7FXYq7FUyguANN9eMerwR&#xA;iqrU8itdhxDHt2GU2DycsRMRRG7H4vM9/DzKaLwV2LyCKLUOTM3ViDYICT3JOT4fNjxeX4+Sle/m&#xA;A1qoaey+pA7f6aLqI1rSoC2zqRXxcD38EQQZoL/HF9c7W91AyNsGgjhqp8C0l0zf8kMPAjjZdos8&#xA;kmkwTTyvLIQxeSQANUMeoEcA26fYH09cgRu2A7Mdkcu7OerEk/TmcA6cmzauYYNkLcGChy5OzAgE&#xA;gDx32yNls4RyadpIfTMUrhWXkBupG5HQE4jfmgkxqi3ahri+j5bszAtTvTc/qwS2imHqmEblLkux&#xA;V2KuxV2Kro15yKv8xA+/AUgWU7ypy3Yq7FXYq7FXYq7FXYq7FXYq7FULqLkQBR+0d/kN8lFrynZL&#xA;Mscd2KuxV2KoHVbkxQiNTR5PwXvmHrMvDGhzLsuzdPxz4jyj96ceW2rpMQ/lLj/hif45HSn0Bt1w&#xA;/eljUsFkzOJdJtHmDHk7WF7fjbqPVMK1NczHAR0zaut28gFbhwC09pppSQ/CKfvriZlNBtuuDZO6&#xA;rMmt3RUC21FOKKpE1zaW6MQKci1r6r1bqaCngKY7LumEEFxaaLMksZSYhqp9ZmvKcvh2lnCv9FKY&#xA;x3kGOTaBSe2ljhmDyRiQD9k+PjmXIWHWwkAdxbhPGVAkj5cK+nvSgO9D4jBS8Q6hqWjKspk5SPXk&#xA;gFOIGwwhZd97o3QY+V6W7IpNfc7fxyvMdm7Si5Lrh1iVyzBaVALdK5ROYiLcnFjMpUAT7knj8wcT&#xA;SaP6QGX9dRmvjrj1Dup9jxP0yTC11O0uTSN/i/lP9mZeLUwnsObrdRocmIWRt5IrMhw3YqujcpIr&#xA;j9kg4CkGijrxzSG4jNUBrtkY9zdM8iEXHIkiBkNQcgQ2A2uxS7FXYq7FXYq7FXYq7FXYqgdU/wB1&#xA;f7L+GTg05uiAybS7FXYq7FWP383rXTt+yvwr8hmk1OTimXqtFh8PEB1O7IPLd5bRaYwllSPjKw+J&#xA;gOwPf55k6WYENz1cLXY5HJsL2RkvmHSY/wDd3M+CKT+NKZadTAdWiOiynogZvONkhISCZyPEUB+R&#xA;HLKzrI9A3x7Nn1ITmyuhdWsVwEKCQV4HqMyIS4hbhZcfBIx7lbJtaySCCT+8jV/9YA/rwgkMTEHm&#xA;ELJo+nv/ALr4nxUkfh0yYyyajp4HohZPLsR/u5mX2YA/qpkxnLUdIOhUzHcaPbTSqn1iR6BeIJCg&#xA;V3b2yjU56FgOZoNIOIiRYrPezXEhkYM5J67KPoBpmmnMyNl6XFhjjFRFKfObtGPpb+w5Bt2W/afp&#xA;6U43U+P0jqMV+5O9M1NpFWK42kOyse58Dmz02qv0y5uh1/Z/D64cuoTPM907sVRNpciMmOTeJuoP&#xA;bIkM4SrY8kwhhiiB9MbNv1rkCW+MQOSpgZOxV2KuxV2KuxV2KuxV2KoHVP8AdX+y/hk4NObogMm0&#xA;uxV2KqV1L6VvJJ3UbfM7DK8s+GJLdpsfHkEe8sYdmdvTQ0p9tvAeHzOaF69eiKgoooPbFVezs7m9&#xA;n9G2Tkw3diaKoPdjvlmPGZmg1Zc0cYuSeWPlQ8g93OrKOscVeoP85p+rMuGj7y6/J2j/ADQnttLa&#xA;EGG3kRhB+7ZEYEoV24mh2IzMAoOsMrNlIDN5v1WUpEi6NY1ZXnkAkuSKBT6SmqghgxV2FPsniwyz&#xA;YNe5Tiy0mCysGs4ZJ3Vg1ZJZpHkqw3IdiSv+x6ZElkAw5z6ZaNTRwSrtFe6wFR1NDUop9Yg7cqrX&#xA;J/jo1/jqvjtlPw+iszcSK3GlanMvTcBJ34ivjyxX8dVIStDHLBEkESyEeq8EDW7OF+ysgaSZjxJN&#xA;Pi+jNVqdQZGhyd9otIIDiP1F0VrcSiscZYePQfjlMMMpcg5OTU44bSNOktriLd42UeNNvvwSxSjz&#xA;C49Rjn9JBUSqmlR0NRlbe2CQajqOmFBFskt5fVgST+Yb/Pvm9xT4ogvIZ8XBMx7lTLGp2Ko6wuqE&#xA;Qudj9g/wyEg2459EfkG92KuxV2KuxV2KuxV2KuxVCaktYVbwb9YyUWrKNktyxodirsVS3XZmS1VE&#xA;FXkbb5DuflXMLXSqIHe7XsnHeQy7gk6IEXiN/EnqT45qnoHOpZCASD7bYqz3S4beKwg9CMRo6K/E&#xA;dyyg1J7n3zc4wBEU83mkTM2bYfpXlvzBdxy2N4z2WjSTSzz0kpdSTPPNLLxop4xyNOBy5V4p0+Ku&#xA;XmQcYRLING8q6bpWpXV7bRhTMiRRbszKoJeQszlmZ5JG5OxNWoK9MiZWyEaQWpeeI4dRGmWFhcXl&#xA;6Zjb7Lwi9VSG9MyHZSYhI4r2WvdakQQZ9E10aPzB8cusSwc3CiO2tlbgnUn42+Jj8XHw2B2qcia6&#xA;MhfV5t+YqfmMPNUX1PVgfL5kiZtKtqRXAiYUZ34VeSMupB5MO/w0yGYHw5cP1U3aUgZo8f02pG+1&#xA;+I1NxdxkdDzkB/XnOk5o8+IfN7OMdNPlwH/Sob69fc+f1iTnWvLm1a/flXiS73I8GFVQ+Sudc1gm&#xA;pvJSf9c5b+ay/wA4tB7PwH+CPyb/AE7rFKG6cjpua4fzeX+cWH8mae74AojUr4f7tP3D+mVeJLvc&#xA;n8vDubGqXw/3b+C/0x8WXej8vDuRMHmPWIF4JP8AB/KUQ9foy/HrcsBQOzi5uytPkNyjv7z+tNNK&#xA;8w6lLcRfWJA8buFK8VGxNK7DMzT63IZDiOzrNb2RgjjlwCiBfMsszdvJOxVN7Sb1YQx+0Nm+eVEU&#xA;5MJWFbAzdirsVdirsVdirsVdiqldrytpB4Cv3b4RzYzGyT5a4rsVdiqT6y9bhE7Kv4k5qtdL1AeT&#xA;0HZMKxk95S/MJ2rsVZpbXS2nl6O5ZHkW2tQ7JGpZ29OOpCqOpNNhm5w7xHueb1G05e8sbtfOXmTW&#xA;reNtF0ZlhuLZGTUJXBgSeZAduXpmSOJy3JkB5cegqMv4QObjCZPIJtpWleZGu4r7WNT3QE/o61UL&#xA;ACxY8Xdhyk4BgAQF6b9ciSOjIA9VTU/OPl3T7mO1muPWvpH4RWcCNNOWqFbiiAn4edT7V8DiIkqZ&#xA;AJ3kWTsVS7XdPnvrExwScJVPJVP2Wp2OU58ZnGg5WkzDHOzyYZC8qNV4+Eikq8bqCKqaEEMKEZq9&#xA;wXempBMo4dFvzSSyhjmp8SogUE9yKUzOwRxZNjEcTqdXPU4TxRnLg9/JqTytoj9ICh8Vdv4k5bLs&#xA;/Cen2uPDtvUj+K/gEkv/AC/p8c5jgeSiijVIO/3ZqtRpoRlUbeg0XaGWcOKYG/3INtCH7M30Ff7c&#xA;xzg83OGs7wpjQrlnCpIh5GgqSOv0HEack0mWuiASQdk30zy7qMNxF66qI43DFwwOwNaeObDT6HJG&#xA;QvkHT6ztjDPHLhJ4iK5MqzdPJuxVGaa9JWTsw/EZCTbiO6Y5BvdirsVdirsVdirsVdirTryRl8QR&#xA;9+KCkeXOI7FXYqx69l9W6kcdK0HyG2aPPPimS9ZpMXBiiFDKXJbVJJHWOJeUshCxr4semGMSTQYy&#xA;kIizyZ9bRLa2cUTNVYI1Uue4RaVP3ZuYxoAPNZJ2TI+9db3ENxAk8Lc4pByRqEVB9jvki1wmJCxy&#xA;KlcGO6+s6fykjZofilTYqJeSgoxBHIcT2wo4wZGPl96D0Tyr5f0SJY9Nso4SCGMxHOUtx4cjI1Wq&#xA;R13xMiUiIC3WNU1O0uIore3VopRtccLmYqwNCDHbwuANxu0i4QFJKTz+ZtVgb99cRxGo/dyafLGd&#xA;96c5LuNemHhDHiKnF50u5JJUe60+ARqXX1nhVnpvxCC7LBiP5qD3x4V40ubUZ9SnaeWezkcggLbN&#xA;HzPHf40jnulrx/y8w9Xg24g7Ls/VEHgPI8nAkEEGhHQjNaDTuiARRRb6ve+lwVVLdDJWh/VTMv8A&#xA;OT4a697rh2Xi4+Lp3IJWZhVhQ/OuYbsqbxV2KshsrgT26v8AtdH+YzeYMnHEF5PV4PDyEdOivlzj&#xA;OxVXsf8AepPp/UcjLkzx/Um2VuS7FXYq7FXYq7FXYq7FVNbhGnaGh5KK17YaY8W9JORQkHtlritY&#xA;qo3k3pW0j96UX5nbKc8+GBLkaTF4mQBjuaN612Kpj5bUDWomY1JDhBTp8JO3vmRpfrDia7+6Kf8A&#xA;mC8s4IraO4kuYmnm4QPaRySv6ioz0KRrIWHFDUcTm2i85mhxCrI9yWerFLqrPaancWcs1o1tp2n3&#xA;EEttCJACQ6JKkauy0r9kmn+TthSABsENpGoeZLvytdR6fKJtWs7lLf1LniXA/dSTIxHFDJEsrRgn&#xA;Yld8SBagmmUaadQOn251IRi/9NfrIgqY/Up8XHlvTIlmETgSh3tdPe4Znhia4ZQWYqpcqNhXatMb&#xA;6Lw7WroiooVAFUdFAoBirbKGBVhUHYg+GKgsJ1jTWsboqB+5erRN7eH0Zqc2LgPk9Bpc/iR8+qAy&#xA;lyXYq7FXYqibK9+qyFm/uj9sfxzI0+fwz5OHrNJ40dvqHJbb+cLV714Z4zFBWkU25+lh2rl0O04m&#xA;ZBFR73GzdgZBjEonin1H6mQKyuoZSGVhUMNwRmzBvk6CUSDR5orT1rcA/wAoJ/h/HBLkzxDdNMrc&#xA;h2KuxV2KuxV2KuxV2KoNPh1Jgf2ht9wOT6NQ+tAzCkzjwY/ryQaZc1nTc4UMXuvMtpeERKrRorE8&#xA;mpQ9h06ZpM+ujk2Gwes0nZE8HqJBJDgQRUbg9DlDkuxVH6E3HVrc/wCUR96kZdpz6w42rF4iy3Ud&#xA;Ot7+39GfkvFlkiljYpIjqaq6MOhH9h2zbg088RbHtQ0m7upxpN3qV9NDOPgnZbQFXRTIsq+narxK&#xA;MooeQIalBkgerjSyHjEKO/X8D9KReVhrdzpD3c9hfI+pyy3qWtnJHbRlrgl1lknMgk+zxAC9v2WO&#xA;SlVtsbpn2mQ3kNhBFeSie6RAJpR0Ld6bCtOle+VlsCJwJSu503UX1Jru2uUg5IkZLR+oxVCTx3Kg&#xA;CrHpvmPLFLi4gaczHnxjHwSiTuTzpDx6lFPaLBHfTz3EbN6s0EI5kDlswClVr+z36HIDKCKEiT5B&#xA;tlgMZcRjERPIE+7zs+fxCM02glZTJdSvxNXuFZV2beg4qtanb2y3Fz/iPvaM/LlAe5brltHcQIj+&#xA;Joe4PjlssYmKLjRzyxSEgxG4t5IJCjj5HsRmoy4jA0XocGeOWPFFSytvdirsVS/VrorEYI93b7dO&#xA;y/25VlltQcrS47PEUnX4hxP+xPgcxhu7ApjpOu3umsFFZLevxQt0/wBiexzK02sni849zrtd2Zj1&#xA;AvlPv/X3vTNCkS4sI7xVZRcDkqsKEDN9DKJxEh1eOnpzimYnmEwySHYq7FXYq7FXYq7FXYqsMMZl&#xA;EpHxgUBw2jhF2ld4vG5ceJr9++WR5ONMbpJ5mv8A6ppcgU0ln/dJ9P2j92YevzcGM952dn2PpfFz&#xA;i/pjuf0fawP/AHWPc/qznOj3XVXt7y4t1qj/AAk7IdxkozIDXkxRlzR8GtI20sZU+K7j8cujmvm4&#xA;s9IRyKa6NqNo+pWvCQVMqChqOrAd8vwZAZj3uFqsExjlY6F6Hm7eXdiq2KKKKJIokWOKNQscagKq&#xA;qooAANgAMVXYq7FXYqpXMDTRhFleEhg3OMgN8JrT4g2x75GUbHOmcJ8JugfettrOO2G0kshIpWWR&#xA;n/AmmCEK705Mpl0A9wAUtSZTCtCCQ3T6DlsXGy8kqnt4p04SCo7HuPljkxiYoowZ5YpXFJrvTbmA&#xA;1jQzJ4rSo+Yr+rNZl0ko8tw7/T9o457S9JQasWFSpX2NP4ZiOwQ95epbpSoMrfZX+JyE5gNuLEZn&#xA;ySB3d5GdyeZNSffMMk27UAAUOTjxY7mjePY4ea8k/wDK3lmbVZxLcLSwib437uRvwUj8czdLpTkN&#xA;n6Q6vtHXjDGo/Wfs83pqqqqFUBVUUVRsAB2Gb0B5Em28UOxV2KuxV2KuxV2KuxV2KoDUojVZR0+y&#xA;38MnEtOUdXnHmu/+s6mYVNYrYcB/rH7R/h9GaDtHNx5K6Rex7D0vh4eI/VPf4dP1/FKGFOKjr/XM&#xA;E9zuA56Ci/yj8cSocv7R+j78QpVLOf6vPHcBamJ0anjxbl/DJQlRvuYZYcUTHvBeg6X54GoXv1ZL&#xA;IoOBcuZK0pTtx9/HN3p9Z4s+Gq2eT13Zv5fFxmV71VJwdTk7IPxzYcDpPFK06lP4KPoP9cPCEeKV&#xA;hv7k/tAfQMeEI8QrTeXJ/wB2H8Bh4QjjK03Fwf8AdjfecaCOI960ySHqxP0nGlsrcKHYq7FXYqkX&#xA;mRoLSFZlFJ5W4qP2SaVqc1faEYxHEOZeh7FnPJIwP0xHxYdI7yszvvL+1XvmkO/vesiABQ5NxRSz&#xA;usUaM8rbRqoJZj4UHXEAy26rKQiLJoMu0DyBI5S41b4E6i1U/Ef9dh0+Q3+WbLT9nnnP5Oj1vbQH&#xA;pxfP9TOooooo1iiQJGgoiKKAAdgBm2AAFB5uUjI2dyuwodirsVdirsVdirsVdirsVdiq2RFdGRuj&#xA;CmKkW8n1zQb/AEq8f6wDJCxJiuafC/ffwbxGc7n08sct/m9to9ZDNAcOx7u5LFJ3buB19zmOC5pW&#xA;9DvgS2P7s/Mfxw9EdW1rxY1pWm/viFLJPJkNbu4m/kiVP+CNf+NM2vZcfUT5fj7nnPaLJWOMe+RP&#xA;y/tZZm7eTdirsVdirsVdirsVdirsVdiqy80Y6javbyxng3RzsVPZhXKc+OOSPCXK0mbJhmJx/tSm&#xA;w/Logg391UDYJANyO1WcfwzV4+zv5x+T0Wbtz+ZH5/sZTpujabpsfCzgWMkUZ+rt82O+Z+LDCA9I&#xA;dPn1WTKbmbRuWuO7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqpz28FxE0U8ayxN9pHAIP0HBKIIosoTM&#xA;TcTRYtqf5e2U3J7CY2zNv6b1dPoNeQ/HNfl7OifpNO60/bc47THF9jHLvyP5htyeEK3CfzRMD+Dc&#xA;W/DMGegyx6W7XF2vglzPD70sn0rU4AomtJ41A3LRsB+IyiWGY5g/JzIanHLlKJ+IQpUgKrAg1O3Q&#xA;9shTbfczHydFSynmPWSUgfJQKfrzedmR9BPeXkPaHJeWMe6P3p/mzdA7FXYqvEUp6Ix+g4LTRXC2&#xA;uD0jb6RT9eNhPCVwsbo/sU+ZGDiCfDKoNNnPVlA+n+mPEnwiqrpi1+KQkeAFMHGyGJVXT7ZeoLfM&#xA;/wBKYOIshjCskUafYUL8hkbZgALsUuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;Vp0RxR1DDwIqMBFpBI5NLFGooqBR4AAYQKUm+bfFfAYopug8MVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVf/9k="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:fd20db18-730d-2447-a161-1104666592e0"
    stRef:documentID="xmp.did:fd20db18-730d-2447-a161-1104666592e0"
    stRef:originalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:AC3D3EC9D6DEE611ADF3FA58164AFD71"
      stEvt:when="2017-01-20T09:07:56+03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:02801174072068118083F6D0A67B0728"
      stEvt:when="2017-01-20T18:36:10+03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:05801174072068118083F6D0A67B0728"
      stEvt:when="2017-01-20T21:11:37+03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:577FABBD61206811822AA8872E1D75D1"
      stEvt:when="2019-04-07T19:22:06+03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:0880117407206811822A8072EAEFE205"
      stEvt:when="2019-05-11T00:15:08+03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:F87F117407206811822AB2A6B75D99AD"
      stEvt:when="2019-05-18T09:11:40+03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1bca1ed9-b3c4-f94f-a7c2-08ad46e4e96d"
      stEvt:when="2022-02-05T17:50:22+03:00"
      stEvt:softwareAgent="Adobe Bridge 2022 (Windows)"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:99089caf-8087-7d41-8eb0-e57f74a7a2ef"
      stEvt:when="2022-03-12T17:14:10+05:00"
      stEvt:softwareAgent="Adobe Illustrator 24.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:8216b425-ae69-bc4b-9081-08fd29865b0b"
      stEvt:when="2022-03-12T18:08:09+05:00"
      stEvt:softwareAgent="Adobe Illustrator 24.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:44339adf-be5e-7b4a-a72e-35259330d531"
      stEvt:when="2022-03-12T20:20:37+05:00"
      stEvt:softwareAgent="Adobe Illustrator 24.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:d387f9c3-c18f-3b45-8f2c-e3397db2e5d3"
      stEvt:when="2022-03-14T10:39:59+05:00"
      stEvt:softwareAgent="Adobe Illustrator 24.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:44447140-6387-8043-9366-aa56ea192ff6"
      stEvt:when="2022-03-18T17:31:12+05:00"
      stEvt:softwareAgent="Adobe Illustrator 24.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:7028e4d1-3041-a04d-ac52-d404fd62a430"
      stEvt:when="2022-03-18T19:58:59+05:00"
      stEvt:softwareAgent="Adobe Illustrator 24.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:ea9cdd70-9b00-5941-9c11-d03d460a8f9e"
      stEvt:when="2022-04-08T22:20:13+05:00"
      stEvt:softwareAgent="Adobe Illustrator 24.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:d64efcae-d463-f64e-b7ce-026ea41adac0"
      stEvt:when="2022-04-10T23:09:08+05:00"
      stEvt:softwareAgent="Adobe Illustrator 24.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:fd20db18-730d-2447-a161-1104666592e0"
      stEvt:when="2022-04-11T10:47:36+05:00"
      stEvt:softwareAgent="Adobe Illustrator 24.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:29870882-0584-7440-a24e-c7a271504a97"
      stEvt:when="2022-04-11T10:52:12+05:00"
      stEvt:softwareAgent="Adobe Illustrator 24.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:f613a62a-c0e5-0a4e-b3ce-73f48030020a"
      stEvt:when="2022-05-01T10:54+03:00"
      stEvt:softwareAgent="Adobe Bridge 2022 (Windows)"
      stEvt:changed="/metadata"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="3000.000000"
    stDim:h="2000.000000"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="R=255 G=255 B=255"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
       
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
3000 2000 li
3000 0 li
cp
clp
3000 2000 mo
0 2000 li
0 0 li
3000 0 li
3000 2000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
1051.86 400.182 mo
1008.27 439.733 949.402 453.379 892.109 456.776 cv
859.158 458.729 826.135 457.626 793.155 458.428 cv
776.705 458.829 760.252 459.703 743.909 461.67 cv
743.001 461.779 742.094 461.895 741.186 462.007 cv
741.56 461.961 743.779 461.629 741.584 461.955 cv
739.64 462.244 737.695 462.52 735.754 462.829 cv
731.93 463.437 728.116 464.112 724.315 464.852 cv
717.255 466.226 710.24 467.826 703.282 469.646 cv
694.986 471.815 686.772 474.299 678.663 477.088 cv
674.739 478.437 670.839 479.856 666.967 481.347 cv
665.16 482.044 663.359 482.755 661.564 483.482 cv
660.795 483.793 660.027 484.108 659.26 484.423 cv
654.356 486.436 661.131 483.546 658.343 484.817 cv
642.939 491.842 627.96 499.374 613.561 508.316 cv
605.303 513.445 592.767 510.357 588.172 501.659 cv
583.367 492.565 586.014 481.743 594.829 476.269 cv
648.502 442.937 709.277 425.632 772.134 422.131 cv
804.775 420.312 837.48 421.396 870.145 420.563 cv
884.879 420.188 899.611 419.432 914.261 417.781 cv
915.782 417.61 917.299 417.421 918.818 417.24 cv
919.689 417.136 922.458 416.957 918.438 417.304 cv
919.196 417.239 919.96 417.091 920.712 416.982 cv
924.249 416.47 927.777 415.904 931.295 415.278 cv
937.815 414.118 944.298 412.755 950.725 411.155 cv
958.09 409.321 965.38 407.177 972.544 404.669 cv
976.107 403.422 979.601 402.024 983.118 400.66 cv
979.494 402.065 984.284 400.142 985.581 399.551 cv
987.174 398.827 988.756 398.08 990.328 397.313 cv
997.048 394.033 1003.57 390.35 1009.82 386.236 cv
1012.94 384.177 1016 382.014 1018.98 379.738 cv
1015.85 382.134 1020.22 378.655 1021.08 377.931 cv
1022.62 376.63 1024.12 375.292 1025.61 373.939 cv
1032.8 367.416 1044.85 366.308 1051.86 373.939 cv
1058.39 381.051 1059.53 393.216 1051.86 400.182 cv
1051.86 400.182 li
cp
.854902 .937255 .94902 rgb
f
2263.84 327.528 mo
2253.2 317.65 2242.21 308.156 2230.86 299.105 cv
2229.39 297.932 2227.9 296.783 2226.43 295.608 cv
2224.78 294.291 2226.77 295.864 2227 296.038 cv
2226.36 295.546 2225.72 295.056 2225.08 294.567 cv
2222.09 292.284 2219.07 290.03 2216.04 287.806 cv
2210.18 283.517 2204.25 279.339 2198.24 275.275 cv
2174.19 259.017 2148.9 244.585 2122.67 232.148 cv
2118.78 230.305 2114.88 228.507 2110.95 226.753 cv
2109.23 225.985 2107.51 225.227 2105.78 224.476 cv
2105.04 224.155 2104.3 223.837 2103.56 223.516 cv
2098.82 221.457 2105.57 224.329 2102.8 223.184 cv
2095.1 219.999 2087.35 216.935 2079.53 214.05 cv
2070.45 210.7 2063.3 201.32 2066.57 191.223 cv
2069.45 182.318 2079.65 174.665 2089.4 178.261 cv
2147.89 199.834 2202.21 230.111 2251.4 268.373 cv
2264.77 278.773 2277.67 289.758 2290.08 301.284 cv
2297.21 307.906 2297.28 320.92 2290.08 327.528 cv
2282.45 334.536 2271.44 334.592 2263.84 327.528 cv
2263.84 327.528 li
cp
f
2424.58 767.248 mo
2424.56 769.533 2424.61 771.814 2424.76 774.094 cv
2424.82 775.004 2424.92 775.911 2424.99 776.82 cv
2425.34 781.3 2424.46 774.063 2424.93 776.631 cv
2425.72 780.902 2426.56 785.111 2427.83 789.272 cv
2428.5 791.457 2429.3 793.58 2430.06 795.733 cv
2431.23 799.048 2429.04 793.658 2430.03 795.722 cv
2430.53 796.75 2430.98 797.799 2431.48 798.825 cv
2433.38 802.724 2435.55 806.494 2437.95 810.107 cv
2439.08 811.8 2440.21 813.585 2441.53 815.131 cv
2440.03 813.384 2440.2 813.429 2441.63 815.119 cv
2442.36 815.993 2443.11 816.855 2443.87 817.703 cv
2446.78 820.919 2449.9 823.939 2453.21 826.732 cv
2453.56 827.028 2453.91 827.319 2454.27 827.605 cv
2455.32 828.457 2454.96 828.195 2453.19 826.82 cv
2453.23 827.178 2455.07 828.209 2455.39 828.439 cv
2457.25 829.76 2459.15 831.012 2461.1 832.189 cv
2463.05 833.366 2465.05 834.469 2467.08 835.49 cv
2467.9 835.9 2468.73 836.28 2469.55 836.679 cv
2473.74 838.718 2465.82 835.231 2470.16 836.948 cv
2479.16 840.506 2486.44 849.524 2483.12 859.775 cv
2480.3 868.497 2469.96 876.56 2460.29 872.736 cv
2417.39 855.762 2387.21 813.947 2387.46 767.248 cv
2387.51 757.543 2395.96 748.241 2406.02 748.691 cv
2416.03 749.14 2424.63 756.846 2424.58 767.248 cv
2424.58 767.248 li
cp
f
434.57 1382.34 mo
433.21 1404.12 433.485 1425.97 435.512 1447.7 cv
435.761 1450.38 436.036 1453.05 436.338 1455.73 cv
436.472 1456.91 436.611 1458.1 436.755 1459.29 cv
436.806 1459.71 437.412 1464.39 437.111 1462.16 cv
436.852 1460.25 437.35 1463.8 437.398 1464.13 cv
437.614 1465.61 437.836 1467.08 438.067 1468.56 cv
438.484 1471.22 438.926 1473.87 439.394 1476.52 cv
441.316 1487.41 443.694 1498.21 446.459 1508.91 cv
448.882 1518.3 443.376 1529.49 433.498 1531.74 cv
423.821 1533.94 413.267 1528.84 410.67 1518.78 cv
399.207 1474.39 394.597 1428.11 397.455 1382.34 cv
398.059 1372.67 405.558 1363.31 416.012 1363.78 cv
425.548 1364.21 435.218 1371.96 434.57 1382.34 cv
434.57 1382.34 li
cp
f
gsave
442.135 1130.94 mo
503.84 1404.76 424.564 1654.06 634.801 1784.5 cv
703.25 1826.96 802.378 1856.83 947.06 1870.83 cv
977.664 1873.8 1010.3 1876.05 1045.13 1877.57 cv
1097.15 1879.83 1154.04 1880.43 1216.28 1879.29 cv
1275.55 1878.19 1339.67 1875.5 1409.04 1871.14 cv
1538.05 1863.02 1663.02 1850.93 1780.45 1833.57 cv
1840.45 1824.71 1898.47 1814.46 1954.05 1802.67 cv
1984.66 1796.18 2014.53 1789.21 2043.59 1781.76 cv
2060.35 1777.45 2076.84 1772.99 2093.05 1768.35 cv
2095.1 1767.76 2097.14 1767.17 2099.18 1766.58 cv
2121.76 1760.02 2143.79 1753.13 2165.2 1745.87 cv
2188.3 1738.06 2210.71 1729.82 2232.34 1721.17 cv
2324.41 1684.32 2402.75 1639.7 2463.38 1585.83 cv
2564.32 1496.16 2616.19 1380.86 2600.66 1233.13 cv
2574.13 981.106 2303.35 849.063 2330.11 740.721 cv
2412.94 405.44 2182.49 198.639 1775.63 166.816 cv
1260.76 126.552 1102.71 498.502 892.449 479.68 cv
551.654 449.172 348.055 713.426 442.135 1130.94 cv
cp
clp
442.135 1130.94 mo
503.84 1404.76 424.564 1654.06 634.801 1784.5 cv
703.25 1826.96 802.378 1856.83 947.06 1870.83 cv
977.664 1873.8 1010.3 1876.05 1045.13 1877.57 cv
1097.15 1879.83 1154.04 1880.43 1216.28 1879.29 cv
1275.55 1878.19 1339.67 1875.5 1409.04 1871.14 cv
1538.05 1863.02 1663.02 1850.93 1780.45 1833.57 cv
1840.45 1824.71 1898.47 1814.46 1954.05 1802.67 cv
1984.66 1796.18 2014.53 1789.21 2043.59 1781.76 cv
2060.35 1777.45 2076.84 1772.99 2093.05 1768.35 cv
2095.1 1767.76 2097.14 1767.17 2099.18 1766.58 cv
2121.76 1760.02 2143.79 1753.13 2165.2 1745.87 cv
2188.3 1738.06 2210.71 1729.82 2232.34 1721.17 cv
2324.41 1684.32 2402.75 1639.7 2463.38 1585.83 cv
2564.32 1496.16 2616.19 1380.86 2600.66 1233.13 cv
2574.13 981.106 2303.35 849.063 2330.11 740.721 cv
2412.94 405.44 2182.49 198.639 1775.63 166.816 cv
1260.76 126.552 1102.71 498.502 892.449 479.68 cv
551.654 449.172 348.055 713.426 442.135 1130.94 cv
cp
f
954.805 734.584 mo
975.78 721.062 1013.72 700.279 1036.35 690.294 cv
1109.22 658.146 1109.72 714.419 1182.59 682.271 cv
1127.44 811.321 li
1115.66 840.178 1092.93 862.495 1067.55 878.196 cv
1042.17 893.897 1014.02 903.645 986.102 913.284 cv
920.919 935.789 847.69 1182.84 782.507 1205.35 cv
800.74 1084.99 877.697 784.293 954.805 734.584 cv
cp
.992157 .729412 .627451 rgb
f
1232.75 943.07 mo
1232.74 943.069 li
1192.46 924.385 li
1192.43 924.361 li
1192.43 924.361 1192.43 924.361 1192.42 924.36 cv
1184.85 920.84 li
1184.81 920.836 li
1148.64 904.044 li
1148.62 904.041 li
1077.97 871.256 li
1077.94 871.252 li
966.929 819.764 li
953.322 813.446 li
882.947 999.733 li
886.963 1007.95 li
887.221 1008.48 li
887.238 1008.51 li
888.142 1010.36 li
889.305 1012.74 li
889.314 1012.75 li
898.53 1031.7 li
898.547 1031.72 li
911.148 1057.55 li
911.128 1057.55 li
908.043 1058.3 li
908.034 1058.3 li
908.034 1058.3 877.516 1094.03 846.574 1130.29 cv
846.563 1130.3 846.552 1130.3 846.55 1130.32 cv
846.539 1130.33 846.528 1130.34 846.518 1130.35 cv
846.515 1130.37 li
846.513 1130.39 846.494 1130.38 846.491 1130.4 cv
846.491 1130.4 846.49 1130.41 846.471 1130.41 cv
841.814 1135.87 837.156 1141.34 832.571 1146.69 cv
832.57 1146.7 832.551 1146.7 832.549 1146.72 cv
821.529 1159.63 811.067 1171.89 802.585 1181.83 cv
802.574 1181.84 li
802.563 1181.85 li
796.554 1188.88 791.544 1194.75 788.028 1198.86 cv
784.702 1202.77 782.71 1205.1 782.516 1205.34 cv
782.515 1205.35 782.515 1205.35 782.515 1205.35 cv
782.513 1205.36 li
781.819 1231.4 742.631 1346.16 699.358 1465.46 cv
665.423 1559.01 628.971 1655.37 606.557 1713.95 cv
606.532 1713.99 606.514 1714.06 606.487 1714.12 cv
600.535 1729.65 595.596 1742.53 591.952 1751.95 cv
591.951 1751.96 li
590.837 1754.81 589.869 1757.33 589.01 1759.52 cv
590.116 1759.51 591.944 1759.53 594.319 1759.56 cv
594.338 1759.56 li
601.595 1759.68 613.924 1759.92 626.196 1760.16 cv
626.215 1760.16 li
629.826 1760.24 633.41 1760.31 636.896 1760.36 cv
640.823 1760.42 644.571 1760.5 647.971 1760.55 cv
650.942 1760.58 653.637 1760.63 655.927 1760.63 cv
658.956 1760.67 661.248 1760.65 662.582 1760.63 cv
665.839 1760.56 669.1 1760.45 672.383 1760.33 cv
686.873 1759.86 701.716 1759.14 716.904 1758.15 cv
716.923 1758.16 li
720.59 1757.93 724.26 1757.68 727.972 1757.41 cv
727.991 1757.42 li
745.777 1756.14 764.027 1754.51 782.737 1752.55 cv
785.798 1752.24 788.881 1751.91 792.007 1751.55 cv
806.853 1749.9 821.981 1748.02 837.384 1745.9 cv
840.15 1745.52 842.918 1745.12 845.696 1744.72 cv
860.489 1742.62 875.526 1740.28 890.835 1737.71 cv
891.565 1737.59 892.303 1737.47 893.031 1737.35 cv
893.041 1737.35 li
893.46 1737.29 893.891 1737.2 894.33 1737.13 cv
896.038 1736.84 897.744 1736.57 899.455 1736.25 cv
900.873 1736.01 902.299 1735.79 903.718 1735.55 cv
903.737 1735.55 li
916.185 1733.5 928.812 1731.51 941.624 1729.61 cv
944.344 1729.2 947.055 1728.8 949.774 1728.4 cv
958.489 1727.12 967.298 1725.88 976.162 1724.67 cv
979.087 1724.27 981.993 1723.86 984.907 1723.48 cv
984.926 1723.48 li
988.347 1723.02 991.788 1722.56 995.229 1722.1 cv
995.238 1722.1 li
998.829 1721.62 1002.45 1721.17 1006.04 1720.69 cv
1006.05 1720.69 li
1015.07 1719.53 1024.15 1718.4 1033.27 1717.29 cv
1035.99 1716.96 1038.7 1716.64 1041.42 1716.32 cv
1042.99 1716.12 1044.57 1715.94 1046.15 1715.75 cv
1049.76 1715.33 1053.39 1714.89 1057.01 1714.49 cv
1057.02 1714.49 li
1059.8 1714.16 1062.57 1713.84 1065.35 1713.52 cv
1066.22 1689.1 1067.55 1664.49 1069.2 1640.19 cv
1069.2 1640.17 li
1070.23 1624.6 1071.39 1609.16 1072.67 1593.95 cv
1078.81 1520.2 1087.09 1452.38 1093.49 1405.14 cv
1093.47 1405.12 1093.49 1405.13 1093.49 1405.13 cv
1094.06 1400.97 1094.6 1396.96 1095.13 1393.15 cv
1095.13 1393.11 li
1095.43 1391.02 1095.71 1389.04 1095.98 1387.08 cv
1095.98 1387.06 li
1096.27 1385.08 1096.53 1383.17 1096.8 1381.3 cv
1099.31 1363.65 1101.29 1350.7 1102.37 1343.8 cv
1102.59 1342.37 1102.77 1341.21 1102.92 1340.31 cv
1102.92 1340.29 li
1103.16 1338.85 1103.27 1338.09 1103.27 1338.09 cv
1103.34 1338.07 1103.41 1338.04 1103.48 1338 cv
1105.45 1337.18 1107.48 1336.33 1109.55 1335.44 cv
1109.57 1335.44 li
1111.43 1334.66 1113.3 1333.82 1115.23 1332.97 cv
1115.23 1332.96 1115.24 1332.96 1115.24 1332.96 cv
1128.3 1327.16 1142.72 1319.74 1156.32 1308.42 cv
1156.33 1308.41 li
1182.3 1286.83 1205.28 1251.06 1210.18 1185.19 cv
1210.27 1183.83 1210.38 1182.51 1210.51 1181.18 cv
1210.52 1181.17 1210.52 1181.16 1210.52 1181.16 cv
1210.78 1177.77 1211.12 1174.41 1211.48 1171.07 cv
1211.49 1171 li
1211.8 1168 1212.16 1164.99 1212.56 1162.04 cv
1212.61 1161.64 li
1212.63 1161.63 1212.63 1161.63 1212.63 1161.61 cv
1212.64 1161.6 1212.64 1161.6 1212.62 1161.57 cv
1212.78 1160.26 1212.97 1158.96 1213.15 1157.68 cv
1213.19 1157.37 li
1213.23 1157.01 1213.28 1156.66 1213.34 1156.31 cv
1213.34 1156.3 li
1213.37 1156.06 1213.42 1155.81 1213.45 1155.58 cv
1213.45 1155.57 li
1220.1 1109.68 1233.43 1068.81 1246.61 1036.89 cv
1246.62 1036.87 li
1248.11 1033.27 1249.59 1029.79 1251.05 1026.42 cv
1251.05 1026.42 1251.05 1026.42 1251.05 1026.4 cv
1251.05 1026.4 1251.05 1026.39 1251.06 1026.39 cv
1251.07 1026.39 1251.07 1026.39 1251.07 1026.38 cv
1251.12 1026.27 1251.17 1026.16 1251.21 1026.07 cv
1251.61 1025.19 1251.98 1024.34 1252.36 1023.49 cv
1252.37 1023.45 li
1268.28 987.664 1282.49 966.147 1282.49 966.147 cv
1232.75 943.07 li
cp
f
1156.09 1311.58 mo
1132.79 1330.07 1105.11 1342.19 1075.77 1346.99 cv
1073.17 1347.41 1072.97 1343.32 1075.54 1342.9 cv
1104.16 1338.23 1131.13 1326.18 1153.84 1308.17 cv
1155.9 1306.53 1158.14 1309.95 1156.09 1311.58 cv
1156.09 1311.58 li
cp
.905882 .592157 .501961 rgb
f
1095.71 1638.27 mo
1095.72 1638.25 li
1097.36 1621.24 1097.53 1609.98 1095.72 1605.83 cv
1093.53 1600.81 1085.49 1597.21 1072.67 1593.95 cv
1070.56 1593.41 1068.33 1592.88 1065.99 1592.36 cv
1065.68 1592.29 1065.34 1592.22 1065.02 1592.14 cv
1061.6 1591.39 1057.93 1590.66 1054 1589.9 cv
1044.75 1588.13 1034.22 1586.31 1022.5 1584.25 cv
1022.48 1584.25 li
1017.61 1583.4 1012.56 1582.5 1007.3 1581.55 cv
1007.29 1581.55 li
1004.16 1580.98 1000.95 1580.39 997.687 1579.78 cv
996.816 1579.62 995.927 1579.44 995.045 1579.29 cv
995.026 1579.29 li
993.532 1579.01 992.03 1578.72 990.508 1578.44 cv
969.962 1574.49 947.145 1569.65 922.69 1563.21 cv
921.371 1562.87 920.026 1562.5 918.668 1562.15 cv
917.226 1561.77 915.786 1561.38 914.345 1560.99 cv
911.295 1560.15 908.236 1559.3 905.144 1558.4 cv
890.232 1554.14 874.807 1549.27 859.014 1543.63 cv
856.556 1542.75 854.087 1541.88 851.606 1540.94 cv
843.507 1537.98 835.344 1534.8 827.091 1531.41 cv
824.274 1530.25 821.441 1529.07 818.592 1527.86 cv
818.573 1527.85 li
803.799 1521.55 788.806 1514.54 773.685 1506.72 cv
771.363 1505.52 769.053 1504.3 766.716 1503.06 cv
756.826 1497.81 746.919 1492.21 736.962 1486.21 cv
736.241 1485.78 735.531 1485.33 734.826 1484.93 cv
733.931 1484.4 733.046 1483.86 732.17 1483.33 cv
732.161 1483.33 li
731.969 1483.21 731.795 1483.11 731.602 1483 cv
728.505 1481.16 725.566 1479.4 722.701 1477.75 cv
722.672 1477.75 li
713.861 1472.64 706.111 1468.47 699.358 1465.46 cv
676.976 1455.44 665.213 1457.89 660.202 1480.51 cv
657.495 1492.9 625.713 1568 587.113 1657.04 cv
572.894 1689.78 536.599 1775.11 499.228 1862.88 cv
1049.7 1928.85 li
1054.86 1898.26 1059.98 1867.93 1064.61 1840.42 cv
1073.26 1789.15 1080.21 1747.62 1082.68 1732.32 cv
1082.88 1731.03 1083.1 1729.78 1083.29 1728.52 cv
1087.76 1699.84 1091.42 1674.95 1093.85 1655.1 cv
1094.59 1648.99 1095.22 1643.38 1095.71 1638.27 cv
cp
1 .552941 .403922 rgb
f
724.578 1475.78 mo
685.36 1515.66 694.574 1574.47 685.646 1624.92 cv
683.122 1639.19 678.878 1653.36 671.433 1665.88 cv
664.592 1677.39 655.722 1687.5 648.079 1698.46 cv
640.221 1709.72 634.497 1721.62 631.069 1734.94 cv
627.348 1749.4 625.917 1764.28 623 1778.9 cv
616.966 1809.13 601.802 1837.22 579.746 1858.78 cv
574.759 1863.66 581.469 1872.3 586.504 1867.38 cv
605.696 1848.62 620.487 1825.62 628.75 1800.01 cv
637.469 1773 635.935 1742.74 649.23 1717.25 cv
655.621 1704.99 664.894 1694.5 672.931 1683.33 cv
680.877 1672.3 687.297 1660.5 691.383 1647.49 cv
699.86 1620.51 699.828 1592.14 702.397 1564.24 cv
704.991 1536.06 710.709 1505.35 731.336 1484.38 cv
736.211 1479.43 729.508 1470.77 724.578 1475.78 cv
724.578 1475.78 li
cp
1 .6 .498039 rgb
f
825.438 1536.37 mo
814.808 1546.86 805.894 1559.17 799.294 1572.57 cv
792.379 1586.61 788.768 1601.33 785.791 1616.6 cv
783.19 1629.88 780.239 1643.09 773.918 1655.16 cv
768.154 1666.15 760.694 1676.03 753.47 1686.08 cv
746.064 1696.36 738.967 1706.91 734.867 1719.01 cv
730.666 1731.37 729.482 1744.53 727.989 1757.42 cv
727.76 1759.32 li
726.192 1772.4 724.236 1785.73 719.011 1797.93 cv
714.453 1808.57 707.366 1817.76 699.795 1826.41 cv
686.05 1842.07 667.807 1858.01 667.898 1880.51 cv
667.897 1881.52 667.677 1882.35 667.289 1883.02 cv
657.662 1881.87 li
657.273 1881.12 657.039 1880.22 657.04 1879.21 cv
656.931 1853.15 678.131 1835.09 693.662 1816.8 cv
701.825 1807.19 708.495 1797.06 712.079 1784.86 cv
714.642 1776.17 715.892 1767.17 716.92 1758.16 cv
717.504 1753.29 718.004 1748.4 718.634 1743.57 cv
720.368 1730.25 722.975 1716.92 728.912 1704.77 cv
734.603 1693.1 742.433 1682.7 750 1672.22 cv
757.67 1661.59 765.022 1650.76 769.306 1638.28 cv
774.044 1624.43 775.518 1609.71 779.179 1595.58 cv
785.865 1569.75 799.672 1546.59 818.575 1527.85 cv
818.592 1527.86 li
818.613 1527.82 818.633 1527.79 818.671 1527.76 cv
822.165 1524.3 826.503 1527.49 827.093 1531.41 cv
827.354 1533.08 826.932 1534.89 825.438 1536.37 cv
cp
f
906.121 1562.35 mo
918.729 1580.4 915.528 1604.38 909.379 1624.21 cv
901.757 1648.78 891.116 1671.87 891.201 1698.11 cv
891.275 1721.3 897.309 1746.8 887.073 1768.7 cv
882.105 1779.33 873.97 1788 870.912 1799.56 cv
867.822 1811.24 869.562 1823.93 865.054 1835.25 cv
856.962 1855.58 835.694 1869.53 837.753 1893.47 cv
838.355 1900.47 849.172 1898.84 848.57 1891.84 cv
847.703 1881.76 853.403 1873.09 859.001 1865.23 cv
864.873 1856.98 871.401 1848.89 875.179 1839.4 cv
879.688 1828.07 878.507 1815.9 880.978 1804.18 cv
883.52 1792.12 892.669 1783.02 897.598 1771.99 cv
907.838 1749.08 902.244 1723.51 902.06 1699.41 cv
901.855 1672.69 913.496 1649.53 920.687 1624.4 cv
927.215 1601.59 928.926 1575.93 914.72 1555.59 cv
910.681 1549.81 902.1 1556.59 906.121 1562.35 cv
906.121 1562.35 li
cp
f
995.547 1581.42 mo
1004.39 1601.36 993.331 1623.16 988.103 1642.58 cv
985.281 1653.06 983.516 1663.59 984.582 1674.47 cv
985.613 1684.99 988.896 1695.11 991.625 1705.27 cv
994.468 1715.85 997.036 1726.89 995.118 1737.87 cv
993.129 1749.26 986.573 1759.3 981.57 1769.53 cv
971.869 1789.35 970.593 1810.77 969.914 1832.47 cv
969.188 1855.65 968.948 1880.82 952.731 1899.17 cv
955.872 1900.96 959.013 1902.75 962.154 1904.54 cv
966.794 1895.64 971.434 1886.73 976.074 1877.83 cv
979.331 1871.58 969.176 1867.5 965.949 1873.69 cv
961.309 1882.59 956.668 1891.5 952.028 1900.4 cv
948.999 1906.21 957.6 1910.13 961.451 1905.77 cv
992.193 1871 972.212 1820.5 988.539 1780.6 cv
993.215 1769.17 1000.41 1758.86 1004.05 1747 cv
1007.41 1736.08 1007.21 1724.95 1004.92 1713.83 cv
1002.68 1702.92 998.897 1692.38 996.715 1681.45 cv
994.494 1670.33 995.023 1659.68 997.725 1648.69 cv
1003.48 1625.3 1016.21 1601.03 1005.58 1577.07 cv
1002.73 1570.64 992.683 1574.97 995.547 1581.42 cv
995.547 1581.42 li
cp
f
1054.79 1594.75 mo
1060.15 1602.32 1058.26 1611.63 1055.54 1619.86 cv
1052.47 1629.16 1048.09 1638 1045.52 1647.47 cv
1040.16 1667.21 1042.38 1687.74 1045.06 1707.72 cv
1047.74 1727.68 1051.25 1748.33 1046.64 1768.28 cv
1044.11 1779.23 1038.41 1789.02 1033.84 1799.18 cv
1029.46 1808.9 1026.75 1818.92 1025.9 1829.55 cv
1024.12 1851.95 1029.85 1878.34 1015.97 1897.89 cv
1011.9 1903.63 1020.61 1910.24 1024.69 1904.49 cv
1037.65 1886.23 1036.02 1864.01 1036.28 1842.73 cv
1036.42 1831.5 1037.22 1820.32 1041.26 1809.74 cv
1045.52 1798.6 1051.94 1788.38 1055.52 1776.97 cv
1062.02 1756.23 1059.69 1734.43 1056.85 1713.28 cv
1054.03 1692.23 1050.09 1669.88 1056.36 1649.06 cv
1062.23 1629.6 1077.2 1607.48 1063.39 1587.99 cv
1059.31 1582.24 1050.72 1589.02 1054.79 1594.75 cv
1054.79 1594.75 li
cp
f
813.327 1636.39 mo
810.946 1637.85 808.851 1639.99 807.448 1642.4 cv
806.68 1643.73 806.161 1644.94 806.399 1646.52 cv
806.595 1647.82 807.405 1649.3 808.506 1650.07 cv
810.696 1651.58 814.634 1651.65 816.168 1649.01 cv
816.435 1648.55 816.718 1648.1 817.032 1647.67 cv
817.206 1647.43 817.388 1647.2 817.577 1646.97 cv
817.7 1646.82 818.423 1646.07 817.803 1646.68 cv
817.224 1647.25 817.828 1646.67 817.949 1646.57 cv
818.169 1646.37 818.394 1646.18 818.626 1645.99 cv
819.091 1645.63 819.581 1645.3 820.085 1644.99 cv
821.198 1644.31 821.988 1642.57 822.136 1641.34 cv
822.295 1640.01 821.894 1638.35 821.005 1637.31 cv
820.084 1636.24 818.81 1635.37 817.357 1635.26 cv
815.818 1635.15 814.632 1635.59 813.327 1636.39 cv
813.327 1636.39 li
cp
f
831.329 1723.69 mo
830.83 1724.73 830.331 1725.77 829.832 1726.81 cv
829.24 1728.05 829.345 1729.84 829.878 1731.06 cv
830.402 1732.27 831.565 1733.5 832.824 1733.95 cv
835.754 1734.99 838.631 1733.72 839.958 1730.95 cv
840.457 1729.92 840.956 1728.88 841.455 1727.84 cv
842.047 1726.6 841.942 1724.81 841.409 1723.59 cv
840.884 1722.38 839.722 1721.15 838.463 1720.7 cv
835.533 1719.66 832.656 1720.93 831.329 1723.69 cv
831.329 1723.69 li
cp
f
729.963 1592.92 mo
729.833 1594 729.703 1595.09 729.572 1596.17 cv
729.406 1597.57 729.836 1599.1 730.703 1600.2 cv
731.531 1601.26 732.991 1602.15 734.351 1602.25 cv
737.309 1602.48 740.067 1600.52 740.432 1597.48 cv
740.562 1596.39 740.692 1595.3 740.822 1594.22 cv
740.989 1592.83 740.558 1591.29 739.692 1590.19 cv
738.863 1589.13 737.403 1588.24 736.043 1588.14 cv
733.086 1587.92 730.328 1589.87 729.963 1592.92 cv
729.963 1592.92 li
cp
f
653.759 1645.93 mo
651.506 1649.04 650.585 1652.69 651.004 1656.5 cv
651.318 1659.34 654.41 1661.64 657.229 1661.09 cv
660.232 1660.5 662.157 1657.92 661.821 1654.87 cv
661.686 1653.63 661.63 1655.76 661.784 1654.63 cv
661.809 1654.45 662.123 1652.87 661.887 1653.65 cv
661.644 1654.46 662.156 1653.1 662.198 1652.95 cv
662.372 1652.59 662.304 1652.69 661.995 1653.24 cv
662.144 1653 662.305 1652.76 662.478 1652.53 cv
664.156 1650.22 663.885 1646.58 661.421 1644.87 cv
659.027 1643.22 655.55 1643.45 653.759 1645.93 cv
653.759 1645.93 li
cp
f
681.092 1707.51 mo
681.253 1709.06 681.272 1706.59 681.135 1708.15 cv
681.089 1708.68 681.027 1709.2 680.922 1709.72 cv
681.111 1708.78 680.773 1710.06 680.668 1710.32 cv
680.583 1710.52 679.858 1711.79 680.382 1710.95 cv
678.865 1713.37 678.866 1716.83 681.44 1718.61 cv
683.698 1720.18 687.48 1720.14 689.102 1717.55 cv
691.361 1713.95 692.349 1710.13 691.909 1705.88 cv
691.615 1703.03 688.49 1700.73 685.685 1701.28 cv
682.666 1701.88 680.777 1704.46 681.092 1707.51 cv
681.092 1707.51 li
cp
f
583.739 1756.04 mo
583.392 1758.93 583.045 1761.83 582.698 1764.73 cv
582.357 1767.57 584.528 1770.59 587.476 1770.81 cv
590.434 1771.03 593.192 1769.07 593.557 1766.03 cv
593.904 1763.13 594.251 1760.24 594.598 1757.34 cv
594.938 1754.5 592.767 1751.48 589.819 1751.26 cv
586.862 1751.04 584.104 1752.99 583.739 1756.04 cv
583.739 1756.04 li
cp
f
657.584 1792.43 mo
657.541 1792.79 657.497 1793.15 657.454 1793.51 cv
657.287 1794.9 657.718 1796.44 658.584 1797.54 cv
659.413 1798.6 660.873 1799.49 662.233 1799.59 cv
663.645 1799.7 665.156 1799.41 666.263 1798.46 cv
667.365 1797.52 668.137 1796.28 668.313 1794.81 cv
668.357 1794.45 668.4 1794.09 668.443 1793.73 cv
668.61 1792.34 668.18 1790.8 667.313 1789.7 cv
666.484 1788.64 665.024 1787.75 663.665 1787.65 cv
662.253 1787.54 660.741 1787.83 659.635 1788.78 cv
658.532 1789.72 657.761 1790.96 657.584 1792.43 cv
657.584 1792.43 li
cp
f
750.281 1827.77 mo
750.237 1828.13 750.194 1828.49 750.151 1828.86 cv
749.984 1830.25 750.414 1831.78 751.281 1832.89 cv
752.11 1833.94 753.57 1834.83 754.93 1834.94 cv
756.341 1835.04 757.853 1834.75 758.959 1833.81 cv
760.062 1832.86 760.833 1831.63 761.01 1830.16 cv
761.053 1829.8 761.097 1829.43 761.14 1829.07 cv
761.307 1827.68 760.876 1826.14 760.01 1825.04 cv
759.181 1823.99 757.721 1823.09 756.361 1822.99 cv
754.949 1822.89 753.438 1823.17 752.331 1824.12 cv
751.229 1825.07 750.457 1826.3 750.281 1827.77 cv
750.281 1827.77 li
cp
f
756.462 1767.23 mo
756.66 1768.72 756.858 1770.21 757.056 1771.7 cv
757.433 1774.54 760.417 1776.86 763.28 1776.3 cv
766.23 1775.72 768.277 1773.11 767.873 1770.07 cv
767.675 1768.58 767.477 1767.09 767.279 1765.6 cv
766.903 1762.76 763.919 1760.45 761.055 1761.01 cv
758.105 1761.59 756.059 1764.19 756.462 1767.23 cv
756.462 1767.23 li
cp
f
805.791 1794.2 mo
805.814 1794.25 806.276 1795.15 806.215 1795.19 cv
806.003 1794.4 805.957 1794.29 806.079 1794.87 cv
806.109 1795.05 806.13 1795.23 806.141 1795.41 cv
806.172 1795.84 806.17 1795.65 806.134 1794.84 cv
806.126 1795.02 806.109 1795.2 806.082 1795.38 cv
805.893 1796.78 806.426 1794.48 806.041 1795.52 cv
805.048 1798.19 806.189 1801.63 809.032 1802.65 cv
811.747 1803.62 815.102 1802.53 816.166 1799.66 cv
817.343 1796.48 817.349 1792.91 815.824 1789.84 cv
814.553 1787.28 811.379 1785.66 808.629 1787 cv
806.079 1788.25 804.43 1791.46 805.791 1794.2 cv
805.791 1794.2 li
cp
f
949.511 1764.63 mo
956.498 1765.47 957.811 1754.61 950.812 1753.77 cv
943.825 1752.93 942.512 1763.79 949.511 1764.63 cv
949.511 1764.63 li
cp
f
924.457 1826.62 mo
924.067 1829.87 923.676 1833.13 923.286 1836.39 cv
922.934 1839.32 925.131 1842.12 928.065 1842.47 cv
931.009 1842.82 933.792 1840.63 934.145 1837.69 cv
934.535 1834.43 934.926 1831.17 935.316 1827.92 cv
935.668 1824.98 933.472 1822.19 930.537 1821.84 cv
927.593 1821.48 924.81 1823.67 924.457 1826.62 cv
924.457 1826.62 li
cp
f
942.708 1707.17 mo
942.99 1707.94 943.271 1708.7 943.552 1709.47 cv
944.009 1710.71 945.298 1711.86 946.497 1712.35 cv
947.754 1712.87 949.504 1712.91 950.747 1712.31 cv
951.996 1711.7 953.15 1710.71 953.631 1709.36 cv
954.142 1707.93 954.112 1706.55 953.585 1705.11 cv
953.304 1704.35 953.023 1703.58 952.742 1702.82 cv
952.285 1701.57 950.995 1700.42 949.796 1699.93 cv
948.539 1699.42 946.789 1699.37 945.547 1699.98 cv
944.298 1700.59 943.144 1701.58 942.663 1702.92 cv
942.151 1704.36 942.182 1705.74 942.708 1707.17 cv
942.708 1707.17 li
cp
f
941.759 1627.11 mo
948.747 1627.95 950.06 1617.09 943.061 1616.25 cv
936.074 1615.42 934.761 1626.27 941.759 1627.11 cv
941.759 1627.11 li
cp
f
959.219 1619.29 mo
959.046 1620.74 958.872 1622.19 958.699 1623.64 cv
958.358 1626.48 960.53 1629.5 963.478 1629.72 cv
966.435 1629.94 969.193 1627.98 969.558 1624.94 cv
969.731 1623.49 969.905 1622.04 970.078 1620.59 cv
970.419 1617.75 968.248 1614.73 965.3 1614.51 cv
962.342 1614.29 959.584 1616.25 959.219 1619.29 cv
959.219 1619.29 li
cp
f
927.147 1658.77 mo
927.292 1660.62 927.437 1662.48 927.582 1664.33 cv
927.806 1667.19 931.052 1669.46 933.807 1668.92 cv
936.885 1668.32 938.639 1665.76 938.399 1662.7 cv
938.254 1660.84 938.109 1658.99 937.964 1657.14 cv
937.74 1654.28 934.495 1652.01 931.74 1652.55 cv
928.661 1653.15 926.907 1655.71 927.147 1658.77 cv
927.147 1658.77 li
cp
f
854.634 1673.95 mo
861.622 1674.79 862.935 1663.93 855.936 1663.09 cv
848.949 1662.25 847.636 1673.11 854.634 1673.95 cv
854.634 1673.95 li
cp
f
843.745 1614.84 mo
844.02 1615.61 844.296 1616.38 844.571 1617.14 cv
845.016 1618.39 846.327 1619.54 847.517 1620.03 cv
848.773 1620.54 850.523 1620.59 851.766 1619.98 cv
853.015 1619.37 854.169 1618.38 854.65 1617.04 cv
855.164 1615.6 855.121 1614.23 854.604 1612.79 cv
854.329 1612.02 854.054 1611.25 853.779 1610.48 cv
853.333 1609.24 852.022 1608.09 850.833 1607.6 cv
849.576 1607.09 847.826 1607.04 846.583 1607.65 cv
845.334 1608.25 844.181 1609.25 843.699 1610.59 cv
843.186 1612.03 843.228 1613.4 843.745 1614.84 cv
843.745 1614.84 li
cp
f
1014.64 1690.24 mo
1014.86 1691.37 1015.09 1692.5 1015.31 1693.63 cv
1015.58 1695.02 1016.27 1696.31 1017.42 1697.17 cv
1018.5 1697.99 1020.18 1698.49 1021.53 1698.22 cv
1022.9 1697.95 1024.26 1697.29 1025.08 1696.12 cv
1025.89 1694.94 1026.41 1693.45 1026.13 1692 cv
1025.9 1690.87 1025.68 1689.74 1025.46 1688.6 cv
1025.19 1687.22 1024.5 1685.93 1023.35 1685.06 cv
1022.27 1684.24 1020.59 1683.75 1019.23 1684.01 cv
1017.87 1684.28 1016.51 1684.94 1015.69 1686.12 cv
1014.87 1687.3 1014.36 1688.79 1014.64 1690.24 cv
1014.64 1690.24 li
cp
f
1014.97 1751.55 mo
1014.88 1752.27 1014.79 1752.99 1014.71 1753.72 cv
1014.54 1755.11 1014.97 1756.64 1015.84 1757.75 cv
1016.66 1758.8 1018.12 1759.7 1019.48 1759.8 cv
1020.9 1759.9 1022.41 1759.62 1023.51 1758.67 cv
1024.62 1757.72 1025.39 1756.49 1025.56 1755.02 cv
1025.65 1754.3 1025.74 1753.57 1025.83 1752.85 cv
1025.99 1751.46 1025.56 1749.92 1024.7 1748.82 cv
1023.87 1747.76 1022.41 1746.87 1021.05 1746.77 cv
1019.63 1746.66 1018.12 1746.95 1017.02 1747.9 cv
1015.91 1748.84 1015.14 1750.07 1014.97 1751.55 cv
1014.97 1751.55 li
cp
f
1003.12 1822.83 mo
1003.03 1823.55 1002.95 1824.27 1002.86 1825 cv
1002.69 1826.39 1003.12 1827.92 1003.99 1829.03 cv
1004.82 1830.08 1006.28 1830.98 1007.64 1831.08 cv
1009.05 1831.18 1010.56 1830.9 1011.67 1829.95 cv
1012.77 1829 1013.54 1827.77 1013.72 1826.3 cv
1013.8 1825.57 1013.89 1824.85 1013.98 1824.13 cv
1014.14 1822.73 1013.71 1821.2 1012.85 1820.1 cv
1012.02 1819.04 1010.56 1818.15 1009.2 1818.05 cv
1007.79 1817.94 1006.28 1818.23 1005.17 1819.18 cv
1004.07 1820.12 1003.29 1821.35 1003.12 1822.83 cv
1003.12 1822.83 li
cp
f
1839.82 1584.19 mo
1026.77 1643.27 li
948.252 562.676 li
1761.3 503.6 li
1839.82 1584.19 li
cp
1 1 1 rgb
f
848.109 1062.65 mo
867.029 1033.55 888.11 1005.98 911.084 980.28 cv
921.514 968.614 932.495 957.198 945.575 949.082 cv
962.627 938.503 982.258 934.115 1001.48 929.89 cv
1067.15 915.456 1136 905.636 1207.32 895.731 cv
1233.96 892.031 1236.01 900.747 1238.15 916.757 cv
1239.63 927.862 1236.37 939.412 1229.18 948.15 cv
1202.9 980.087 1157.46 981.019 1115.09 991.165 cv
1101.94 994.313 1098.78 1003.16 1085.35 1013.74 cv
1058.72 1034.71 1031.68 1046.8 1031.3 1053.54 cv
1025.44 1158.03 1083.56 1231.4 989.277 1325.76 cv
966.14 1348.92 933.925 1226 902.866 1224.21 cv
795.274 1255.89 li
784.639 1236.29 812.073 1146.37 818.027 1124.17 cv
823.981 1101.96 835.65 1081.8 848.109 1062.65 cv
cp
.992157 .729412 .627451 rgb
f
1042.07 1229.38 mo
1031.69 1281.23 1001.42 1328.15 958.425 1358.93 cv
956.285 1360.46 953.902 1357.14 956.049 1355.6 cv
998.145 1325.46 1027.86 1279.53 1038.03 1228.76 cv
1038.55 1226.18 1042.59 1226.8 1042.07 1229.38 cv
1042.07 1229.38 li
cp
.905882 .592157 .501961 rgb
f
1226.19 909.202 mo
1206.73 925.926 1162.95 935.633 1148.22 907.955 cv
1146.99 905.633 1150.82 904.204 1152.05 906.502 cv
1158.88 919.35 1174.46 922.189 1187.71 920.559 cv
1200.73 918.958 1213.77 914.501 1223.81 905.87 cv
1225.81 904.156 1228.18 907.495 1226.19 909.202 cv
1226.19 909.202 li
cp
f
1113.64 991.649 mo
1082.22 1019.97 1049.06 1049.35 1007.3 1060.72 cv
1004.78 1061.4 1003.31 1057.58 1005.85 1056.89 cv
1047.28 1045.61 1080.09 1016.41 1111.27 988.317 cv
1113.22 986.558 1115.58 989.901 1113.64 991.649 cv
1113.64 991.649 li
cp
f
1033.34 1053.33 mo
1034.04 1093.26 1037.2 1133.12 1042.8 1172.66 cv
1043.17 1175.28 1039.1 1175.7 1038.73 1173.1 cv
1033.13 1133.55 1029.97 1093.7 1029.27 1053.76 cv
1029.22 1051.14 1033.29 1050.69 1033.34 1053.33 cv
1033.34 1053.33 li
cp
f
1184.3 977.715 mo
1160.53 986.628 1135.43 991.497 1110.04 992.075 cv
1107.43 992.135 1106.98 988.066 1109.61 988.006 cv
1134.67 987.436 1159.38 982.689 1182.85 973.891 cv
1185.32 972.966 1186.77 976.789 1184.3 977.715 cv
1184.3 977.715 li
cp
f
972.976 933.119 mo
954.904 937.914 939.719 947.593 926.875 961.065 cv
912.077 976.584 898.846 993.804 885.063 1010.22 cv
859.335 1040.87 832.434 1071.44 816.066 1108.38 cv
814.786 1111.27 819.325 1113.11 820.6 1110.23 cv
836.213 1075 861.676 1045.69 886.227 1016.44 cv
899.268 1000.91 912.038 985.092 925.445 969.872 cv
938.702 954.821 954.083 943.169 973.706 937.963 cv
976.716 937.164 976.027 932.31 972.976 933.119 cv
972.976 933.119 li
cp
f
1727.32 900.794 mo
1384.47 834.945 li
1452.43 481.109 li
1795.28 546.958 li
1727.32 900.794 li
cp
.72549 .894118 .941176 rgb
f
1588.16 522.583 mo
1588.41 524.49 1588.77 526.72 1588.32 528.627 cv
1587.49 532.141 1583.22 535.046 1581.11 530.418 cv
1579.81 527.58 1581.06 522.503 1581.26 519.497 cv
1581.72 512.597 1581.88 505.596 1582.79 498.738 cv
1583.24 495.344 1583.96 491.982 1585.75 489.027 cv
1587.81 485.632 1593.98 480.657 1597.28 486.201 cv
1598.93 488.974 1598.23 493.61 1598.22 496.663 cv
1598.21 500.825 1598.21 504.987 1598.2 509.149 cv
1598.2 512.454 1603.36 513.112 1603.36 509.767 cv
1603.38 502.61 1604.33 494.781 1603.09 487.705 cv
1602.38 483.635 1600.07 479.948 1595.87 478.898 cv
1583.7 475.851 1578.38 490.726 1577.42 499.88 cv
1576.62 507.566 1576.3 515.34 1575.82 523.052 cv
1575.54 527.539 1574.99 533.068 1578.57 536.506 cv
1581.68 539.498 1586.48 539.018 1589.66 536.386 cv
1593.98 532.806 1593.96 526.903 1593.3 521.807 cv
1592.88 518.491 1587.73 519.258 1588.16 522.583 cv
1588.16 522.583 li
cp
1 .560784 .396078 rgb
f
1059.07 622.585 mo
1062.25 618.008 1062.21 612.964 1059.17 608.344 cv
1057.75 606.191 1054.73 607.599 1054.31 609.708 cv
1050.94 626.56 1048.69 643.576 1047.55 660.724 cv
1047.41 662.844 1049.36 664.303 1051.36 663.558 cv
1064.67 658.591 1074.93 647.818 1079.18 634.256 cv
1079.62 632.873 1079.16 631.25 1077.69 630.689 cv
1072.75 628.809 1069.88 633.601 1069.42 637.987 cv
1068.83 643.515 1070.17 650.597 1074.06 654.801 cv
1083.59 665.095 1093.54 641.291 1094.64 634.761 cv
1095.23 631.281 1089.84 630.662 1089.21 634.11 cv
1088.08 640.395 1086.92 654.831 1096.6 655.065 cv
1105.82 655.287 1112.63 640.654 1115.52 633.724 cv
1116.48 631.408 1114.07 629.401 1111.9 630.18 cv
1103.58 633.162 1104.78 645.666 1112.59 648.535 cv
1123.94 652.707 1132.3 640.263 1131.93 630.415 cv
1131.86 628.523 1129.62 627.792 1128.14 628.315 cv
1119.24 631.446 1120.55 644.285 1129.12 646.898 cv
1140.76 650.445 1147.13 638.163 1146.64 628.492 cv
1146.48 625.331 1141.64 625.621 1141.22 628.575 cv
1140.36 634.667 1141.27 640.369 1144.02 645.876 cv
1144.58 647.011 1145.67 647.621 1146.93 647.491 cv
1153.62 646.803 1159.87 644.893 1165.79 641.708 cv
1168.87 640.052 1166.72 635.018 1163.61 636.691 cv
1158.09 639.664 1152.36 641.439 1146.12 642.082 cv
1147.09 642.621 1148.06 643.159 1149.03 643.697 cv
1146.68 638.982 1145.92 634.447 1146.65 629.226 cv
1144.84 629.253 1143.04 629.281 1141.23 629.308 cv
1141.48 634.232 1139.8 640.848 1133.99 641.794 cv
1128.69 642.658 1124.19 635.487 1130.32 633.331 cv
1129.05 632.631 1127.79 631.931 1126.52 631.231 cv
1126.73 636.61 1123.45 643.054 1117.47 643.669 cv
1112.72 644.157 1108.49 637.199 1114.07 635.197 cv
1112.87 634.016 1111.66 632.834 1110.45 631.653 cv
1108.2 637.051 1105.25 642.5 1101.07 646.679 cv
1099.39 648.361 1098.74 649.496 1096.4 648.533 cv
1094.35 647.687 1094.44 646.915 1094.18 644.849 cv
1093.74 641.438 1094.04 638.122 1094.64 634.761 cv
1092.83 634.544 1091.02 634.327 1089.21 634.11 cv
1088.32 639.399 1086.25 644.27 1082.71 648.351 cv
1079.01 652.616 1076.22 648.832 1075.27 644.868 cv
1075.03 643.868 1074.6 635.366 1075.62 635.752 cv
1075.12 634.563 1074.62 633.374 1074.12 632.185 cv
1070.26 644.509 1061.29 654.022 1049.18 658.542 cv
1050.45 659.486 1051.72 660.431 1052.98 661.375 cv
1054.12 644.227 1056.37 627.211 1059.74 610.359 cv
1058.12 610.814 1056.49 611.268 1054.87 611.723 cv
1056.5 614.192 1056.34 616.93 1054.71 619.283 cv
1052.7 622.171 1057.05 625.479 1059.07 622.585 cv
1059.07 622.585 li
cp
.286275 .388235 .454902 rgb
f
1200.24 635.646 mo
1205.85 630.711 1210.72 625.191 1214.84 618.952 cv
1215.7 617.651 1215.52 615.264 1213.7 614.769 cv
1206.33 612.769 1202.1 624.393 1202.94 630.245 cv
1204.27 639.521 1212.69 639.453 1219.59 636.407 cv
1224.4 634.288 1238.46 628.393 1236.33 621.357 cv
1234.27 614.563 1227.16 619.597 1226.77 624.547 cv
1226.18 632.065 1233.16 636.733 1239.99 636.502 cv
1245.23 636.324 1250.44 634.112 1255.17 632.036 cv
1258.94 630.381 1264.81 628.445 1267.45 625.073 cv
1271.63 619.754 1265.15 613.055 1259.46 615.984 cv
1252.92 619.346 1254.87 627.964 1259.97 631.583 cv
1266.91 636.51 1281.17 634.072 1287.09 628.267 cv
1292.04 623.415 1290.47 613.47 1282.76 612.856 cv
1281.33 612.742 1279.84 613.721 1279.72 615.245 cv
1279.25 621.208 1283.62 624.689 1288.22 627.691 cv
1295.29 632.314 1302.79 636.254 1310.52 639.656 cv
1313.75 641.077 1315.81 636.009 1312.59 634.594 cv
1307.17 632.206 1301.86 629.584 1296.75 626.574 cv
1293.37 624.581 1284.76 620.825 1285.15 615.896 cv
1284.14 616.692 1283.12 617.489 1282.11 618.285 cv
1286.28 618.617 1284.3 623.488 1282.57 624.987 cv
1281.08 626.282 1278.46 626.987 1276.61 627.437 cv
1272.68 628.388 1266.83 629.834 1263.27 627.223 cv
1262.74 626.73 1262.21 626.237 1261.68 625.744 cv
1260.06 621.669 1260.35 620.474 1262.55 622.158 cv
1260.88 623.065 1259.24 624.026 1257.54 624.879 cv
1253.98 626.657 1250.3 628.312 1246.53 629.578 cv
1242.69 630.87 1236.38 632.641 1233.44 628.653 cv
1232.03 626.742 1233.53 622.923 1229.99 623.745 cv
1228.96 623.984 1226.51 626.355 1225.59 626.963 cv
1222.78 628.809 1218.33 631.993 1214.9 632.44 cv
1201.89 634.133 1212.17 619.979 1211.63 619.832 cv
1211.25 618.438 1210.87 617.044 1210.48 615.649 cv
1206.61 621.503 1202.13 626.71 1196.86 631.347 cv
1194.22 633.664 1197.59 637.976 1200.24 635.646 cv
1200.24 635.646 li
cp
f
1140.14 1070.77 mo
1148.93 1058.45 1151.05 1043.04 1146.03 1028.79 cv
1145.29 1026.69 1141.61 1026.58 1140.99 1028.84 cv
1134.07 1053.89 1131.9 1079.77 1134.64 1105.62 cv
1134.82 1107.31 1136.89 1108.49 1138.43 1107.72 cv
1158.24 1097.78 1170.12 1076.23 1167.91 1054.17 cv
1167.59 1050.95 1163.04 1051.36 1162.49 1054.25 cv
1159.99 1067.39 1163.25 1080.68 1171.38 1091.28 cv
1172.22 1092.36 1174.17 1092.76 1175.22 1091.74 cv
1189.74 1077.65 1198.68 1059.1 1200.35 1038.9 cv
1200.59 1035.94 1196.19 1034.53 1195.1 1037.54 cv
1192.13 1045.78 1191.18 1060.44 1201.9 1063.81 cv
1205.93 1065.08 1209.23 1063 1211.23 1059.56 cv
1214.74 1053.52 1216.78 1046.08 1219.18 1039.54 cv
1220.08 1037.06 1217.14 1034.55 1214.96 1036.36 cv
1207.63 1042.4 1214.04 1054 1222.7 1053.79 cv
1235.49 1053.5 1241.11 1037.4 1241.72 1026.95 cv
1241.87 1024.4 1238.47 1022.62 1236.83 1024.98 cv
1233.56 1029.66 1236.64 1035.59 1241.99 1036.97 cv
1248.89 1038.73 1253.55 1031.87 1256.29 1026.68 cv
1254.55 1026.47 1252.8 1026.26 1251.06 1026.05 cv
1251.86 1044.21 1251.44 1062.36 1249.85 1080.47 cv
1251.66 1080.44 1253.47 1080.42 1255.27 1080.39 cv
1253.7 1062.16 1265.47 1046.73 1276.13 1033.18 cv
1278.31 1030.4 1273.95 1027.11 1271.77 1029.88 cv
1260.08 1044.75 1248.15 1061.32 1249.86 1081.2 cv
1250.13 1084.28 1255.01 1084.18 1255.28 1081.12 cv
1256.92 1062.53 1257.29 1043.88 1256.46 1025.23 cv
1256.33 1022.25 1252.34 1022.5 1251.23 1024.61 cv
1250.26 1026.45 1249.24 1028.33 1247.7 1029.76 cv
1246.86 1030.77 1245.78 1031.43 1244.45 1031.76 cv
1241.85 1031.65 1240.76 1030.49 1241.19 1028.28 cv
1239.55 1027.62 1237.92 1026.96 1236.29 1026.3 cv
1235.9 1032.95 1234.07 1040.51 1229 1045.25 cv
1226.98 1047.14 1223.98 1048.99 1221.13 1048.15 cv
1218.45 1047.36 1215.46 1043.03 1218.33 1040.66 cv
1216.93 1039.59 1215.52 1038.53 1214.11 1037.47 cv
1212.9 1040.79 1211.66 1044.1 1210.37 1047.4 cv
1209.41 1049.89 1208.07 1055.94 1206 1057.73 cv
1202.78 1060.51 1199.83 1055.48 1199.03 1052.92 cv
1197.69 1048.67 1198.71 1043.66 1200.17 1039.61 cv
1198.42 1039.16 1196.67 1038.7 1194.92 1038.25 cv
1193.38 1056.93 1185.32 1074.36 1171.84 1087.44 cv
1173.12 1087.59 1174.4 1087.74 1175.68 1087.9 cv
1168.37 1078.38 1165.68 1066.67 1167.92 1054.9 cv
1166.12 1054.93 1164.31 1054.96 1162.5 1054.99 cv
1164.45 1074.51 1153.79 1093.9 1136.25 1102.7 cv
1137.52 1103.4 1138.78 1104.1 1140.05 1104.8 cv
1137.41 1079.99 1139.41 1054.97 1146.05 1030.91 cv
1144.37 1030.93 1142.69 1030.95 1141.01 1030.97 cv
1145.36 1043.32 1143.38 1056.82 1135.78 1067.47 cv
1133.74 1070.33 1138.09 1073.64 1140.14 1070.77 cv
1140.14 1070.77 li
cp
f
1323.09 1005.52 mo
1327.18 1000.67 1327.99 994.468 1325.38 988.692 cv
1324.46 986.661 1322.08 986.685 1320.69 988.13 cv
1312.68 996.443 1317.97 1007.56 1323.04 1015.83 cv
1323.62 1016.78 1325.31 1017.18 1326.28 1016.65 cv
1336.02 1011.39 1344.59 1003.66 1349.82 993.786 cv
1353.22 987.362 1354.34 978.316 1346.92 974.428 cv
1345.54 973.707 1343.96 974.705 1343.35 975.924 cv
1340.06 982.54 1339.42 990.176 1341.99 997.167 cv
1344.31 1003.47 1348.68 1006.47 1354.73 1002.43 cv
1361.94 997.624 1368.82 990.796 1373.61 983.568 cv
1376.76 978.813 1380.3 969.951 1374.41 965.64 cv
1368.45 961.271 1366.14 968.913 1365.71 973.466 cv
1365.12 979.771 1367.32 987.315 1374.09 989.323 cv
1381 991.371 1388.34 985.486 1392.85 980.906 cv
1398.42 975.259 1401.91 968.313 1403.61 960.612 cv
1403.86 959.498 1402.98 958.129 1401.93 957.755 cv
1392.4 954.345 1389.53 969.94 1400.3 971.29 cv
1405.89 971.99 1410.07 967.99 1413.55 964.186 cv
1418.06 959.259 1421.85 953.871 1420.91 946.922 cv
1420.65 944.975 1418.06 943.792 1416.52 945.18 cv
1411.19 949.972 1412.16 958.363 1418.24 962.122 cv
1426.62 967.295 1435.8 961.947 1442.81 957.057 cv
1445.7 955.039 1442.31 950.749 1439.43 952.758 cv
1435.61 955.423 1431.55 958.378 1426.73 958.667 cv
1422.52 958.919 1414.54 954.299 1419.9 949.479 cv
1418.43 948.899 1416.97 948.318 1415.5 947.738 cv
1416.19 952.784 1412.94 956.694 1409.78 960.228 cv
1408.52 961.638 1407.25 963.124 1405.7 964.224 cv
1404.72 965.061 1403.58 965.614 1402.27 965.882 cv
1399.6 966.408 1398.8 965.386 1399.86 962.818 cv
1399.3 961.866 1398.74 960.913 1398.18 959.961 cv
1396.41 967.956 1392.01 975.115 1385.52 980.147 cv
1381.01 983.643 1373.92 986.853 1371.52 979.138 cv
1371.29 978.385 1371.59 971.462 1371.53 971.42 cv
1373.12 972.488 1371.18 976.783 1370.66 977.863 cv
1367.28 984.873 1359.62 993.17 1352.87 997.034 cv
1350.6 998.337 1349.07 999.735 1347.62 996.512 cv
1346.83 994.737 1346.31 992.811 1346.03 990.888 cv
1345.38 986.36 1346.4 982.045 1348.41 977.995 cv
1347.22 978.493 1346.03 978.992 1344.85 979.49 cv
1351.33 982.889 1343.52 994.046 1340.96 997.381 cv
1336.42 1003.32 1330.67 1008.09 1324.1 1011.64 cv
1325.18 1011.91 1326.26 1012.18 1327.34 1012.46 cv
1323.49 1006.17 1318.89 997.825 1325.05 991.433 cv
1323.48 991.245 1321.92 991.058 1320.36 990.871 cv
1322.18 994.906 1321.59 998.836 1318.73 1002.22 cv
1316.45 1004.92 1320.82 1008.21 1323.09 1005.52 cv
1323.09 1005.52 li
cp
f
1117.58 1206.6 mo
1127.74 1198.91 1139.24 1187.84 1133.31 1173.93 cv
1132.45 1171.89 1129.98 1171.92 1128.63 1173.37 cv
1117.52 1185.29 1117.21 1204.53 1127.69 1216.93 cv
1128.43 1217.8 1129.84 1218.32 1130.93 1217.75 cv
1148 1208.85 1161.15 1194.18 1167.94 1176.15 cv
1168.45 1174.78 1167.85 1173.13 1166.44 1172.58 cv
1159.39 1169.83 1152.5 1175.43 1151.61 1182.56 cv
1150.88 1188.51 1153.33 1202.74 1161.53 1202.19 cv
1165.53 1201.93 1169.77 1198.52 1173.08 1196.41 cv
1177.07 1193.87 1180.86 1190.92 1183.81 1187.2 cv
1189.15 1180.47 1191.16 1170.92 1186.63 1163.26 cv
1185.52 1161.38 1182.51 1160.91 1181.59 1163.32 cv
1178.39 1171.72 1177.8 1180.72 1180.35 1189.39 cv
1182.63 1197.14 1186.7 1200.49 1194.25 1196.26 cv
1208.5 1188.28 1217.76 1173.19 1218.69 1156.93 cv
1218.88 1153.75 1214.89 1152.87 1213.45 1155.57 cv
1208 1165.81 1211.61 1179.09 1221.47 1185.18 cv
1222.54 1185.84 1223.77 1185.93 1224.81 1185.15 cv
1230.04 1181.2 1234.68 1176.55 1238.41 1171.15 cv
1241.3 1166.95 1245.95 1160.35 1245.84 1155.05 cv
1245.75 1151.19 1242.28 1148.72 1238.57 1149.92 cv
1233.5 1151.57 1233.25 1157.61 1233.53 1162.06 cv
1234.18 1172.78 1241.15 1180.85 1251.73 1174.14 cv
1262.63 1167.22 1269.25 1154.91 1269.81 1142.13 cv
1269.89 1140.3 1268.55 1138.91 1266.69 1139.1 cv
1256.63 1140.08 1254.98 1153.88 1262.56 1159.18 cv
1274.36 1167.44 1286.43 1155.43 1293.14 1146.72 cv
1295.29 1143.92 1290.93 1140.63 1288.78 1143.42 cv
1284.56 1148.89 1279.64 1155.52 1272.18 1156.17 cv
1269 1156.45 1264.63 1155.35 1263.44 1151.96 cv
1262.33 1148.81 1264.02 1144.85 1267.5 1144.51 cv
1266.46 1143.5 1265.42 1142.49 1264.38 1141.48 cv
1264.05 1148.93 1261.69 1155.96 1257.1 1161.9 cv
1255.02 1164.59 1252.55 1166.97 1249.75 1168.91 cv
1244.46 1172.57 1240.91 1171.56 1239.49 1165.49 cv
1238.97 1163.28 1237.85 1157.93 1239.36 1156.07 cv
1240.26 1154.95 1238.62 1159.75 1238.74 1159.49 cv
1237.9 1161.36 1236.96 1163.2 1235.91 1164.96 cv
1232.17 1171.2 1227.23 1176.47 1221.43 1180.85 cv
1222.55 1180.84 1223.66 1180.83 1224.77 1180.82 cv
1216.82 1175.91 1214.12 1165.88 1218.51 1157.64 cv
1216.76 1157.19 1215.01 1156.74 1213.26 1156.28 cv
1212.59 1167.9 1207.45 1178.87 1198.63 1186.56 cv
1196.57 1188.36 1193.96 1190.67 1191.38 1191.63 cv
1187.05 1193.24 1185.96 1189.65 1185.08 1185.97 cv
1183.41 1179.07 1184.14 1171.98 1186.65 1165.39 cv
1184.97 1165.41 1183.29 1165.42 1181.61 1165.44 cv
1187.66 1175.66 1179.45 1185.59 1171.13 1191.18 cv
1168.97 1192.63 1166.72 1193.97 1164.44 1195.22 cv
1161.61 1196.78 1159.88 1196.16 1158.81 1193.06 cv
1157.87 1190.33 1156.95 1187.51 1157.03 1184.59 cv
1157.14 1180.93 1159.77 1175.85 1164.37 1177.64 cv
1163.87 1176.45 1163.37 1175.26 1162.87 1174.07 cv
1156.6 1190.76 1144.58 1204.48 1128.75 1212.73 cv
1129.83 1213.01 1130.91 1213.28 1131.99 1213.55 cv
1122.95 1202.86 1123.48 1186.88 1132.99 1176.67 cv
1131.42 1176.48 1129.86 1176.29 1128.3 1176.11 cv
1133.12 1187.44 1122.19 1196.26 1114.2 1202.3 cv
1111.39 1204.42 1114.77 1208.72 1117.58 1206.6 cv
1117.58 1206.6 li
cp
f
1332.95 1115.61 mo
1338.13 1109.83 1341.08 1102.91 1341.73 1095.17 cv
1341.92 1092.86 1339.23 1091.17 1337.32 1092.7 cv
1331.55 1097.3 1330.67 1104.32 1331.68 1111.28 cv
1332.43 1116.52 1333.66 1125.79 1340.89 1124.46 cv
1347.69 1123.2 1354.65 1115.04 1358.86 1109.98 cv
1364.45 1103.26 1368.54 1095.47 1371.12 1087.14 cv
1372.05 1084.16 1368.52 1082.1 1366.41 1084.46 cv
1353.95 1098.42 1376.95 1111.65 1374.77 1125.46 cv
1376.4 1125.01 1378.02 1124.55 1379.64 1124.1 cv
1374.63 1117.54 1381.44 1110.38 1385.39 1105.31 cv
1388.88 1100.82 1391.95 1096.02 1394.57 1090.97 cv
1396.9 1086.47 1403.34 1073.79 1393.94 1072.44 cv
1393.04 1072.32 1391.95 1072.73 1391.43 1073.51 cv
1388.51 1077.93 1386.04 1083.49 1387.49 1088.87 cv
1388.81 1093.83 1393.51 1096.75 1398.56 1096.3 cv
1412.17 1095.09 1421.33 1079.34 1424.17 1067.53 cv
1424.85 1064.68 1420.85 1063.71 1419.27 1065.56 cv
1412.86 1073.05 1419.58 1084.16 1428.78 1084.27 cv
1441.98 1084.43 1447.04 1070.71 1449.29 1060.04 cv
1449.88 1057.25 1445.97 1056.09 1444.4 1058.07 cv
1436.88 1067.51 1449.24 1079.44 1458.26 1071.19 cv
1460.85 1068.83 1457.48 1064.52 1454.88 1066.9 cv
1450.73 1070.69 1445.21 1065.82 1448.76 1061.37 cv
1447.13 1060.71 1445.5 1060.05 1443.86 1059.39 cv
1442.55 1065.61 1440.85 1072.72 1435.36 1076.63 cv
1432.59 1078.61 1428.73 1079.61 1425.59 1077.97 cv
1422.26 1076.24 1421.19 1071.72 1423.63 1068.86 cv
1422 1068.2 1420.37 1067.54 1418.74 1066.88 cv
1416.78 1075.03 1412.16 1082.74 1405.33 1087.74 cv
1402.02 1090.17 1395.01 1093.34 1392.84 1087.86 cv
1391.44 1084.32 1393.92 1079.64 1395.79 1076.81 cv
1394.96 1077.17 1394.12 1077.52 1393.29 1077.87 cv
1395.09 1078.13 1387.52 1092.5 1387.04 1093.31 cv
1384.28 1097.92 1380.87 1101.95 1377.67 1106.23 cv
1372.97 1112.54 1370.07 1120.59 1375.34 1127.47 cv
1376.83 1129.42 1379.84 1128.39 1380.2 1126.11 cv
1381.19 1119.87 1378.73 1114.57 1375.47 1109.37 cv
1371.7 1103.36 1364.73 1094.53 1370.77 1087.76 cv
1369.2 1086.86 1367.63 1085.97 1366.06 1085.07 cv
1362.76 1095.73 1356.89 1105.4 1348.54 1112.86 cv
1346.74 1114.46 1344.71 1116.46 1342.56 1117.57 cv
1341.4 1117.93 1340.24 1118.28 1339.07 1118.63 cv
1338.94 1118.23 1338.8 1117.82 1338.66 1117.41 cv
1337.92 1116.3 1337.77 1114.09 1337.51 1112.81 cv
1336.39 1107.31 1335.86 1100.86 1340.7 1096.99 cv
1339.23 1096.17 1337.77 1095.34 1336.3 1094.52 cv
1335.72 1101.38 1333.18 1107.19 1328.59 1112.31 cv
1326.23 1114.93 1330.61 1118.21 1332.95 1115.61 cv
1332.95 1115.61 li
cp
f
1305.79 1252.35 mo
1310.26 1246.53 1314.15 1240.31 1317.27 1233.66 cv
1319.03 1229.9 1323.6 1222.42 1319.3 1218.74 cv
1315.42 1215.43 1312.37 1219.07 1311.56 1222.8 cv
1309.99 1229.99 1311.15 1237.71 1313.27 1244.64 cv
1313.77 1246.27 1316.27 1246.81 1317.47 1245.7 cv
1325.28 1238.53 1332.06 1230.4 1337.43 1221.25 cv
1340.53 1215.98 1346.45 1206.77 1339.67 1201.91 cv
1338.34 1200.95 1336.04 1201.31 1335.49 1203.05 cv
1332.04 1213.84 1331.34 1224.9 1333.61 1236.01 cv
1334.02 1238.03 1336.3 1239.04 1338 1237.76 cv
1350.87 1227.98 1360.86 1215.25 1367.35 1200.44 cv
1365.6 1200.23 1363.86 1200.02 1362.11 1199.81 cv
1363.72 1208.09 1365.32 1216.36 1366.92 1224.63 cv
1367.35 1226.81 1369.56 1227.44 1371.32 1226.37 cv
1381.83 1219.99 1387.56 1208.63 1387.21 1196.46 cv
1387.18 1195.39 1385.92 1194.15 1384.83 1194.15 cv
1379.15 1194.17 1377.14 1201.7 1382.99 1203.67 cv
1390.56 1206.22 1395.02 1194.76 1396.8 1189.47 cv
1397.79 1186.52 1394.13 1184.39 1392.09 1186.78 cv
1387.76 1191.86 1383.67 1202.92 1389.17 1208.71 cv
1394.74 1214.57 1404.04 1204.3 1407.48 1200.46 cv
1409.83 1197.83 1405.45 1194.55 1403.12 1197.16 cv
1401.73 1198.71 1400.27 1200.18 1398.66 1201.5 cv
1397.77 1202.23 1396.84 1202.92 1395.88 1203.57 cv
1393.77 1205.37 1392.69 1205.32 1392.65 1203.42 cv
1390.04 1199.89 1394.33 1192.57 1396.45 1190.08 cv
1394.88 1189.19 1393.31 1188.29 1391.74 1187.4 cv
1390.89 1189.91 1387.61 1199.57 1384.18 1199.58 cv
1383.39 1198.81 1382.6 1198.04 1381.8 1197.27 cv
1382.1 1207.57 1376.64 1216.79 1367.94 1222.07 cv
1369.4 1222.65 1370.87 1223.23 1372.33 1223.81 cv
1370.73 1215.54 1369.12 1207.27 1367.52 1199 cv
1367.01 1196.36 1363.39 1195.85 1362.28 1198.37 cv
1356.16 1212.34 1346.76 1224.23 1334.62 1233.46 cv
1336.08 1234.04 1337.55 1234.62 1339.01 1235.2 cv
1336.95 1225.05 1337.39 1215 1340.55 1205.12 cv
1339.16 1205.5 1337.76 1205.89 1336.37 1206.27 cv
1340.57 1209.28 1330.04 1222.91 1328.13 1225.6 cv
1324.02 1231.37 1319.3 1236.62 1314.09 1241.4 cv
1315.49 1241.76 1316.89 1242.11 1318.29 1242.46 cv
1316.89 1237.88 1316.17 1233.14 1316.42 1228.34 cv
1316.49 1226.99 1317.62 1224.48 1316.01 1224.44 cv
1314.44 1224.39 1313.97 1227.61 1313.39 1228.94 cv
1310.28 1236.16 1306.21 1242.82 1301.43 1249.05 cv
1299.28 1251.85 1303.65 1255.15 1305.79 1252.35 cv
1305.79 1252.35 li
cp
f
1216.71 1431.19 mo
1208.54 1410.94 1190.95 1395.19 1170.07 1388.86 cv
1159.08 1385.54 1148.22 1385.45 1136.91 1386.83 cv
1120.91 1388.79 1106.52 1388.23 1092.78 1378.8 cv
1091.26 1377.75 1088.42 1378.44 1088.42 1380.66 cv
1088.4 1417.53 1120.65 1445.86 1157.31 1440.75 cv
1167.99 1439.26 1178.28 1435.91 1189.07 1435.1 cv
1194.79 1434.67 1200.55 1434.78 1206.24 1435.44 cv
1209.92 1435.87 1213.5 1436.22 1215.54 1439.78 cv
1216.78 1441.93 1217.36 1444.82 1217.99 1447.15 cv
1223.6 1467.95 1224.75 1489.63 1221.73 1510.93 cv
1221.24 1514.42 1226.67 1515.07 1227.16 1511.58 cv
1230.06 1491.14 1229.24 1470.24 1224.37 1450.16 cv
1222.61 1442.9 1221.22 1433.81 1213.15 1431.14 cv
1204.45 1428.25 1193.27 1429.01 1184.29 1430.07 cv
1173.58 1431.33 1163.25 1434.93 1152.48 1435.8 cv
1142.15 1436.64 1131.73 1434.42 1122.56 1429.6 cv
1104.79 1420.27 1093.84 1401.26 1093.85 1381.31 cv
1092.39 1381.92 1090.94 1382.54 1089.48 1383.16 cv
1099.53 1390.06 1111.19 1393.83 1123.42 1393.57 cv
1136.14 1393.3 1148.32 1390 1161.07 1392.28 cv
1183.56 1396.29 1203.16 1412.22 1211.7 1433.37 cv
1213.02 1436.63 1218.03 1434.46 1216.71 1431.19 cv
1216.71 1431.19 li
cp
f
1226.99 1484.98 mo
1242.3 1458.43 1264.99 1430.82 1298.06 1428.93 cv
1305.63 1428.5 1313.85 1429.47 1320.42 1433.51 cv
1321.85 1434.39 1325.04 1436.28 1325.68 1438 cv
1326.49 1440.17 1324.47 1442.29 1323.3 1443.83 cv
1320.99 1446.87 1318.64 1449.88 1316.14 1452.75 cv
1310.97 1458.69 1305 1464.19 1297.74 1467.44 cv
1290.78 1470.56 1283.1 1471.42 1275.54 1471.58 cv
1259.67 1471.91 1243.62 1469.49 1228.42 1475.38 cv
1225.13 1476.65 1227.31 1481.66 1230.59 1480.39 cv
1247.6 1473.81 1266.03 1478.39 1283.69 1476.56 cv
1301.26 1474.74 1313.74 1464.76 1324.43 1451.31 cv
1328.2 1446.56 1334.75 1440.73 1329.98 1434.62 cv
1325.54 1428.93 1318.42 1425.82 1311.54 1424.39 cv
1295.11 1420.99 1277.81 1426.16 1263.84 1434.82 cv
1245.83 1445.99 1233.05 1463.6 1222.63 1481.68 cv
1220.89 1484.69 1225.23 1488.02 1226.99 1484.98 cv
1226.99 1484.98 li
cp
f
1231.42 1473.72 mo
1231.9 1452.56 1244.77 1434.47 1249.28 1414.18 cv
1253.13 1396.83 1252.2 1378.52 1247.11 1361.53 cv
1244.25 1351.98 1235.56 1323.46 1220.76 1333.04 cv
1204.36 1343.66 1216.52 1366.06 1222.99 1378.38 cv
1233.8 1398.97 1237.41 1422.34 1233.49 1445.25 cv
1232.9 1448.72 1238.33 1449.36 1238.92 1445.9 cv
1241.68 1429.76 1240.91 1413.22 1236.48 1397.45 cv
1234.32 1389.78 1231.32 1382.43 1227.57 1375.4 cv
1223.66 1368.06 1218.89 1360.6 1218.26 1352.09 cv
1217.93 1347.56 1218.83 1342.38 1222.13 1339.03 cv
1227.66 1333.4 1231.43 1339.66 1233.99 1344.3 cv
1237.98 1351.51 1241.03 1359.27 1243.07 1367.26 cv
1247.06 1382.91 1247.25 1399.54 1243.45 1415.24 cv
1238.69 1434.93 1226.46 1452.34 1225.99 1473.07 cv
1225.91 1476.55 1231.34 1477.24 1231.42 1473.72 cv
1231.42 1473.72 li
cp
f
1297.42 1371.86 mo
1292.91 1364.71 1292.08 1354.73 1299.02 1348.74 cv
1302.29 1345.9 1308.5 1343.54 1310.17 1349.34 cv
1311.15 1352.74 1309.44 1357.81 1308.61 1361.02 cv
1307.78 1364.25 1312.52 1364.83 1313.86 1362.38 cv
1314.49 1361.22 1315.12 1360.02 1315.92 1358.97 cv
1316.57 1357.78 1317.51 1356.99 1318.75 1356.59 cv
1320.1 1355.43 1320.96 1355.93 1321.35 1358.11 cv
1322.84 1360.48 1322.85 1360.53 1321.46 1362.63 cv
1320.51 1364.08 1319.32 1365.28 1317.91 1366.29 cv
1312.78 1369.98 1305.85 1370.09 1299.8 1370.37 cv
1296.3 1370.54 1297.13 1375.94 1300.62 1375.78 cv
1311.1 1375.29 1328.9 1372.22 1328.48 1357.97 cv
1328.35 1353.52 1324.96 1350.49 1320.54 1350.51 cv
1314.59 1350.54 1311.35 1355.63 1308.8 1360.31 cv
1310.54 1360.76 1312.29 1361.22 1314.04 1361.67 cv
1315.5 1355.99 1317.69 1347.27 1312.79 1342.47 cv
1308.98 1338.73 1302.83 1340 1298.63 1342.37 cv
1286.43 1349.23 1286.37 1364.53 1293.12 1375.24 cv
1295 1378.22 1299.28 1374.82 1297.42 1371.86 cv
1297.42 1371.86 li
cp
f
1185.37 1350.41 mo
1185.32 1341.36 1185.57 1325.58 1172.89 1324.87 cv
1169.05 1324.66 1165.14 1326.45 1163.42 1330.01 cv
1161.11 1334.77 1163.92 1339.65 1166.54 1343.59 cv
1167.61 1342.19 1168.67 1340.78 1169.73 1339.37 cv
1165.2 1337.83 1160.11 1336.46 1155.87 1339.48 cv
1152.5 1341.89 1151.48 1346.09 1153.44 1349.78 cv
1158.59 1359.46 1174.91 1355.99 1182.9 1352.86 cv
1186.18 1351.57 1184 1346.55 1180.72 1347.84 cv
1176.32 1349.57 1171.72 1350.58 1166.97 1350.42 cv
1165.41 1350.37 1159.87 1350.15 1159.54 1348.67 cv
1160.62 1346.82 1161.7 1344.97 1162.78 1343.12 cv
1164.45 1343.39 1166.08 1343.82 1167.66 1344.43 cv
1170.32 1345.34 1172.37 1342.5 1170.84 1340.21 cv
1169.09 1337.59 1165.7 1332.75 1170.37 1330.63 cv
1173.38 1329.25 1176.16 1331.51 1177.68 1333.84 cv
1180.68 1338.46 1179.92 1344.53 1179.94 1349.76 cv
1179.96 1353.24 1185.39 1353.93 1185.37 1350.41 cv
1185.37 1350.41 li
cp
f
1535.51 1439.28 mo
1541.3 1432.87 1546.89 1425.61 1550.18 1417.55 cv
1552.25 1412.5 1554.95 1402.85 1550.6 1398.15 cv
1546.72 1393.96 1541.11 1397.64 1539.37 1401.87 cv
1537.88 1405.5 1537.53 1409.81 1536.82 1413.65 cv
1535.86 1418.82 1535.02 1424.02 1534.29 1429.23 cv
1533.56 1434.44 1532.95 1439.67 1532.45 1444.91 cv
1532.1 1448.52 1530.95 1452.99 1531.86 1456.56 cv
1533.39 1462.54 1539.75 1461.3 1543.72 1458.71 cv
1547.58 1456.18 1575.35 1434.74 1562.13 1430.34 cv
1560.67 1429.86 1559.22 1430.42 1558.56 1431.84 cv
1555.95 1437.47 1554.37 1445 1556.92 1450.98 cv
1559.17 1456.25 1564.26 1456.45 1568.78 1453.93 cv
1573.61 1451.23 1590.24 1435.99 1580.69 1430.51 cv
1579.46 1429.8 1577.77 1429.69 1576.86 1431.03 cv
1574.01 1435.19 1573.66 1439.67 1574.72 1444.56 cv
1575.46 1447.96 1576.41 1453.47 1580.35 1454.5 cv
1584.34 1455.55 1588.02 1451.01 1590.39 1448.57 cv
1594.65 1444.2 1598.08 1439.31 1601.04 1433.99 cv
1601.6 1432.98 1601.06 1431.42 1600.16 1430.78 cv
1596.89 1428.45 1593.1 1430.42 1592.66 1434.41 cv
1592.29 1437.7 1592.72 1445.96 1595.8 1448.14 cv
1599.23 1450.56 1605.11 1447.61 1607.93 1445.5 cv
1612.3 1442.25 1614.89 1437.42 1615.47 1432.05 cv
1615.82 1428.82 1611.63 1428.08 1610.22 1430.69 cv
1608.07 1434.71 1606.42 1439.8 1609.53 1443.81 cv
1611.81 1446.75 1615.59 1447.79 1618.9 1446.05 cv
1621.99 1444.41 1619.84 1439.38 1616.72 1441.03 cv
1613.78 1439.26 1612.89 1437.33 1614.05 1435.25 cv
1614.38 1434.39 1614.8 1433.56 1615.29 1432.76 cv
1613.54 1432.31 1611.79 1431.86 1610.04 1431.4 cv
1609.5 1436.39 1606.61 1440.79 1601.83 1442.7 cv
1599.09 1443.79 1599.01 1444.47 1598.94 1441.71 cv
1598.87 1439.27 1598.81 1436.53 1596.86 1435.14 cv
1596.56 1434.07 1596.27 1432.99 1595.98 1431.92 cv
1592.97 1437.31 1589.24 1442.27 1584.74 1446.51 cv
1582.06 1449.02 1581.45 1448.62 1580.51 1445.15 cv
1579.52 1441.47 1578.89 1437.74 1581.22 1434.34 cv
1579.94 1434.51 1578.66 1434.69 1577.39 1434.87 cv
1580.19 1436.48 1570.01 1446.4 1568.72 1447.39 cv
1567.86 1448.04 1566.17 1449.63 1565.14 1449.71 cv
1562.93 1449.87 1561.66 1447.08 1561.28 1445.5 cv
1560.39 1441.78 1562.08 1437.24 1563.62 1433.91 cv
1562.43 1434.41 1561.24 1434.91 1560.06 1435.41 cv
1560.52 1435.56 1551.19 1445.65 1550.44 1446.33 cv
1548.18 1448.39 1543.38 1453.73 1540.34 1454.41 cv
1535.39 1455.52 1537.44 1450.4 1537.68 1447.65 cv
1537.93 1444.86 1538.21 1442.07 1538.53 1439.28 cv
1539.08 1434.4 1539.73 1429.53 1540.49 1424.68 cv
1541.24 1419.82 1542.09 1414.98 1543.04 1410.17 cv
1543.36 1408.54 1543.61 1401.75 1546.92 1402.93 cv
1548.29 1403.41 1546.61 1411.06 1546.33 1412.06 cv
1543.82 1421.1 1537.33 1429.14 1531.15 1435.98 cv
1528.78 1438.6 1533.16 1441.88 1535.51 1439.28 cv
1535.51 1439.28 li
cp
1 .552941 .403922 rgb
f
1658.15 1440.69 mo
1664.01 1438.03 1667.11 1432.31 1665.95 1425.95 cv
1665.53 1423.64 1662.54 1422.82 1661.07 1424.71 cv
1657.68 1429.06 1655.78 1434.96 1657.55 1440.41 cv
1658.74 1444.09 1661.63 1446.58 1665.62 1445.68 cv
1675.28 1443.49 1685.76 1436.4 1688.12 1426.45 cv
1688.83 1423.47 1683.82 1422.17 1682.87 1425.09 cv
1681.46 1429.45 1680.27 1434.32 1682.68 1438.56 cv
1684.5 1441.76 1688.11 1444.03 1691.87 1443.26 cv
1695.6 1442.5 1699.05 1438.87 1701.55 1436.23 cv
1705.07 1432.51 1707.05 1428.49 1706.62 1423.33 cv
1706.39 1420.57 1702.36 1420.31 1701.39 1422.71 cv
1698.68 1429.35 1697.64 1441.92 1708.37 1441.22 cv
1717.39 1440.63 1725.27 1431.67 1728.87 1424.13 cv
1730.41 1420.9 1725.46 1419.05 1723.81 1422.06 cv
1721.19 1426.84 1719.7 1435.67 1727.37 1436.66 cv
1734.07 1437.53 1738.4 1428.47 1739.73 1423.27 cv
1740.56 1420.02 1735.83 1419.48 1734.48 1421.91 cv
1732.33 1425.78 1733.52 1430.13 1737.01 1432.7 cv
1739.85 1434.79 1743.15 1430.43 1740.31 1428.34 cv
1738.62 1426.93 1738.36 1425.48 1739.55 1423.98 cv
1737.8 1423.53 1736.05 1423.07 1734.3 1422.62 cv
1733.74 1424.82 1732.47 1428.48 1730.26 1429.68 cv
1726.25 1431.86 1727.78 1426.12 1728.87 1424.13 cv
1727.18 1423.44 1725.49 1422.75 1723.81 1422.06 cv
1721.72 1426.44 1718.66 1430.18 1714.59 1432.86 cv
1712.49 1434.25 1708.1 1437.08 1705.56 1434.74 cv
1702.94 1432.32 1705.42 1427.32 1706.45 1424.78 cv
1704.7 1424.57 1702.96 1424.36 1701.21 1424.15 cv
1701.62 1429.02 1697.9 1432.48 1694.5 1435.35 cv
1692.63 1436.93 1690.57 1439.17 1687.72 1436.37 cv
1685.69 1434.38 1687.27 1429.22 1687.94 1427.16 cv
1686.19 1426.71 1684.44 1426.26 1682.69 1425.8 cv
1681.26 1431.81 1675.8 1435.29 1670.57 1437.78 cv
1668.37 1438.83 1665.84 1440.69 1663.79 1439.26 cv
1660.31 1436.84 1663.5 1430.48 1665.43 1428.01 cv
1663.8 1427.59 1662.17 1427.18 1660.54 1426.77 cv
1661.26 1430.7 1659.6 1434.03 1655.98 1435.67 cv
1652.78 1437.13 1654.94 1442.15 1658.15 1440.69 cv
1658.15 1440.69 li
cp
f
1596.65 1495.19 mo
1606.2 1491.81 1613.61 1485.13 1618.25 1476.16 cv
1619.5 1473.74 1616.01 1471.2 1614.03 1472.97 cv
1609.52 1477.02 1606.49 1482.48 1606.51 1488.67 cv
1606.53 1493.65 1609 1497.77 1614.3 1498.08 cv
1626.41 1498.8 1642.39 1494.55 1644.48 1480.7 cv
1644.87 1478.11 1641.95 1477.1 1640.07 1478.23 cv
1636.33 1480.47 1632.59 1483.93 1634.23 1488.72 cv
1635.46 1492.31 1638.66 1493.11 1642.08 1492.45 cv
1651.67 1490.6 1658.63 1482.69 1660.93 1473.5 cv
1661.45 1471.4 1658.84 1469.94 1657.12 1470.67 cv
1647.82 1474.6 1650.95 1487.62 1659.44 1490.39 cv
1670.9 1494.13 1684.81 1483.92 1685.56 1472.25 cv
1685.67 1470.42 1684.27 1469.04 1682.43 1469.22 cv
1672.38 1470.21 1670.97 1483.96 1679.04 1488.71 cv
1690.05 1495.17 1700.11 1484.96 1704.8 1475.88 cv
1706 1473.56 1703.22 1471.64 1701.18 1472.34 cv
1694.12 1474.74 1694.82 1485.15 1700.75 1488.51 cv
1710.69 1494.14 1720.28 1482.42 1723.6 1474.44 cv
1724.72 1471.75 1721.55 1469.84 1719.38 1471.26 cv
1714.14 1474.66 1715.08 1482.67 1720.48 1485.43 cv
1728.6 1489.59 1735.68 1482.1 1739.42 1475.76 cv
1737.78 1475.1 1736.15 1474.44 1734.52 1473.78 cv
1733.99 1477.39 1733.7 1481.51 1736.51 1484.29 cv
1738.68 1486.44 1741.73 1487.03 1744.44 1485.62 cv
1747.54 1484 1745.4 1478.97 1742.26 1480.6 cv
1739.99 1478.84 1739.22 1476.78 1739.95 1474.43 cv
1740.33 1471.9 1736.47 1470.06 1735.06 1472.46 cv
1733.49 1475.11 1731.85 1478.06 1729.14 1479.69 cv
1727.23 1480.84 1726.04 1481.26 1723.85 1480.38 cv
1721.89 1479.6 1719.81 1477.47 1722.76 1475.56 cv
1721.35 1474.49 1719.94 1473.43 1718.54 1472.37 cv
1716.68 1476.83 1713.76 1481.65 1709.05 1483.59 cv
1706.95 1484.46 1703.99 1484.7 1702.38 1482.78 cv
1700.94 1481.06 1701.12 1478.11 1703.36 1477.35 cv
1702.16 1476.17 1700.95 1474.99 1699.74 1473.81 cv
1697.17 1478.78 1693.35 1484.35 1687.29 1485.04 cv
1684.55 1485.35 1680.71 1484.37 1679.47 1481.59 cv
1678.14 1478.61 1680.08 1474.94 1683.25 1474.63 cv
1682.21 1473.62 1681.17 1472.61 1680.13 1471.6 cv
1679.69 1478.45 1673.85 1483.69 1667.35 1485.16 cv
1664.08 1485.9 1659.53 1486 1657.61 1482.57 cv
1656.31 1480.22 1656.63 1476.81 1659.3 1475.68 cv
1658.03 1474.74 1656.77 1473.79 1655.5 1472.85 cv
1654.38 1477.3 1651.79 1481.18 1648.08 1483.89 cv
1646.46 1485.07 1644.67 1486.04 1642.75 1486.65 cv
1640.27 1488.01 1639.6 1487.22 1640.73 1484.29 cv
1641.6 1483.64 1642.5 1483.05 1643.45 1482.53 cv
1641.99 1481.7 1640.52 1480.88 1639.05 1480.05 cv
1637.74 1488.74 1628.7 1491.43 1621.15 1492.22 cv
1617.24 1492.63 1612 1493.24 1612 1487.74 cv
1612 1483.74 1614.56 1479.83 1617.41 1477.27 cv
1616 1476.21 1614.6 1475.15 1613.19 1474.09 cv
1609.19 1481.82 1602.65 1487.28 1594.47 1490.17 cv
1591.15 1491.35 1593.34 1496.36 1596.65 1495.19 cv
1596.65 1495.19 li
cp
f
1660.22 1531.28 mo
1664.66 1527.76 1669.1 1524.23 1673.55 1520.71 cv
1674.28 1520.12 1674.75 1519.1 1674.56 1518.15 cv
1673.53 1512.86 1667.99 1512.31 1665.77 1517 cv
1663.34 1522.12 1662.25 1529.51 1667.96 1532.98 cv
1673.34 1536.26 1683.05 1532.27 1688.4 1530.09 cv
1695.47 1527.22 1701.49 1522.11 1703.61 1514.57 cv
1704.04 1513.03 1703.36 1510.87 1701.4 1510.82 cv
1691.21 1510.56 1688.14 1523.44 1696.53 1528.77 cv
1706.67 1535.21 1717.88 1525 1719.64 1515.11 cv
1720.01 1513.03 1717.66 1511.5 1715.84 1512.28 cv
1709.3 1515.1 1709.37 1524.52 1715.62 1527.71 cv
1724.96 1532.49 1732.34 1522.85 1735.59 1515.46 cv
1737.02 1512.2 1732.09 1510.29 1730.52 1513.39 cv
1725.47 1523.43 1738 1530.94 1745.41 1523.35 cv
1747.87 1520.83 1743.48 1517.56 1741.05 1520.04 cv
1736.96 1524.24 1734.17 1518.27 1735.59 1515.46 cv
1733.9 1514.77 1732.21 1514.08 1730.52 1513.39 cv
1729.18 1516.44 1727.62 1519.99 1724.73 1521.92 cv
1723.46 1522.77 1721.3 1523.59 1719.72 1523.3 cv
1717.31 1522.87 1714.26 1518.92 1718.02 1517.3 cv
1716.75 1516.35 1715.48 1515.41 1714.21 1514.46 cv
1713.42 1518.87 1710.49 1523.15 1706.1 1524.66 cv
1703.42 1525.58 1700.08 1525.38 1698.11 1523.03 cv
1696.15 1520.7 1696.79 1516.14 1700.75 1516.25 cv
1700.02 1515 1699.28 1513.75 1698.55 1512.5 cv
1696.61 1519.4 1691.02 1523.43 1684.48 1525.73 cv
1681.64 1526.72 1678.25 1527.95 1675.23 1528.11 cv
1666.32 1528.59 1669.41 1521.9 1671.61 1517.5 cv
1670.9 1518.05 1670.2 1518.61 1669.49 1519.17 cv
1669.38 1519.1 1669.26 1519.03 1669.15 1518.97 cv
1669.49 1518.11 1669.83 1517.26 1670.17 1516.41 cv
1665.72 1519.93 1661.28 1523.46 1656.84 1526.98 cv
1654.08 1529.17 1657.46 1533.47 1660.22 1531.28 cv
1660.22 1531.28 li
cp
f
1496.28 962.852 mo
1505.89 951.917 1523.47 953.032 1536.48 955.145 cv
1552.18 957.696 1567.97 961.973 1583.71 957.322 cv
1592.02 954.866 1599.5 951.627 1608.37 952.342 cv
1616.74 953.015 1624.66 954.555 1633.09 953.619 cv
1641.6 952.673 1649.86 950.28 1658.34 949.174 cv
1666.67 948.09 1675.06 948.368 1683.42 948.856 cv
1700.43 949.85 1717.74 951.705 1734.12 945.801 cv
1737.44 944.607 1735.25 939.593 1731.95 940.784 cv
1715.96 946.544 1698.78 944.214 1682.21 943.321 cv
1674.33 942.897 1666.36 942.704 1658.51 943.637 cv
1649.68 944.685 1641.11 947.228 1632.27 948.21 cv
1623.01 949.239 1614.21 946.749 1605.01 946.734 cv
1597.3 946.72 1590.5 949.52 1583.25 951.778 cv
1565.86 957.199 1548.7 950.806 1531.33 948.906 cv
1517.59 947.404 1501.63 948.502 1491.92 959.55 cv
1489.59 962.199 1493.97 965.482 1496.28 962.852 cv
1496.28 962.852 li
cp
.286275 .388235 .454902 rgb
f
1503.38 993.921 mo
1515.24 979.289 1539.74 989.133 1554.72 991.541 cv
1563.28 992.918 1571.63 992.833 1579.82 989.839 cv
1589.41 986.34 1597.16 981.528 1607.82 982.877 cv
1617.71 984.128 1626.8 986.329 1636.87 985.788 cv
1647.44 985.221 1658 984.195 1668.55 983.379 cv
1690.73 981.664 1712.91 979.948 1735.09 978.233 cv
1738.6 977.962 1737.77 972.554 1734.27 972.825 cv
1716.39 974.208 1698.5 975.591 1680.62 976.975 cv
1671.67 977.666 1662.73 978.358 1653.79 979.05 cv
1644.91 979.736 1635.79 981.025 1626.88 980.409 cv
1618.74 979.848 1610.89 977.013 1602.69 977.076 cv
1595.66 977.131 1589.48 979.742 1583.14 982.534 cv
1575.25 986.011 1567.83 987.628 1559.17 986.647 cv
1551.19 985.742 1543.47 983.447 1535.58 982.047 cv
1523.18 979.847 1507.64 979.983 1499.02 990.619 cv
1496.8 993.361 1501.17 996.651 1503.38 993.921 cv
1503.38 993.921 li
cp
f
1512.34 1026.05 mo
1523.9 1015.29 1542.95 1020.8 1556.98 1021.85 cv
1575.99 1023.27 1594.67 1018.66 1613.51 1016.98 cv
1655.83 1013.18 1698.49 1011.8 1740.91 1009.31 cv
1744.42 1009.1 1743.59 1003.7 1740.1 1003.9 cv
1717.74 1005.21 1695.39 1006.52 1673.04 1007.83 cv
1651.6 1009.09 1630.02 1009.73 1608.66 1011.96 cv
1588.8 1014.02 1569.98 1017.81 1549.94 1015.68 cv
1536.45 1014.25 1519.87 1011.6 1508.96 1021.75 cv
1506.4 1024.14 1509.76 1028.46 1512.34 1026.05 cv
1512.34 1026.05 li
cp
f
1521.26 1072.93 mo
1538.94 1065.38 1558.45 1065.36 1577.34 1065.4 cv
1597.26 1065.44 1617.18 1065.54 1637.1 1065.55 cv
1673.24 1065.57 1709.99 1064.81 1744.56 1053.1 cv
1747.89 1051.97 1745.7 1046.96 1742.38 1048.09 cv
1706.27 1060.31 1667.56 1060.2 1629.88 1060.11 cv
1610.03 1060.06 1590.18 1059.86 1570.34 1059.97 cv
1552.94 1060.08 1535.3 1060.99 1519.08 1067.91 cv
1515.85 1069.29 1518.02 1074.32 1521.26 1072.93 cv
1521.26 1072.93 li
cp
f
1526.66 1095.08 mo
1542.03 1087.57 1559.44 1087.43 1576.2 1087.31 cv
1594.88 1087.18 1613.56 1086.79 1632.23 1086.01 cv
1670.59 1084.41 1708.88 1081.31 1747.01 1076.79 cv
1750.5 1076.37 1749.69 1070.96 1746.19 1071.38 cv
1707.36 1075.99 1668.35 1079.12 1629.27 1080.69 cv
1609.97 1081.47 1590.68 1081.7 1571.37 1081.93 cv
1555.41 1082.12 1539.07 1082.94 1524.48 1090.06 cv
1521.33 1091.6 1523.48 1096.63 1526.66 1095.08 cv
1526.66 1095.08 li
cp
f
1538.21 1121.72 mo
1555.32 1115.08 1573.92 1114.43 1592.06 1114.63 cv
1609.87 1114.82 1627.64 1115.33 1645.45 1114.79 cv
1682.12 1113.67 1718.64 1109.91 1755.12 1106.15 cv
1758.62 1105.78 1757.8 1100.38 1754.3 1100.74 cv
1717.12 1104.58 1679.9 1108.42 1642.51 1109.44 cv
1623.81 1109.95 1605.15 1109.11 1586.46 1109.17 cv
1569.35 1109.23 1552.12 1110.46 1536.03 1116.71 cv
1532.75 1117.98 1534.92 1123 1538.21 1121.72 cv
1538.21 1121.72 li
cp
f
1023.66 716.146 mo
1044.2 712.824 1065.02 711.718 1085.79 713.142 cv
1105.27 714.477 1124.47 719.176 1144.08 718.032 cv
1164.27 716.854 1184.43 712.491 1204.37 709.29 cv
1224.64 706.037 1244.91 702.784 1265.18 699.53 cv
1288.65 695.764 1312.12 691.997 1335.59 688.23 cv
1339.05 687.673 1338.26 682.262 1334.77 682.822 cv
1293.88 689.385 1252.98 695.948 1212.09 702.511 cv
1191.91 705.751 1171.68 709.707 1151.35 711.931 cv
1130.74 714.186 1111.07 709.746 1090.63 708.031 cv
1068.02 706.134 1045.24 707.115 1022.84 710.737 cv
1019.37 711.298 1020.17 716.709 1023.66 716.146 cv
1023.66 716.146 li
cp
f
1025.83 737.54 mo
1063.83 728.433 1102.82 734.942 1141.32 735.543 cv
1181.01 736.164 1220.58 731.883 1259.75 725.784 cv
1282.55 722.234 1305.26 718.075 1327.95 713.911 cv
1331.4 713.278 1330.61 707.865 1327.14 708.502 cv
1287.62 715.752 1248.04 723 1208.03 727.019 cv
1187.47 729.083 1166.82 730.304 1146.15 730.161 cv
1126.99 730.028 1107.9 728.395 1088.77 727.615 cv
1067.4 726.743 1045.91 727.123 1025.02 732.132 cv
1021.62 732.945 1022.4 738.363 1025.83 737.54 cv
1025.83 737.54 li
cp
f
1035.36 766.111 mo
1064.67 761.161 1094.34 758.991 1124.05 759.707 cv
1127.54 759.791 1128.22 754.362 1124.7 754.277 cv
1094.5 753.55 1064.34 755.671 1034.55 760.702 cv
1031.08 761.287 1031.88 766.699 1035.36 766.111 cv
1035.36 766.111 li
cp
f
1154.12 756.876 mo
1183.41 750.517 1213.25 747.543 1243.1 745.373 cv
1273.59 743.157 1304.1 741.284 1334.6 739.263 cv
1338.11 739.031 1337.29 733.623 1333.79 733.855 cv
1303.29 735.875 1272.77 737.751 1242.29 739.965 cv
1212.43 742.132 1182.59 745.109 1153.3 751.467 cv
1149.89 752.209 1150.67 757.625 1154.12 756.876 cv
1154.12 756.876 li
cp
f
1034.11 804.788 mo
1049.87 799.808 1066.45 799.716 1082.82 799.511 cv
1098.7 799.312 1114.53 798.507 1130.34 797.045 cv
1163.56 793.976 1196.48 788.467 1229.35 782.962 cv
1232.82 782.383 1232.02 776.971 1228.54 777.554 cv
1194.97 783.174 1161.36 788.799 1127.43 791.827 cv
1110.72 793.319 1094.01 793.926 1077.23 794.157 cv
1061.89 794.369 1046.66 795.116 1031.93 799.772 cv
1028.58 800.831 1030.78 805.842 1034.11 804.788 cv
1034.11 804.788 li
cp
f
1250.09 779.967 mo
1281 777.044 1311.81 773.211 1342.49 768.471 cv
1345.96 767.934 1345.16 762.523 1341.67 763.062 cv
1310.99 767.802 1280.18 771.636 1249.27 774.558 cv
1245.77 774.889 1246.59 780.298 1250.09 779.967 cv
1250.09 779.967 li
cp
f
1041.93 833.045 mo
1070.93 831.242 1099.93 829.391 1128.92 827.492 cv
1132.43 827.262 1131.6 821.854 1128.1 822.083 cv
1099.11 823.983 1070.12 825.833 1041.12 827.636 cv
1037.61 827.854 1038.44 833.262 1041.93 833.045 cv
1041.93 833.045 li
cp
f
1148.82 825.998 mo
1212.91 821.632 1276.72 813.804 1339.97 802.548 cv
1343.42 801.933 1342.63 796.52 1339.15 797.139 cv
1275.91 808.395 1212.09 816.224 1148 820.589 cv
1144.49 820.828 1145.32 826.236 1148.82 825.998 cv
1148.82 825.998 li
cp
f
1753.31 1246.35 mo
1674.03 1274.31 1588.78 1253.69 1507.03 1260.33 cv
1484.45 1262.17 1462.13 1266.22 1440.66 1273.52 cv
1437.33 1274.65 1439.52 1279.66 1442.84 1278.53 cv
1522.41 1251.47 1607.5 1272.28 1689.32 1265.12 cv
1711.86 1263.15 1734.13 1258.9 1755.49 1251.37 cv
1758.81 1250.2 1756.62 1245.19 1753.31 1246.35 cv
1753.31 1246.35 li
cp
f
1454.14 1295.6 mo
1519.04 1294.63 1583.89 1291.64 1648.59 1286.62 cv
1652.1 1286.35 1651.27 1280.94 1647.78 1281.21 cv
1583.07 1286.23 1518.22 1289.22 1453.33 1290.19 cv
1449.83 1290.24 1450.67 1295.65 1454.14 1295.6 cv
1454.14 1295.6 li
cp
f
1679.82 1286.89 mo
1704.3 1281.93 1729.08 1278.74 1754.02 1277.32 cv
1757.52 1277.12 1756.7 1271.71 1753.2 1271.91 cv
1728.26 1273.33 1703.49 1276.53 1679 1281.48 cv
1675.57 1282.17 1676.35 1287.59 1679.82 1286.89 cv
1679.82 1286.89 li
cp
f
1529.58 1316.49 mo
1606.07 1312.67 1682.57 1308.85 1759.07 1305.03 cv
1762.58 1304.86 1761.74 1299.45 1758.25 1299.62 cv
1681.75 1303.44 1605.26 1307.26 1528.76 1311.08 cv
1525.25 1311.26 1526.08 1316.66 1529.58 1316.49 cv
1529.58 1316.49 li
cp
f
1574.16 736.31 mo
1573.62 722.989 1566.68 711.185 1557.37 701.974 cv
1549.04 693.724 1536.08 685.385 1524.03 690.727 cv
1513.65 695.326 1510.67 707.596 1511.13 717.952 cv
1511.73 731.366 1517.6 744.639 1524.37 756.01 cv
1532.92 770.384 1544.01 782.991 1555.12 795.421 cv
1557.45 798.036 1561.77 794.673 1559.42 792.042 cv
1549.56 781.008 1539.7 769.854 1531.63 757.409 cv
1523.68 745.134 1516.19 729.932 1516.52 714.946 cv
1516.66 708.767 1518.18 701.519 1523.33 697.501 cv
1530.46 691.932 1539.74 695.262 1546.39 699.844 cv
1558.6 708.256 1568.14 722.062 1568.75 737.126 cv
1568.89 740.633 1574.3 739.8 1574.16 736.31 cv
1574.16 736.31 li
cp
1 1 1 rgb
f
1574.08 735.963 mo
1580.87 725.025 1589.05 711.357 1602.75 708.668 cv
1608.48 707.541 1615.19 708.259 1619.85 712.086 cv
1626.63 717.659 1625.76 727.313 1622.27 734.492 cv
1618.97 741.296 1613.49 747.045 1608.6 752.733 cv
1603.92 758.18 1599.14 763.551 1594.05 768.623 cv
1583.8 778.847 1572.38 787.804 1559.07 793.667 cv
1555.85 795.083 1558.01 800.106 1561.24 798.683 cv
1577.44 791.553 1590.84 780.103 1602.88 767.317 cv
1609.06 760.748 1615.1 753.928 1620.67 746.833 cv
1625.91 740.165 1630.41 732.541 1630.45 723.809 cv
1630.53 709.347 1617.42 701.409 1604.05 702.926 cv
1587.62 704.791 1577.7 719.821 1569.72 732.66 cv
1567.88 735.632 1572.23 738.953 1574.08 735.963 cv
1574.08 735.963 li
cp
f
1488.64 779.695 mo
1487.48 776.423 1487.06 772.032 1489.13 768.963 cv
1494.41 761.132 1497.28 772.728 1497.22 775.859 cv
1497.1 782.247 1496.3 788.691 1495.82 795.063 cv
1495.56 798.561 1500.99 799.231 1501.25 795.713 cv
1501.8 788.341 1503.17 780.564 1502.66 773.173 cv
1502.32 768.295 1500.1 763.343 1495.19 761.601 cv
1483.39 757.42 1480.94 774.312 1483.63 781.873 cv
1484.8 785.19 1489.82 783.004 1488.64 779.695 cv
1488.64 779.695 li
cp
f
1488.45 779.378 mo
1484.6 775.752 1479.88 772.037 1474.22 773.404 cv
1469.75 774.482 1466.75 778.461 1467.71 783.09 cv
1470.24 795.321 1488.63 799.194 1498.85 798.377 cv
1502.36 798.096 1501.54 792.688 1498.04 792.968 cv
1490.91 793.538 1483.6 791.873 1477.77 787.608 cv
1474.88 785.498 1470.75 781.037 1475.49 779.02 cv
1479.06 777.499 1482.8 781.529 1485.15 783.738 cv
1487.72 786.151 1490.99 781.766 1488.45 779.378 cv
1488.45 779.378 li
cp
f
1633.03 808.813 mo
1634.85 807.078 1637.16 804.644 1639.72 805.795 cv
1643.4 807.445 1640.24 811.8 1638.32 813.759 cv
1634.98 817.174 1630.84 819.394 1626.31 820.816 cv
1622.96 821.87 1625.16 826.881 1628.49 825.833 cv
1636.02 823.468 1647.52 816.758 1646.86 807.473 cv
1646.61 804.016 1644.52 800.822 1641.04 799.919 cv
1636.69 798.789 1632.62 801.677 1629.65 804.513 cv
1627.12 806.923 1630.47 811.243 1633.03 808.813 cv
1633.03 808.813 li
cp
f
1633.65 807.823 mo
1632.63 801.37 1623.31 790.815 1617.57 799.346 cv
1612.57 806.779 1619 818.69 1623.2 824.941 cv
1624.49 826.868 1627.94 825.888 1628.06 823.577 cv
1628.32 818.791 1628.07 814.092 1627.26 809.367 cv
1626.66 805.907 1621.25 806.701 1621.85 810.183 cv
1622.58 814.439 1622.86 818.607 1622.63 822.926 cv
1624.26 822.471 1625.88 822.017 1627.5 821.562 cv
1624.71 817.415 1622.33 812.51 1621.59 807.511 cv
1621.42 806.336 1620.97 803.068 1622.19 802.224 cv
1623.75 801.149 1626.03 803.596 1626.73 804.591 cv
1627.65 805.909 1627.98 806.998 1628.24 808.638 cv
1628.79 812.109 1634.2 811.311 1633.65 807.823 cv
1633.65 807.823 li
cp
f
1561.08 583.608 mo
1569.49 579.715 1580.46 571.174 1572.97 561.069 cv
1571.98 559.735 1569.58 559.635 1568.64 561.107 cv
1562.62 570.502 1560.26 581.207 1561.95 592.257 cv
1562.19 593.86 1563.57 594.576 1565.06 594.553 cv
1573.96 594.418 1581.48 589.301 1585.41 581.419 cv
1586.78 578.692 1583.26 576.983 1581.19 578.234 cv
1577.38 580.549 1576.36 584.996 1577.52 589.14 cv
1579.1 594.789 1584.1 597.651 1589.75 597.913 cv
1594.96 598.154 1602.89 596.669 1606.81 592.88 cv
1609.96 589.835 1610.19 584.457 1606.21 582.032 cv
1604.87 581.214 1603.44 581.362 1602.38 582.561 cv
1597.49 588.056 1600.46 597.311 1607.25 599.772 cv
1615.58 602.792 1622.89 594.97 1624.16 587.417 cv
1624.76 583.859 1619.57 583.461 1618.73 586.766 cv
1617.14 593.042 1620.88 600.093 1627.38 601.616 cv
1634.38 603.258 1640.49 597.941 1641.83 591.371 cv
1642.37 588.709 1638.41 587.215 1636.93 589.394 cv
1633.78 594.021 1634.21 600.864 1639.27 604.087 cv
1644.68 607.53 1651.09 604.653 1653.91 599.477 cv
1652.16 599.024 1650.41 598.57 1648.66 598.117 cv
1648.16 603.277 1651.39 607.496 1656.3 609.05 cv
1662.62 611.05 1668.67 607.157 1673.43 603.415 cv
1671.97 602.59 1670.5 601.765 1669.03 600.94 cv
1668.02 605.797 1669.27 610.339 1672.6 614.014 cv
1674.95 616.611 1679.27 613.248 1676.9 610.635 cv
1674.46 607.942 1673.73 605.102 1674.46 601.591 cv
1674.96 599.198 1671.81 597.741 1670.06 599.116 cv
1667.68 600.982 1665.19 602.948 1662.2 603.685 cv
1658.84 604.513 1653.64 603.411 1654.09 598.767 cv
1654.4 595.529 1650.27 594.791 1648.84 597.406 cv
1645.67 603.241 1637.64 598.055 1641.29 592.697 cv
1639.66 592.038 1638.03 591.379 1636.4 590.72 cv
1635.52 595.034 1630.57 598.031 1626.68 595.247 cv
1624.04 593.356 1623.39 590.465 1624.16 587.417 cv
1622.35 587.2 1620.54 586.983 1618.73 586.766 cv
1618.06 590.774 1614.53 595.738 1609.83 594.822 cv
1605.79 594.036 1604.12 588.806 1606.74 585.863 cv
1605.46 586.039 1604.18 586.215 1602.91 586.392 cv
1602.98 588.693 1602.1 590.047 1600.24 590.452 cv
1598.87 590.95 1597.47 591.375 1596.06 591.729 cv
1593.45 592.353 1590.76 592.794 1588.11 592.176 cv
1584.14 591.245 1579.54 585.586 1584.57 582.533 cv
1583.17 581.471 1581.76 580.41 1580.35 579.348 cv
1577.21 585.644 1571.18 589.039 1564.24 589.144 cv
1565.28 589.91 1566.32 590.675 1567.35 591.441 cv
1565.89 581.876 1567.77 572.578 1573 564.409 cv
1571.56 564.422 1570.11 564.435 1568.67 564.448 cv
1573.65 571.164 1563.71 576.365 1558.91 578.591 cv
1555.72 580.068 1557.88 585.093 1561.08 583.608 cv
1561.08 583.608 li
cp
f
1467.3 620.811 mo
1474.18 619.625 1480.7 617.282 1486.63 613.557 cv
1490.77 610.955 1497.59 606.655 1498.55 601.361 cv
1499.28 597.389 1496.33 593.546 1492.13 594.258 cv
1486.52 595.21 1481.6 603.192 1478.75 607.507 cv
1474.45 614.01 1462.74 632.698 1474.83 637.414 cv
1483.43 640.768 1498.38 635.031 1501.32 626.166 cv
1501.83 624.644 1501.2 623.347 1499.83 622.6 cv
1492.45 618.598 1486.31 628.481 1491.54 634.327 cv
1498.45 642.055 1509.3 635.117 1514.99 629.561 cv
1513.7 628.294 1512.41 627.027 1511.12 625.76 cv
1507.71 630.446 1509.15 636.924 1514.37 639.648 cv
1521.11 643.161 1528.09 639.401 1533.85 635.786 cv
1532.39 634.961 1530.92 634.135 1529.45 633.31 cv
1528.43 637.691 1531.35 641.88 1535.61 643.178 cv
1540.69 644.729 1545.53 641.786 1549.62 639.106 cv
1548.16 638.526 1546.69 637.945 1545.23 637.364 cv
1546.31 642.034 1545.9 646.326 1543.43 650.543 cv
1541.67 653.55 1546.01 656.878 1547.79 653.845 cv
1550.97 648.407 1552.07 642.746 1550.64 636.548 cv
1550.15 634.452 1548.03 633.637 1546.24 634.807 cv
1544.08 636.223 1533.04 641.837 1534.88 633.961 cv
1535.48 631.388 1532.23 630.385 1530.47 631.486 cv
1528.38 632.8 1526.23 634.214 1523.85 634.972 cv
1520.54 636.03 1511.34 634.757 1515.48 629.062 cv
1517.22 626.655 1513.91 623.015 1511.61 625.261 cv
1509.53 627.289 1507.26 629.295 1504.67 630.649 cv
1503.51 631.257 1502.18 631.884 1500.89 632.119 cv
1499.58 632.534 1498.38 632.392 1497.28 631.691 cv
1495.1 631.208 1495.26 629.865 1497.75 627.662 cv
1497.26 626.473 1496.76 625.284 1496.26 624.096 cv
1494.41 629.667 1484.4 633.964 1478.61 632.663 cv
1473.24 631.455 1475.62 626.255 1477.01 622.677 cv
1478.5 618.803 1480.36 615.096 1482.6 611.599 cv
1484.45 608.709 1486.53 605.926 1488.85 603.391 cv
1489.14 603.066 1494 597.768 1492.14 602.083 cv
1491.62 603.272 1488.68 605.36 1487.58 606.227 cv
1481.4 611.085 1474.2 614.073 1466.49 615.403 cv
1463.03 615.999 1463.82 621.411 1467.3 620.811 cv
1467.3 620.811 li
cp
f
1608.19 646.611 mo
1613.64 645.103 1618.5 642.279 1621.86 637.604 cv
1624.18 634.371 1626.29 629.008 1622.53 625.918 cv
1613.5 618.516 1608.85 640.169 1608.98 645.466 cv
1609.29 657.955 1621.5 663.23 1632.49 660.713 cv
1636.88 659.708 1643.61 658.015 1646.34 654.068 cv
1648.55 650.88 1647.62 646.535 1643.84 645.169 cv
1642.71 644.762 1641.35 645.044 1640.62 646.049 cv
1636.69 651.481 1638.35 658.961 1643.73 662.846 cv
1650.23 667.54 1658.88 664.608 1664.44 659.921 cv
1662.97 659.096 1661.5 658.271 1660.03 657.446 cv
1659.97 662.834 1663.5 666.912 1668.82 668.005 cv
1675.7 669.415 1681.42 664.657 1685.93 660.114 cv
1684.46 659.289 1682.99 658.464 1681.53 657.639 cv
1680.44 669.943 1693.39 677.289 1703.44 670.175 cv
1701.97 669.594 1700.51 669.014 1699.05 668.433 cv
1699.57 672.224 1699.97 677.231 1698.5 680.911 cv
1699.45 680.351 1700.41 679.791 1701.36 679.231 cv
1701.19 679.205 1701.02 679.179 1700.86 679.152 cv
1701.58 679.694 1702.31 680.236 1703.04 680.778 cv
1702.98 680.586 1702.92 680.395 1702.87 680.203 cv
1702.17 681.467 1701.47 682.732 1700.77 683.997 cv
1700.86 683.986 1700.96 683.976 1701.05 683.965 cv
1704.55 683.585 1703.74 678.177 1700.24 678.557 cv
1700.14 678.567 1700.05 678.578 1699.95 678.588 cv
1698.02 678.797 1697.37 680.784 1697.85 682.381 cv
1697.91 682.573 1697.96 682.765 1698.02 682.956 cv
1698.3 683.871 1699.33 684.445 1700.21 684.582 cv
1700.37 684.608 1700.54 684.635 1700.71 684.661 cv
1701.88 684.845 1703.13 684.066 1703.56 682.982 cv
1705.41 678.351 1705.13 672.483 1704.45 667.617 cv
1704.16 665.495 1701.7 664.716 1700.06 665.875 cv
1693.94 670.205 1686.3 665.686 1686.96 658.29 cv
1687.14 656.174 1684.33 654.023 1682.55 655.815 cv
1680.32 658.062 1677.96 660.503 1675.04 661.831 cv
1671.87 663.267 1665.4 663.225 1665.46 658.097 cv
1665.49 655.899 1663.03 653.957 1661.06 655.622 cv
1657.81 658.361 1653.61 660.629 1649.24 659.391 cv
1645.08 658.216 1642.15 653.256 1644.98 649.351 cv
1643.91 649.644 1642.84 649.938 1641.77 650.231 cv
1642.58 650.526 1636.4 653.771 1636.03 653.91 cv
1633.09 655.019 1630.08 655.865 1626.94 655.924 cv
1620.79 656.039 1615.09 652.712 1614.45 646.149 cv
1614.02 641.67 1615.8 636.087 1618.03 632.226 cv
1618.7 631.073 1619.28 630.383 1618.73 632.236 cv
1618.28 633.745 1616.71 635.365 1615.59 636.479 cv
1613.29 638.786 1610.52 640.333 1607.37 641.202 cv
1604.02 642.127 1604.79 647.549 1608.19 646.611 cv
1608.19 646.611 li
cp
f
1184.08 1454.73 mo
1173.75 1456.81 1154.26 1457.39 1151.83 1470.83 cv
1150.98 1475.56 1153.16 1480.09 1157.56 1482.17 cv
1163.5 1484.97 1169.77 1482.47 1175.24 1479.83 cv
1174.15 1478.44 1173.06 1477.06 1171.97 1475.67 cv
1167.88 1480.62 1166.8 1487.69 1171.29 1492.8 cv
1175.06 1497.08 1181.29 1497.64 1185.87 1494.34 cv
1197.67 1485.85 1194.32 1466.97 1187.47 1456.62 cv
1185.52 1453.68 1181.23 1457.08 1183.17 1460 cv
1187.58 1466.67 1189.64 1475.55 1187.07 1483.33 cv
1186.02 1486.51 1183.83 1490.31 1180.22 1490.86 cv
1172.62 1492.03 1173.13 1482.85 1176.33 1478.97 cv
1178.06 1476.88 1175.5 1473.63 1173.06 1474.81 cv
1169.65 1476.46 1165.68 1478.62 1161.75 1477.83 cv
1154.21 1476.3 1157.58 1468.12 1162.38 1465.55 cv
1168.84 1462.08 1177.77 1461.57 1184.89 1460.14 cv
1188.33 1459.45 1187.54 1454.03 1184.08 1454.73 cv
1184.08 1454.73 li
cp
.407843 .815686 .745098 rgb
f
1262.14 1308.33 mo
1260.43 1304.93 1258.52 1301.38 1257.86 1297.59 cv
1257.65 1296.4 1258.21 1285.82 1260.57 1286.89 cv
1262.15 1287.6 1257.21 1305.67 1256.69 1307.95 cv
1255.91 1311.38 1261.34 1312 1262.12 1308.6 cv
1263.08 1304.37 1272.32 1276.03 1259.53 1281.11 cv
1255.18 1282.83 1252.8 1288.05 1252.25 1292.39 cv
1251.45 1298.85 1254.3 1304.91 1257.12 1310.51 cv
1258.69 1313.64 1263.72 1311.49 1262.14 1308.33 cv
1262.14 1308.33 li
cp
f
1125.96 1343.96 mo
1121.87 1339.95 1096.57 1309.92 1091.67 1328.11 cv
1089.72 1335.34 1097.2 1340.6 1102.44 1343.85 cv
1109.17 1348.02 1116.66 1350.5 1124.58 1348.92 cv
1128.02 1348.23 1127.23 1342.82 1123.76 1343.51 cv
1118.28 1344.6 1113.2 1343.44 1108.27 1340.91 cv
1106.34 1339.93 1104.51 1338.74 1102.75 1337.48 cv
1101.78 1336.79 1100.83 1336.06 1099.9 1335.3 cv
1096.83 1333.42 1097.03 1331.09 1100.51 1328.3 cv
1103.97 1328.54 1108.34 1334.31 1110.6 1336.52 cv
1114.62 1340.46 1118.64 1344.39 1122.66 1348.32 cv
1125.18 1350.78 1128.45 1346.39 1125.96 1343.96 cv
1125.96 1343.96 li
cp
f
1132.79 1319.57 mo
1129.43 1315.68 1127.29 1310.97 1127.36 1305.75 cv
1127.38 1304.06 1127.62 1302.2 1128.21 1300.62 cv
1129.43 1297.4 1136.75 1292.34 1136.62 1300.15 cv
1136.56 1303.91 1132.87 1307.34 1131.35 1310.67 cv
1129.82 1314.02 1129.56 1316.99 1130.74 1320.45 cv
1131.88 1323.78 1136.89 1321.59 1135.76 1318.28 cv
1133.39 1311.33 1143.61 1305.03 1141.98 1297.32 cv
1140.88 1292.07 1135.34 1289.54 1130.43 1291.14 cv
1117.04 1295.52 1121.74 1315.13 1128.49 1322.95 cv
1130.78 1325.61 1135.09 1322.24 1132.79 1319.57 cv
1132.79 1319.57 li
cp
f
2651.2 1602.14 mo
2271.83 1760.11 li
2243.32 1736.48 2215.94 1713.79 2190.27 1692.54 cv
2190.27 1692.52 2190.25 1692.52 2190.22 1692.51 cv
2164.46 1671.14 2140.42 1651.24 2118.74 1633.31 cv
2118.74 1633.31 2118.74 1633.29 2118.72 1633.3 cv
2089.31 1608.95 2064.25 1588.22 2045.12 1572.4 cv
2045.09 1572.37 2045.07 1572.37 2045.04 1572.34 cv
2045.04 1572.33 li
2041.04 1569.02 2037.33 1565.96 2033.88 1563.1 cv
2033.88 1563.09 li
2014.71 1547.25 2003.9 1538.29 2003.85 1538.2 cv
2003.84 1538.19 li
2003.79 1538.1 2003.73 1538.02 2003.7 1537.93 cv
2003.64 1537.84 2003.59 1537.75 2003.54 1537.68 cv
2003.53 1537.67 li
1997.05 1526.82 1990.78 1516.63 1984.78 1507.19 cv
1965.31 1476.5 1948.77 1453.81 1936.85 1443.46 cv
1983 1377.9 li
1996.59 1358.57 li
1998.03 1356.52 li
1999.79 1354.02 li
1999.79 1354.02 2002.09 1336.21 2005.71 1308.12 cv
2013.62 1246.72 2027.89 1136.18 2038.38 1055.23 cv
2039.3 1048.12 2040.19 1041.23 2041.05 1034.62 cv
2043.52 1015.62 2045.68 998.937 2047.38 985.84 cv
2049.87 966.797 2051.38 955.331 2051.41 955.319 cv
2051.52 955.506 2051.62 955.7 2051.74 955.887 cv
2059.14 968.409 2108.16 1057.44 2168.48 1154.27 cv
2214.96 1228.9 2268.14 1308.16 2314.14 1360.61 cv
2323.27 1371.02 2332.11 1380.38 2340.58 1388.43 cv
2340.58 1388.45 li
2344.67 1392.36 2348.67 1395.94 2352.57 1399.19 cv
2355.29 1401.47 2357.96 1403.59 2360.57 1405.53 cv
2360.57 1405.53 2360.59 1405.53 2360.6 1405.54 cv
2361.57 1406.28 2362.52 1406.96 2363.49 1407.64 cv
2363.49 1407.81 2363.54 1407.98 2363.63 1408.18 cv
2368.17 1419.09 2492.71 1496.28 2645.46 1588.35 cv
2651.2 1602.14 li
cp
.992157 .729412 .627451 rgb
f
2038.42 1572.65 mo
1919.86 1531.84 1801.59 1368.51 1776.14 1317.01 cv
1728.54 1220.71 1645.03 1164.86 1648.05 1148.01 cv
1651.07 1131.17 1694.55 1100.59 1769.49 1149.01 cv
1840.7 1195.02 1886.94 1266.69 1935.84 1267.02 cv
1955.19 1267.15 1981.24 1316.14 1981.24 1316.14 cv
1981.24 1316.14 2083.71 1588.24 2038.42 1572.65 cv
cp
f
1667.39 1163.91 mo
1668.14 1157.18 1676.51 1162.86 1678.66 1164.8 cv
1680.26 1166.24 1681.7 1167.89 1683.16 1169.46 cv
1686.52 1173.08 1689.76 1176.82 1693.01 1180.55 cv
1698.74 1187.13 1712.8 1198.35 1702.32 1206.76 cv
1699.45 1209.06 1703.55 1213.07 1706.39 1210.79 cv
1721.78 1198.44 1701.52 1181.55 1693.27 1172.17 cv
1688.03 1166.2 1681.73 1156.7 1673.28 1155.24 cv
1667.24 1154.2 1662.31 1158.18 1661.66 1164.01 cv
1661.25 1167.66 1666.98 1167.53 1667.39 1163.91 cv
1667.39 1163.91 li
cp
.905882 .592157 .501961 rgb
f
2091.49 1050.57 mo
2086.49 1052.33 1978.02 1055.69 1987.01 1071.02 cv
2022.07 1130.82 2021.33 1214.57 1998.85 1240.9 cv
1955.8 1291.34 1892.86 1258.43 1886.13 1254.43 cv
2034.05 1442.97 li
2079.96 1457.54 2337.28 1507.72 2339.41 1491.9 cv
2348.15 1427 2104.23 1046.07 2091.49 1050.57 cv
cp
.992157 .729412 .627451 rgb
f
2019.49 1568.77 mo
2045.4 1574.24 2071.81 1574.1 2097.67 1568.4 cv
2102.76 1567.28 2100.53 1559.52 2095.47 1560.63 cv
2070.98 1566.03 2045.94 1566.1 2021.41 1560.92 cv
2016.34 1559.85 2014.38 1567.69 2019.49 1568.77 cv
2019.49 1568.77 li
cp
.937255 .623529 .541176 rgb
f
2135.26 1374.63 mo
2135.26 1374.63 2076.23 998.144 2051.41 955.324 cv
2026.59 912.505 1887.01 901.592 1842.83 902.943 cv
1798.65 904.294 1698.53 993.563 1694.06 1023.01 cv
1688.57 1059.13 1766.43 1045.52 1818.44 1018.82 cv
1866.22 994.293 1925.83 1020.98 1947.18 1024.17 cv
1961.51 1026.31 2000.13 1082.75 2008.67 1124.8 cv
2025.04 1205.36 1927.4 1267.91 1927.4 1267.91 cv
2135.26 1374.63 li
cp
.992157 .729412 .627451 rgb
f
2180.99 1154.82 mo
2180.99 1154.82 2098.28 912.834 2041.48 876.189 cv
1984.69 839.544 1917.15 809.347 1872.5 826.017 cv
1827.85 842.688 1741.48 900.39 1741.3 914.21 cv
1741.12 928.031 1806.63 939.526 1853.33 928.834 cv
1900.02 918.143 2010.49 988.253 2010.49 988.253 cv
2118.44 1152.08 li
2180.99 1154.82 li
cp
f
2411.76 1454.59 mo
2411.76 1454.59 2302.08 1362.85 2261.07 1261.85 cv
2204.06 1121.46 2157.65 953.537 2142.86 933.134 cv
2117.41 898.055 2028.3 822.833 2001.94 815.926 cv
1975.59 809.019 1890.94 781.056 1872.28 785.213 cv
1853.63 789.37 1896.83 858.422 1957.16 903.557 cv
2017.49 948.692 2078.79 1020.22 2078.79 1020.22 cv
2133.59 1364.1 li
2411.76 1454.59 li
cp
f
2139.77 1711.04 mo
2151.34 1725.4 2166.33 1743.11 2183.78 1763.39 cv
2184.54 1764.29 2185.33 1765.16 2186.11 1766.07 cv
2195.5 1776.85 2221.16 1805.99 2252.89 1841.92 cv
2269.91 1861.21 2288.69 1882.47 2307.62 1903.92 cv
2706.56 1584.26 li
2634.56 1533.73 2564.6 1484.58 2537.53 1465.86 cv
2463.95 1414.93 2402.5 1371.59 2394.35 1363.21 cv
2379.42 1347.94 2369.01 1351.74 2356.36 1370.49 cv
2352.54 1376.13 2348.5 1383.17 2344.09 1391.46 cv
2344.07 1391.47 li
2342.63 1394.16 2341.18 1396.98 2339.66 1399.92 cv
2339.56 1400.1 2339.47 1400.27 2339.37 1400.45 cv
2339.37 1400.45 li
2338.94 1401.3 2338.51 1402.15 2338.07 1403 cv
2337.71 1403.66 2337.38 1404.36 2337.02 1405.04 cv
2332.14 1414.59 2327.11 1423.8 2321.93 1432.73 cv
2320.7 1434.83 2319.48 1436.91 2318.25 1438.98 cv
2310.21 1452.47 2301.89 1465.26 2293.39 1477.38 cv
2293.37 1477.4 li
2291.73 1479.73 2290.09 1482.04 2288.45 1484.31 cv
2283.64 1490.99 2278.79 1497.45 2273.89 1503.71 cv
2272.4 1505.65 2270.89 1507.54 2269.4 1509.43 cv
2259.78 1521.53 2250.07 1532.86 2240.46 1543.45 cv
2238.48 1545.66 2236.5 1547.82 2234.52 1549.96 cv
2233.58 1550.96 2232.65 1551.97 2231.7 1552.97 cv
2230.81 1553.91 2229.93 1554.85 2229.07 1555.76 cv
2213.05 1572.71 2197.54 1587.61 2183.38 1600.7 cv
2182.32 1601.66 2181.29 1602.62 2180.25 1603.56 cv
2180.24 1603.58 li
2179.62 1604.13 2179.01 1604.7 2178.41 1605.25 cv
2176.15 1607.31 2173.92 1609.34 2171.75 1611.31 cv
2171.74 1611.31 li
2168.09 1614.62 2164.57 1617.78 2161.17 1620.82 cv
2161.16 1620.83 li
2152.98 1628.15 2145.61 1634.69 2139.23 1640.59 cv
2136.53 1643.1 2134.01 1645.45 2131.7 1647.7 cv
2131.48 1647.92 2131.26 1648.14 2131.05 1648.35 cv
2129.46 1649.9 2127.98 1651.4 2126.59 1652.84 cv
2118.14 1661.64 2113.59 1668.37 2114.32 1673.37 cv
2114.93 1677.5 2120.54 1686.24 2130.11 1698.76 cv
2130.12 1698.77 li
2132.99 1702.53 2136.22 1706.62 2139.77 1711.04 cv
cp
1 .552941 .403922 rgb
f
2341.64 1390.85 mo
2391.76 1402.98 2413.18 1453.52 2444.73 1488.68 cv
2453.65 1498.62 2463.88 1507.66 2475.8 1513.84 cv
2486.76 1519.51 2498.63 1523.12 2509.95 1527.97 cv
2521.58 1532.97 2531.86 1539.5 2541.03 1548.26 cv
2550.98 1557.77 2559.35 1568.73 2568.75 1578.76 cv
2588.19 1599.49 2613.74 1614.11 2641.51 1620.25 cv
2647.79 1621.64 2646.74 1631.68 2640.41 1630.28 cv
2616.24 1624.93 2593.46 1614.12 2574.53 1598.09 cv
2554.55 1581.18 2541.02 1556.74 2518.2 1543.25 cv
2507.22 1536.76 2494.85 1533.06 2483.13 1528.23 cv
2471.53 1523.46 2460.76 1517.34 2451.23 1509.15 cv
2431.45 1492.14 2417.67 1469.92 2402.07 1449.32 cv
2386.32 1428.51 2366.9 1407.25 2340.54 1400.87 cv
2334.3 1399.37 2335.34 1389.33 2341.64 1390.85 cv
2341.64 1390.85 li
cp
1 .6 .498039 rgb
f
2292.16 1487.4 mo
2305.59 1490.44 2318.56 1495.73 2330.25 1503.02 cv
2342.5 1510.64 2352.49 1520.41 2362.26 1530.92 cv
2370.77 1540.06 2379.51 1548.96 2390.33 1555.34 cv
2400.2 1561.14 2410.85 1565.24 2421.39 1569.59 cv
2432.2 1574.03 2442.89 1578.84 2451.99 1586.32 cv
2461.3 1593.95 2468.64 1603.68 2476.08 1613.05 cv
2477.18 1614.43 li
2484.78 1623.91 2492.8 1633.39 2502.83 1640.4 cv
2511.58 1646.52 2521.61 1650.26 2531.75 1653.35 cv
2550.13 1658.92 2572.18 1662.52 2583.06 1680.19 cv
2583.55 1680.98 2584.13 1681.52 2584.76 1681.86 cv
2591.74 1676.27 li
2591.68 1675.49 2591.42 1674.67 2590.93 1673.88 cv
2578.33 1653.42 2552.93 1649.6 2531.87 1642.84 cv
2520.8 1639.29 2510.65 1634.61 2501.9 1626.79 cv
2495.66 1621.23 2490.3 1614.79 2485.11 1608.24 cv
2482.28 1604.71 2479.51 1601.13 2476.66 1597.65 cv
2468.82 1588.07 2460.29 1578.89 2449.72 1572.27 cv
2439.59 1565.9 2428.39 1561.57 2417.36 1557.05 cv
2406.19 1552.46 2395.15 1547.56 2385.72 1539.87 cv
2375.27 1531.33 2366.95 1520.52 2357.2 1511.24 cv
2339.39 1494.27 2317.31 1482.85 2293.38 1477.39 cv
2293.37 1477.4 li
2293.34 1477.38 2293.31 1477.37 2293.26 1477.36 cv
2288.84 1476.35 2287 1480.96 2288.44 1484.31 cv
2289.05 1485.75 2290.27 1486.97 2292.16 1487.4 cv
cp
f
2241.62 1547.02 mo
2240.54 1567.29 2254.72 1584.51 2269.19 1597.04 cv
2287.12 1612.58 2306.69 1625.48 2319.4 1646.06 cv
2330.63 1664.26 2338.32 1687.16 2357 1699.33 cv
2366.07 1705.24 2376.65 1708.07 2384.68 1715.63 cv
2392.79 1723.27 2397.6 1734.05 2406.64 1740.73 cv
2422.87 1752.71 2446.32 1753.27 2456.36 1773.02 cv
2459.3 1778.8 2450.03 1782.79 2447.1 1777.01 cv
2442.87 1768.7 2434.18 1764.68 2425.97 1761.25 cv
2417.36 1757.66 2408.31 1754.5 2400.73 1748.9 cv
2391.68 1742.23 2386.68 1732.12 2379.04 1724.15 cv
2371.18 1715.94 2359.58 1713.27 2350.36 1707.03 cv
2331.19 1694.08 2323.12 1671.33 2311.53 1652.37 cv
2298.68 1631.35 2278.29 1618.88 2260.43 1602.7 cv
2244.21 1588.02 2230.38 1568.76 2231.6 1545.91 cv
2231.95 1539.42 2241.97 1540.55 2241.62 1547.02 cv
2241.62 1547.02 li
cp
f
2180.88 1605.49 mo
2183.66 1625.41 2202.94 1637.1 2216.48 1649.75 cv
2223.8 1656.59 2230.31 1663.98 2234.77 1673.02 cv
2239.08 1681.76 2241.44 1691.28 2244.25 1700.56 cv
2247.17 1710.23 2250.54 1720.13 2257.38 1727.79 cv
2264.48 1735.74 2274.51 1740.41 2283.4 1745.99 cv
2300.65 1756.79 2312.08 1772.94 2323.17 1789.6 cv
2335.03 1807.4 2347.47 1826.99 2369.1 1833.46 cv
2367.51 1836.39 2365.92 1839.33 2364.34 1842.26 cv
2356.37 1837.54 2348.4 1832.83 2340.43 1828.12 cv
2334.84 1824.81 2340.8 1816.67 2346.35 1819.95 cv
2354.31 1824.66 2362.28 1829.37 2370.25 1834.08 cv
2375.45 1837.16 2370.62 1844.42 2365.49 1842.88 cv
2324.49 1830.62 2315.55 1781.34 2283.34 1758.05 cv
2274.11 1751.38 2263.46 1746.8 2254.83 1739.29 cv
2246.89 1732.37 2241.63 1723.56 2238 1713.74 cv
2234.44 1704.1 2232.28 1694.01 2228.67 1684.39 cv
2224.99 1674.6 2219.39 1666.52 2211.92 1659.23 cv
2196.03 1643.71 2174.24 1630.9 2170.9 1606.96 cv
2170.01 1600.54 2179.98 1599.04 2180.88 1605.49 cv
2180.88 1605.49 li
cp
f
2140.98 1644.77 mo
2140.46 1653.31 2146.48 1659.68 2152.61 1664.8 cv
2159.55 1670.59 2167.28 1675.37 2173.9 1681.54 cv
2187.71 1694.39 2195.96 1711.54 2203.59 1728.5 cv
2211.21 1745.43 2218.52 1763.31 2231.84 1776.69 cv
2239.16 1784.03 2248.38 1788.93 2256.91 1794.65 cv
2265.07 1800.13 2272.07 1806.66 2277.91 1814.57 cv
2290.21 1831.24 2298.57 1854.7 2318.95 1863.25 cv
2324.94 1865.76 2321.33 1875.18 2315.34 1872.67 cv
2296.3 1864.68 2286.76 1846.48 2276.2 1829.94 cv
2270.62 1821.21 2264.55 1812.85 2256.24 1806.54 cv
2247.48 1799.89 2237.48 1795.01 2229.12 1787.81 cv
2213.93 1774.74 2205.14 1756.54 2197.07 1738.59 cv
2189.03 1720.73 2181.24 1701.31 2166.19 1688.06 cv
2152.12 1675.68 2129.63 1665.65 2130.96 1643.66 cv
2131.35 1637.17 2141.38 1638.3 2140.98 1644.77 cv
2140.98 1644.77 li
cp
f
2350.33 1559.82 mo
2352.91 1559.81 2355.59 1560.46 2357.86 1561.67 cv
2359.11 1562.33 2360.11 1563.03 2360.69 1564.38 cv
2361.17 1565.5 2361.26 1567.05 2360.77 1568.18 cv
2359.79 1570.44 2356.74 1572.41 2354.25 1571.09 cv
2353.82 1570.86 2353.38 1570.64 2352.92 1570.46 cv
2352.67 1570.36 2352.41 1570.26 2352.16 1570.18 cv
2351.99 1570.12 2351.06 1569.89 2351.84 1570.06 cv
2352.57 1570.22 2351.82 1570.07 2351.67 1570.04 cv
2351.4 1569.99 2351.13 1569.95 2350.86 1569.92 cv
2350.32 1569.86 2349.77 1569.84 2349.23 1569.85 cv
2348.02 1569.85 2346.56 1568.88 2345.85 1567.99 cv
2345.07 1567.02 2344.58 1565.53 2344.77 1564.28 cv
2344.97 1562.99 2345.54 1561.69 2346.63 1560.9 cv
2347.78 1560.06 2348.92 1559.83 2350.33 1559.82 cv
2350.33 1559.82 li
cp
f
2378.74 1636.95 mo
2379.64 1637.52 2380.53 1638.09 2381.43 1638.66 cv
2382.49 1639.34 2383.28 1640.79 2383.46 1642.01 cv
2383.64 1643.21 2383.33 1644.74 2382.56 1645.71 cv
2380.77 1647.95 2377.9 1648.36 2375.52 1646.84 cv
2374.62 1646.27 2373.72 1645.7 2372.83 1645.12 cv
2371.76 1644.45 2370.97 1642.99 2370.79 1641.77 cv
2370.62 1640.58 2370.93 1639.05 2371.7 1638.08 cv
2373.48 1635.84 2376.35 1635.43 2378.74 1636.95 cv
2378.74 1636.95 li
cp
f
2394.45 1485.19 mo
2395.08 1485.98 2395.71 1486.77 2396.34 1487.56 cv
2397.15 1488.56 2397.56 1489.98 2397.42 1491.26 cv
2397.28 1492.49 2396.57 1493.9 2395.56 1494.64 cv
2393.35 1496.26 2390.24 1496.07 2388.47 1493.86 cv
2387.84 1493.07 2387.21 1492.29 2386.58 1491.5 cv
2385.77 1490.49 2385.36 1489.08 2385.5 1487.79 cv
2385.64 1486.56 2386.35 1485.15 2387.36 1484.41 cv
2389.57 1482.8 2392.68 1482.99 2394.45 1485.19 cv
2394.45 1485.19 li
cp
f
2479.93 1489.61 mo
2483.21 1490.95 2485.71 1493.36 2487.23 1496.54 cv
2488.37 1498.92 2487.07 1502.23 2484.59 1503.17 cv
2481.96 1504.17 2479.19 1503.08 2477.97 1500.53 cv
2477.47 1499.5 2478.55 1501.14 2477.88 1500.33 cv
2477.77 1500.2 2476.76 1499.11 2477.33 1499.61 cv
2477.91 1500.13 2476.85 1499.32 2476.74 1499.22 cv
2476.43 1499.02 2476.53 1499.06 2477.04 1499.34 cv
2476.8 1499.22 2476.56 1499.12 2476.32 1499.03 cv
2473.88 1498.03 2472.32 1495.05 2473.42 1492.51 cv
2474.48 1490.05 2477.32 1488.54 2479.93 1489.61 cv
2479.93 1489.61 li
cp
f
2488.5 1551.14 mo
2489.14 1552.43 2487.92 1550.51 2488.78 1551.66 cv
2489.08 1552.05 2489.38 1552.43 2489.72 1552.78 cv
2489.11 1552.14 2490 1552.98 2490.2 1553.13 cv
2490.37 1553.25 2491.55 1553.88 2490.74 1553.49 cv
2493.1 1554.64 2494.79 1557.35 2493.64 1560 cv
2492.63 1562.32 2489.65 1564.14 2487.12 1562.9 cv
2483.6 1561.18 2480.97 1558.67 2479.24 1555.12 cv
2478.08 1552.75 2479.41 1549.43 2481.88 1548.5 cv
2484.53 1547.49 2487.27 1548.59 2488.5 1551.14 cv
2488.5 1551.14 li
cp
f
2588.37 1541.74 mo
2590.05 1543.84 2591.73 1545.94 2593.41 1548.04 cv
2595.06 1550.1 2594.83 1553.52 2592.63 1555.13 cv
2590.42 1556.74 2587.31 1556.55 2585.54 1554.34 cv
2583.86 1552.25 2582.18 1550.15 2580.5 1548.05 cv
2578.85 1545.99 2579.08 1542.57 2581.28 1540.96 cv
2583.49 1539.35 2586.6 1539.54 2588.37 1541.74 cv
2588.37 1541.74 li
cp
f
2548.25 1606.19 mo
2548.46 1606.45 2548.67 1606.71 2548.89 1606.97 cv
2549.69 1607.98 2550.1 1609.4 2549.96 1610.68 cv
2549.83 1611.91 2549.12 1613.32 2548.1 1614.06 cv
2547.05 1614.83 2545.73 1615.34 2544.4 1615.14 cv
2543.07 1614.94 2541.87 1614.35 2541.02 1613.28 cv
2540.81 1613.02 2540.59 1612.76 2540.38 1612.49 cv
2539.58 1611.48 2539.17 1610.07 2539.31 1608.79 cv
2539.44 1607.56 2540.15 1606.15 2541.17 1605.41 cv
2542.22 1604.64 2543.54 1604.12 2544.87 1604.33 cv
2546.2 1604.53 2547.4 1605.12 2548.25 1606.19 cv
2548.25 1606.19 li
cp
f
2492.87 1678.99 mo
2493.08 1679.25 2493.29 1679.52 2493.5 1679.78 cv
2494.31 1680.79 2494.72 1682.2 2494.58 1683.49 cv
2494.45 1684.71 2493.74 1686.13 2492.72 1686.87 cv
2491.67 1687.64 2490.34 1688.15 2489.02 1687.94 cv
2487.69 1687.74 2486.49 1687.15 2485.63 1686.09 cv
2485.42 1685.82 2485.21 1685.56 2485 1685.3 cv
2484.19 1684.29 2483.78 1682.88 2483.93 1681.59 cv
2484.06 1680.36 2484.77 1678.95 2485.79 1678.21 cv
2486.84 1677.44 2488.16 1676.93 2489.49 1677.13 cv
2490.81 1677.34 2492.02 1677.93 2492.87 1678.99 cv
2492.87 1678.99 li
cp
f
2458.56 1634.6 mo
2459.13 1635.86 2459.7 1637.12 2460.27 1638.39 cv
2461.36 1640.79 2460.15 1644.06 2457.63 1645.01 cv
2455.04 1646 2452.17 1644.95 2451.01 1642.37 cv
2450.44 1641.11 2449.87 1639.85 2449.3 1638.59 cv
2448.21 1636.18 2449.42 1632.91 2451.93 1631.96 cv
2454.53 1630.98 2457.4 1632.02 2458.56 1634.6 cv
2458.56 1634.6 li
cp
f
2433.06 1679.73 mo
2433.07 1679.78 2433.14 1680.71 2433.21 1680.71 cv
2432.99 1679.99 2432.98 1679.88 2433.16 1680.4 cv
2433.23 1680.55 2433.3 1680.7 2433.38 1680.85 cv
2433.56 1681.2 2433.47 1681.05 2433.1 1680.4 cv
2433.2 1680.53 2433.3 1680.67 2433.41 1680.79 cv
2434.24 1681.8 2432.7 1680.26 2433.51 1680.88 cv
2435.59 1682.5 2436.37 1685.74 2434.64 1687.93 cv
2432.98 1690.01 2429.83 1690.78 2427.6 1689.06 cv
2425.13 1687.14 2423.38 1684.35 2423.08 1681.2 cv
2422.83 1678.58 2424.53 1675.77 2427.34 1675.48 cv
2429.94 1675.21 2432.79 1676.92 2433.06 1679.73 cv
2433.06 1679.73 li
cp
f
2306.12 1726.54 mo
2301.06 1730.6 2294.75 1722.74 2299.82 1718.67 cv
2304.88 1714.61 2311.2 1722.48 2306.12 1726.54 cv
2306.12 1726.54 li
cp
f
2355.92 1762.88 mo
2357.81 1765.24 2359.7 1767.61 2361.59 1769.97 cv
2363.3 1772.09 2362.94 1775.35 2360.81 1777.05 cv
2358.68 1778.76 2355.43 1778.41 2353.72 1776.27 cv
2351.83 1773.91 2349.94 1771.55 2348.05 1769.19 cv
2346.35 1767.06 2346.7 1763.81 2348.83 1762.1 cv
2350.97 1760.39 2354.21 1760.75 2355.92 1762.88 cv
2355.92 1762.88 li
cp
f
2283.48 1678.24 mo
2283.63 1678.97 2283.78 1679.71 2283.94 1680.45 cv
2284.18 1681.64 2283.73 1683.17 2283.03 1684.14 cv
2282.3 1685.15 2280.95 1686.04 2279.68 1686.17 cv
2278.41 1686.3 2277.02 1686.09 2275.99 1685.27 cv
2274.89 1684.4 2274.24 1683.3 2273.96 1681.92 cv
2273.81 1681.18 2273.65 1680.45 2273.5 1679.71 cv
2273.25 1678.51 2273.7 1676.99 2274.4 1676.02 cv
2275.14 1675 2276.49 1674.12 2277.75 1673.99 cv
2279.03 1673.85 2280.41 1674.07 2281.45 1674.89 cv
2282.54 1675.76 2283.19 1676.86 2283.48 1678.24 cv
2283.48 1678.24 li
cp
f
2245.25 1615.08 mo
2240.18 1619.14 2233.87 1611.28 2238.94 1607.21 cv
2244 1603.16 2250.32 1611.02 2245.25 1615.08 cv
2245.25 1615.08 li
cp
f
2227.77 1617.46 mo
2228.61 1618.51 2229.45 1619.56 2230.29 1620.61 cv
2231.94 1622.67 2231.71 1626.09 2229.51 1627.69 cv
2227.3 1629.31 2224.19 1629.12 2222.42 1626.91 cv
2221.58 1625.86 2220.74 1624.81 2219.9 1623.77 cv
2218.25 1621.71 2218.48 1618.28 2220.68 1616.68 cv
2222.89 1615.06 2226 1615.25 2227.77 1617.46 cv
2227.77 1617.46 li
cp
f
2272.1 1632.76 mo
2272.89 1634.28 2273.68 1635.8 2274.47 1637.32 cv
2275.68 1639.67 2274.25 1643.03 2271.83 1643.95 cv
2269.12 1644.98 2266.5 1643.83 2265.2 1641.31 cv
2264.41 1639.79 2263.62 1638.27 2262.83 1636.75 cv
2261.62 1634.4 2263.05 1631.04 2265.47 1630.12 cv
2268.18 1629.09 2270.8 1630.25 2272.1 1632.76 cv
2272.1 1632.76 li
cp
f
2336.27 1609.34 mo
2331.21 1613.4 2324.89 1605.54 2329.97 1601.47 cv
2335.03 1597.42 2341.34 1605.28 2336.27 1609.34 cv
2336.27 1609.34 li
cp
f
2316.02 1557.76 mo
2316.18 1558.49 2316.34 1559.23 2316.5 1559.96 cv
2316.75 1561.15 2316.29 1562.69 2315.59 1563.65 cv
2314.86 1564.67 2313.51 1565.56 2312.24 1565.69 cv
2310.97 1565.82 2309.58 1565.6 2308.55 1564.78 cv
2307.45 1563.91 2306.82 1562.81 2306.52 1561.43 cv
2306.36 1560.7 2306.2 1559.96 2306.04 1559.23 cv
2305.79 1558.04 2306.25 1556.5 2306.95 1555.54 cv
2307.68 1554.52 2309.03 1553.63 2310.3 1553.5 cv
2311.57 1553.37 2312.96 1553.59 2313.99 1554.41 cv
2315.09 1555.28 2315.73 1556.38 2316.02 1557.76 cv
2316.02 1557.76 li
cp
f
2218.9 1700 mo
2219.28 1700.99 2219.66 1701.98 2220.03 1702.98 cv
2220.5 1704.2 2220.58 1705.54 2220.11 1706.78 cv
2219.66 1707.95 2218.59 1709.15 2217.4 1709.6 cv
2216.2 1710.06 2214.8 1710.2 2213.59 1709.68 cv
2212.38 1709.15 2211.25 1708.24 2210.77 1706.97 cv
2210.39 1705.97 2210.01 1704.98 2209.64 1703.98 cv
2209.18 1702.76 2209.09 1701.42 2209.56 1700.18 cv
2210.01 1699.01 2211.09 1697.81 2212.28 1697.36 cv
2213.48 1696.9 2214.87 1696.76 2216.08 1697.28 cv
2217.29 1697.81 2218.42 1698.72 2218.9 1700 cv
2218.9 1700 li
cp
f
2248.5 1748.16 mo
2248.92 1748.69 2249.34 1749.21 2249.76 1749.74 cv
2250.57 1750.75 2250.98 1752.16 2250.84 1753.44 cv
2250.7 1754.67 2249.99 1756.08 2248.98 1756.82 cv
2247.92 1757.59 2246.6 1758.11 2245.27 1757.9 cv
2243.95 1757.7 2242.74 1757.11 2241.89 1756.04 cv
2241.47 1755.52 2241.05 1754.99 2240.63 1754.47 cv
2239.82 1753.46 2239.41 1752.05 2239.55 1750.76 cv
2239.69 1749.53 2240.39 1748.12 2241.41 1747.38 cv
2242.46 1746.61 2243.79 1746.1 2245.12 1746.3 cv
2246.44 1746.51 2247.64 1747.1 2248.5 1748.16 cv
2248.5 1748.16 li
cp
f
2292.48 1798.21 mo
2292.9 1798.74 2293.32 1799.26 2293.74 1799.79 cv
2294.55 1800.79 2294.96 1802.21 2294.81 1803.49 cv
2294.68 1804.72 2293.97 1806.13 2292.96 1806.87 cv
2291.9 1807.64 2290.58 1808.15 2289.25 1807.95 cv
2287.93 1807.75 2286.72 1807.16 2285.87 1806.09 cv
2285.45 1805.57 2285.03 1805.04 2284.61 1804.52 cv
2283.8 1803.51 2283.39 1802.1 2283.53 1800.81 cv
2283.67 1799.58 2284.37 1798.17 2285.39 1797.43 cv
2286.44 1796.66 2287.77 1796.15 2289.09 1796.35 cv
2290.42 1796.56 2291.62 1797.15 2292.48 1798.21 cv
2292.48 1798.21 li
cp
f
2308.71 1060.11 mo
1590.86 1041.05 li
1590.02 1110.51 li
2303.6 1191.81 li
2308.71 1060.11 li
cp
1 .552941 .403922 rgb
f
1526.73 1061.81 mo
1590.86 1041.05 li
1587.34 1109.75 li
1525.21 1073.3 li
1520.68 1070.36 1521.59 1063.48 1526.73 1061.81 cv
cp
.219608 .286275 .333333 rgb
f
2305.53 1191.99 mo
2289.68 1191.82 2277.14 1162.13 2277.52 1125.67 cv
2277.91 1089.22 2291.07 1059.8 2306.92 1059.96 cv
2322.77 1060.13 2335.31 1089.82 2334.93 1126.28 cv
2334.55 1162.73 2321.39 1192.15 2305.53 1191.99 cv
cp
1 .631373 .533333 rgb
f
1590.02 1110.51 mo
1582.78 1110.44 1577.08 1094.84 1577.28 1075.68 cv
1577.48 1056.52 1583.51 1041.04 1590.75 1041.12 cv
1597.99 1041.2 1603.7 1056.79 1603.5 1075.95 cv
1603.29 1095.12 1597.26 1110.59 1590.02 1110.51 cv
cp
1 .552941 .403922 rgb
f
1785.13 931.718 mo
1828.14 901.372 1885.61 910.522 1934.97 903.111 cv
1946.6 901.365 1958.25 899.911 1969.89 902.366 cv
1979.84 904.463 1989.13 909.133 1997.41 914.938 cv
2014 926.558 2027.09 942.39 2039.64 958.09 cv
2042.98 962.273 2049.57 957.16 2046.21 952.954 cv
2032.83 936.214 2018.69 919.175 2000.74 907.116 cv
1981.8 894.397 1961.67 890.963 1939.22 894.064 cv
1911.69 897.865 1884.27 898.594 1856.63 900.969 cv
1829.56 903.294 1802.53 909.251 1780 925.149 cv
1775.62 928.24 1780.75 934.81 1785.13 931.718 cv
1785.13 931.718 li
cp
.937255 .623529 .541176 rgb
f
1882.77 826.532 mo
1903.17 829.188 1923.54 832.075 1943.88 835.231 cv
1963.69 838.306 1984.29 840.611 2003.03 848.127 cv
2036.57 861.581 2058.57 892.243 2078.84 920.641 cv
2081.95 925.006 2088.52 919.873 2085.41 915.505 cv
2064.75 886.566 2042.28 855.89 2008.57 841.402 cv
1990.25 833.525 1970.08 830.913 1950.54 827.835 cv
1928.37 824.343 1906.14 821.167 1883.89 818.27 cv
1878.56 817.576 1877.45 825.839 1882.77 826.532 cv
1882.77 826.532 li
cp
f
2003.66 1274.46 mo
1975.46 1274.26 1947.5 1270.69 1920.15 1263.8 cv
1914.95 1262.49 1913.89 1270.77 1919.04 1272.06 cv
1946.39 1278.96 1974.34 1282.52 2002.55 1282.72 cv
2007.85 1282.76 2009.02 1274.5 2003.66 1274.46 cv
2003.66 1274.46 li
cp
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 25.4.1
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (NAP2376.eps)
%%CreationDate: 4/14/2022 11:30 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj9RffC8\5^978B_%f?lqgod!U8TKM0,Pfs,S1C24ZsmYhu93G#nR['^hMN]T"DV.;K]"b^/Rs4?B1JF7S.MtU?:>VMP^G+
%:"'f3J'icEDg?V85LWeSoSK'V:0hYB1R;1n>-40+QrY_*`I=cql:A%m':$/[%)`!771HY,K/&LQOAG.rQ8G_Tg8;e29cCQ))1::m
%;#gS\PBJCIW^B]cCU[^i!1V2Z[MO'^M+bbd]XMNW7;oRc[B5pXHQREjUdQ/D<bn`/!rs+2)#2Db&#m'><]`e*Ss/I6JraajKcp<C
%8J><3A<[?51#tRQq9T&[aM!>rIfTcRhs^:0'7OOBNoKGO17:,I_:fntRc4KqbW5in(DF$/1g))%0W3HjL>(2aZP\7jK*'7mPCEhP
%FpA!hm*;uT"DJnuZSEO8@7#[6K+^f\,Y%$@mrM_1Tkck[e@qfG1s9<B`+irXIt2f44A\kE#A5&EZd'M9)sAZ42T=h"O]g*@R(NqP
%BrH^*/p,4m:61o[<O=Z?V.k%5+X'JGc#VU=Vq#,mMBCkPEmiGU3V.hR2'<2l:fIRSi`S"WE.BJ[j;<U6H&CR+Kp!1Ub<hVl(fk[^
%[Q=]q6u^t=,ii,5`:Lpq.s`Ec.mQEi&KT!LZh..&E.OI`r>.aK.(fI,h*93-JI_(Uf'&jFYkcq69*OP;;&6')1eKL/N\"o'f-goS
%"8'Ga/'cWC(\.u"FIE[lU`k5(_>q9#JH,K'Z2IAAB8d<_gp>4"1Y!nCJ,R\4.@C@!]$Q=OdfLk_W0>(3I.:(j4-!n@30Cr8Gk`L=
%p)ejogB8,BiOQb`F38sI9?mX:5ENqS!ji>Y+%ZOd^%m8[hXnLd31u\9;>*p*9>5TLIF!/B"(7;g!:Dh8[F^&sP3Do!"9oIs*@0QM
%Ob;!L8)bs:<hf+O1X%2kDhEJa!\tls9u'm2d7&[3SH-a#*F+Z^2&2"8eY!O$*=+c>[TE?:J#_mF26@Zun!_R!)lhF-4:,^<?nfZ]
%`&Y]s&jAm]CuN5a3/@iE:\kig:9Y;3IJ'0ha&Kt'/!enjl:!1;F]qcpB:?j$b@ar/$G3A">WTebqBOZ,&:J"n.,l%omc,tjLmi\(
%A@]5(f+A0%=3GmlCcI^Ik\\RFB?"8,(HUG"U0pn?>Z-'2ADPPb--jLBakQugI=p%OG,MHRPF;#*'WS$6"@^lNUb]Fc6UqDN9.tZ\
%W_XNmrDZq>Edau7G$.3,l156d^oQ,rH7)M&*@ea"do@U4In6[$2ctF'"Q18ZZ"R[+7'_Q0@(I!019'?He5q#:+kD*-&9A$fN#bDA
%3R1u>HcEjhniJJQQ3TcmPZh"IKs&+eSU\9;-1"BZCU[r&(]Ag5$`9W,l8I=cV7=W:<l"H^Y-.a;P1iR;6$3K)\Uq5lMdX0bJ>)gZ
%++`.B5Nhf&i\-+#YhFENd'CDiD=*=ea:A6K<.fi^(kYp;($i6\Af]F,(EgHG,F-CNTOg/+8[3[BDirAP%*d3-Fm"IgN/GSVpdY53
%)rT+kn*sDE);A4ul6YA:[]S,Mh/C3&9#s@*mLHK(JN&4"L:/190D<0l[P>DJk^B<pnEoKhI11rGq&J"EQj9VAY;[M>;Vo1S7KX\9
%5g!N'J-h%u3hQWoiNeNua?j[;ddMp?rD8K67XD>h7]OiWI+nSMZlaUpRU2u%`rKhPFh?Bt`3RnOeJ,'q;6mP5klL0W;!X`BB4>EN
%SdHNg:Op:r3:[aEE@Qc(O?SXt,aFE-c)R4F-:CEY9a)UAoD=4,f2Q_a2$"%28_dTo]a6DC'?`ed4&`t4!8dQfW4]NUjrNc:s,s9t
%GM=.=0Hog8Xjo/'@s>PX4tTil:']dBU,F/mp89@4e-#M<>n>B#KW#U7QBnnbk73Sb3gr89n^GRa'4TPVe5(s=onPFGV0@Rh1enK9
%gXb,uEGk6YW3lmB/<*F1[fL_\C!a6B>:TEAKtkogc`nm6G-%FHB,@NoN<^BNM$Fq4)SM!T(oN96`Ij]]Og2iP0,eG$ZW,#]VLhG_
%fU(krbcEbJ(9)XU7:!ntgk]`WC3,uhbu;/kOim4c<,S;Mbu;1AR`^mI'nUGcf[O-_-^gI2r%u$rgn`MGT$,B"\ToedcfO<"ge?gM
%r3si1!pk-PjsK959P&9Bm>#:aX(ocSq(9&<VBBEubj)oZ^/H^Hj/2hio,ToU+f10:&B@J5%^ard\Fr9;^O_bMd-Lu3V,>%"g1ds:
%[1OE4TYEX-2Tt3Jep_1aJ"d9E.WhNOf\Ot$H1VfPg3:pDdWFKMdbeE5lR,)]Al[%E5iP@Jh"(G4(&oWG@:1:3B/,>*Q\.N'j)`67
%Hd#j:FK1i@UsCD:P@=SkgG)YXAi<h0[4r]DHO9?9psE#,0_'A9ChQa:YRgBT#Yo^*W7A/qC/N.ieS.V9!5L6FkZN\"Bh(O?@tG@*
%BR3QRqu,U`nn[VadJ.?(B`'Xm)U&oBp`o?U/S"(*G'[=l]Ce*(c@_^<$):XZH_ss,R.#'CP?j3J>6%$/B2j:q>kKJ5JFBqm3A$FQ
%$V"OPI&FtY"UP>'BcJIZChhu;4s.^os.)-.A)ml7@",")9h-@APN[X6l0W4kCJScFk0EL\/=7-.,L*69!.ihZSX?R\qdP.%S\BA?
%oj?h$r05P)R613n+(8&`IXfn,@D:>:T9s=2;+oC;R<4p.-;O>0XtTD(D9RL=d1)GW;43"B:AUGt9.fD!kt"Vee>KSI?:V:J`aK'&
%Db8!MAcIBsjcO77X*BWh<#iq[A-h)W[qFUAN-trk2=Z`:k/M1S]Nu2R8aEOcAA&'%iZ.</0NtgUF-a".nC]u/>F='2c]E0s_k4nD
%XsUKJl]V\//4:oY`,Y84?;N??U"9#C"n0HJIR/P./rVmInL$AimpW1CjiAuTlH.l,9H9UlPSL=brPYB'gO`5hED="f'W\6nL1XsR
%K3TTbSc,5u5X17cfq_iP?\.*-TO6u$id.Y>W'q0QF`jK<B@c0<RfC]sbGhQ3IF>gNRE9OtG!.Y>5Pm,5UL&=Y#!Pe</Eo*aLpRQT
%o:2;PgEs\\`nBfKHqijS^O;S.Q(')s2S!5?J4Z,q,I7qZ:].Q\s4ikcdm&XJkntbiXAA$K&HVN<;4:H)g?*LO'lt!-`d-EbmikKh
%p)=srVpS>#TB`UO;#r3)<ir?H$ldcq;(>B%*+bPNhf:d@oScA9a[pbVcmht7JI\JOUXCh8PB')D(-D37/&qcVL63G1VpTgG?[F_X
%?-pUpNG2c[#k?A7)L=bL-iLGE;)O7+3q91Wed(n_Ub%Li.jeh2WMJQ)SYsB/*j@;VB@MZBT99P`^[Z:.+].]5SOAV'-W+J"6(:uV
%rflumCnF*Ec;10nc?Elr5!-<Db_!!IO-;!Lpq;Fr?Q_9lMt1c@k%@OrQJjor7JS"5qE(39RG?cF`*&<rF-ZQ(PZO!9T1,0J\+rD:
%U(ld';._];q3GYjR/as)P_jPJ:FYH(!G>8ehru]7jFT5k-=LADbX+i`5E#)N]ftWFnG(h+kY82c;q:"`-8a.`<h71ia5c<PR#S_D
%ri;"QjMQK3rk_2U+")8JjCbN`p1=1#h,fn:>XtBZgMss^c0Fn)Au9^obRE/^EGjD-%D+MIRHJa1DV+#om6,VE@DRSA\2FlLrp+/j
%6UdAH[I7YVk/#b6=IWO&\Q/MZ<mA<$PQ-^14o]E[2CY'W)h>8s7abP$rXC`RPg"2+RQ37Jk^RA;`__0HBBqKnT0qg<HOJ.Imuj=m
%@F>g6p.EW-F9p1rm5s&eL13&DRUQEpS#5,i-@CPt2rOf1NK-C^'42t=^TD#l3g8H%@VKt+m,\9>gIaYhao&T1O_F!=P#g-Qj'TV!
%IP#;LC-+U*Zf$H/C"2#1J:IPM/?L8U__NB]o35>2j"2h25En2(gSJQIm/Ha*=5aj\1CMml]_q8;*TR1\&UC_>1g:MAS9-*+ZhZ0*
%Jn\oE$lFQ[DMl]U:X$jWofMW!`O\\8-WkrgFSjc+XkW30KBYc`ZX=1g't)c*@pL0D!l98u*\o/Sj7YJtL]dZ=E>Za;&)tD&:0F$G
%6I[@0#M%8We[j>'f[nH?j<n(an`cCtrJT8V3qE)"rFUNYpH./O38ab,n,Ij173mQ,*FP2iS-BYhHbQ7ORIBsspO).N^7W8U^?>B#
%ht*DRH"4SO4)2U8dsf$o45]WMJ]8+/FRqZQg"u<Pl/cqui\so^Or=$AgV)'EbUf-3l"hPUVfn^-!5)*;oh.(LoB1e*)1&.5L=(Pr
%hX*?=m"RfT)So!`l"bFC1'E$Sj4b]lh^4AD@`HV]X0":WA+X*Cr)19D[qA>qP4BP"EjcTt<\-s\CkCWs2Bd@r/*>t)h))M4VPTP9
%9hT>^h+.8c.s:H-aj)DZo1IiO;YQ_4Fmk3(k2eW*A6uF.Qg<KA2oq3N=/u;aohKkh46\rMOY3_2MjZOR3gp(TVcFXT62T[*S&G(I
%qYiEKWD$S->>;4*T$Nl*8mhkH7MEO1Zch1(k-m!p:67V5$,OR;9o(9sN*mak"Q"?-c0dYmPpU/$Q^<uOcLb`i.@Gb0Mc48n.kaX8
%L(n%XQ'ZdXjYPb;??qr??KRN>H0&UDH'q`?4rbKcGicnh-!1,AG2h["Ud9+b'r6*YaVD]g<^E/q<jPUnqJO&$T3jK2S"@$Y;>%1_
%\3J@LI(,FY9^*\Z9Gi>;0/o8*1==!JP"R,K^7\m=/t&)o&+`F@k0EL&cLF!P_DEQo57<KkRdpA.361h(9XE[tk;P*>S`>4A3IVt]
%^\\54BfY\Ym7T6]qbjl&QHYum=7;*2L+g8el-#mtG@+6)s&K%,a8D--Z8V_Cqq%^hB"?^Fg:0IB.nrCpAkA77I1'Y$.^*8,?p9Rf
%2`YJ50e:8Sf+51Hmk<8f';A:o*+4LPdXO+lQo\klGGFTP@END!BFIBa:WV1g2Q]n94]%bo3WV^;'V4KuS\HO;K&J*>a\TT,V'BX`
%Ue`5a0*-HUgR"f\?djic-ODKiFc:Sd@p[3#oAo8NN\R_Ir%;!4kB2_dYlbZG@U@*Bf.gl'r;W:OH!\OY6)MkL*<Xd7[Q=4MPZ^O4
%kP<eijCcG'9,=iJ;O/oBfN*uA;kNiO$MLAH+OpSi8cHrbWM/2pA@#[Lkhr8'eeHW"QF+$^Nn,UR-[?S]phAM1^+ZM6WLn_+rKu"R
%05ba$7]Km/gNpIkY"&?g+pS1kl,Js,)h@[ZiDHaf'flPT`p_+g-<H\BA_*d>e-VcS%)A[BZ"TWUE@L#Q=NiE_RU:O903ir_^G4qJ
%].rM4dE2='+?Q0c?PrD^^](kRKDs\Qh;gTD$m^#flTp9PR/b6C"q%18rN-QW9oR:)*;>nl,;XJtX.NPXa8OfhO",!@b+/9YYPEp)
%_h^4L`])ULBYRP7qpRG;kTKhPle%CBA=8dhhi6B,Qa-SH>]'m,Dk>457VA=;c*Os+2E/tErhXFKda2[!c-<T*GrB<\C,Yeq%uAWL
%8T,c>h/mO4bi\0F4Iqt>F7XKkT$GSW3[]<UF=t@VLP0PcT$1/#GA3MBMPX'a0P2JtRt?18o=9-1pRSKtR)L.1rk@9Rc[a9/1iJl@
%.l"e?ijT6Or*G5ZR5=HBq\K0(#&SfT``.sl:Z5<nZXg&4J^5l\8(iE?bC7i\W*lRCg*UAiR8()f[ss)YY>Md_^PqEAgDrglW^]Ru
%ITEl?><DkaW726#c5*rd1A4EN`#%2I1bVCLPCiGVmFua><'!ZAm@.Vg;gO/a%+qoN]S\FJ<2UGZ%)D`s<^3XKs/anhm1^BXGg-hM
%%(Tf.T>kftZX'\n<E>%3o[l&-n@(uaUR*^Ad;#^lhoY]19Q_37QhmMf4^6X&Pi#SM-c5^#DED=;8_$9.8$@-6ZmXLYokAfl8T-T:
%%-Ta[K!Yp>(Ma6&^\"lkbh(`s3-BqDhWo=I&`(q]\k,%\Qap%;4YMA8*kt:+7X$G@^RJh&RkfSDT_"96Nt(p!cLb`i0q"<*BH@l4
%K;*Wf1_5KC"fu;Z2O^8PSeo#Rh@aqf/cUgS^iqlh2l3hS9Gi=Pj+Z3sgQFaT"G6Gt3/frBn3J&hhjAZ?`W>iW%a=D&_fQTe2MjVr
%QJSdq[E7=J0mAY!kP-^)1^ebPRc45spr8/-o%Z0!`A^PN_[Q=[M.LDh)uh_.n`u:(^MNC>\+djp7s]UTaQgO_O+3L!DdKsD-O.HF
%n0Xdroks<gI*M$UF_UH*M1167h1Jj7YFJ&V'+K4mL$t5^#;I_UHtog-(+_F4dE[6:54r)+`0Bn`NiD5oqVo`E0Wh,%K_DmEM/W7F
%^@)dYc0r`@m5m'u^@TZ]"-^aeZZ&LUbSGpsaclNH'=4A+=LglBb'gI_O/J7(b^u]ch)*Ht#3,Q6h5o@`8UoAO9*Sg^G&A(3!]0@^
%k2ud<f.59L=gO:&optALZftT,fO3acc>o6)BU+)9gF:Xh`,qW:dNM7X\u@rnEA>.Ig&Sc=Q)S;l;*:=J]Ch_J/1=@Poq*#+]t'O/
%$Y%-Ra,O6oO$"hBY2(_9J$Tu/MP92aj>tcgL"*d-0e[s6jpF-B(,:c9ZijaVQf!5XFfK'K:J!):eK^C?+*M"CZlDXlF?\)#oj3A@
%g&u67+.J5uXH;46&ocR">"*A>TD\Asj!K$ugWqWE#Q?n101#\u,:0[h;,OCCW_u?%6`k#;F^gUYSUTlJANu0RL7q[b+5h7cRAR5T
%h/Ouea77"e-bpf94prS49AA?LpfEWOPJGmZ"O?fFT6\`MM!ZC)[u"#0ktSkm3"\>Ir!)3oJ_jSNXsRe)MU`<"2geTO+V0ZVO>pT4
%kV;BjHB)4'cT)'Ene=I?j:D71g?2dK?iDF>E[LnR,[d/GXHJ+b'!P+4Nf`_F'a\"j!Ahe5@%7*"4p1+A7r/F]OZ(';d[PUdE54M+
%ibcmVQMfWo)Z:`,5/S8WIMT3B=hK0p"^6<+0Rl"%2cOAW/a/`4VYqRcrtn_+BR3^_2[un@M5F&;YO4\%r9m7sQ8A:d-o%GIo+W2Z
%H&e5&p`RWbc#E.Qct4!n4tsW9ZfGJJOi76SWsF=ASo)(8L#3BudhB+e"S,AZeEoCnQ2ZAjB5#Irjq95,S:O1Od=6Gq0OAr9,9\"W
%&L+N<[s<jI'.&EnK$>E0r&jZ[i5%+'X";C;i[?R>^u5Meid"\li\iYf$!T\0>YKQM3\m_/[G..08>bm=Q$[Gq!(*`'Oa9&b$IQB[
%#AH<qi33/lMPDT]4kjQPJ_D>u8+CMqCF7bBH>e?VPNXjIrs<QR#l[J[g/(#5F5XdR_sFRQ_))_Qs)Yf[U"43>3-`Hf@]-@dg2XM0
%P[)LPF;n%3n`rGV!tDEKB>ij#@Dm3cX[$>UYIkWC/Ea^)-"h49KbCVq?81ogCOS/=JMl&e[TWal:3FYl@,tU-[.6F\X0qb8r4/>I
%2$*q`f`#ItB+VCh&R+WpC[gX+YluPKA)Si:^&=\9IuQ;pZgi3>n2=>VZWP]5]N"8#D!;"+T+o+nhS@_G^4!<^D'X[`^q4*.c.!;I
%"9!Ftn.2g<h,R6Jn_YQnPM3ZYVq!]kZYoGJb-HeO9H-WXphqQ]W23s^ND[s@/c;*$3dHK6QM";SkH#'ff*VKhi"*,l/OM2j60=E.
%Bq!a8do>B!U@l5ZI=FMj>jqQ]#e>dHHh4?47hfQUI(1UZlWp[orr?7$(P,A8>$r8#pu]mC5(M7ga`.A\&N.f>n0s`A#]nEt\U@rO
%Q+&[Y5(MK_d/ShH8)%]qRZP";s3#$FCQUEBD8!+P6g@keVdOd^G-]MJ9O]Yh>'9N*b<Xo"bHc#!Y6+T[5e;MA_=#''i$/N9<NDk%
%]1bo;VhjJ.d/S^S%8Jr7692;rCg(GidTS7$a#*)d"&Pm<M3HnseI,P0'oQWS'/a<XGeS\jER)._,la?cK`N^Nem<^,k%>6K"9%V7
%D4!h#J`@m*h]>#B)g!9HE:q]P'Q0SY4[aA(r_uOt/sqj^-Vs"7T0''H\#1*GpE9GCNpk5skP%u9^:&Z@HYnS)OVG]0]q%Fp$9Cm2
%BqX!iBGQj6f;H#*=4t6a,%MgADZ.q\SG%/r8sJtV>0pRQA9`kUUS^V`NCl^CBN2ufG+-\^;%P^\2b9WAX'IDZX$i*%$;h4Cob=*4
%O0IN(euDV\C9+I>:=N"/Be@ftoR=pT%bT_([<HgIoEA#uGuc!DQQ6)(B'2@4XK,PEJ%F*./\D8qi9;Pf"\)o7.8DqkAuGSC1#?/i
%$U8rfl!7GdC(7LO1L[;@AbHs#VQUKYX)/<=C1O*<.j-#`F1kRq"XKs'I]0C8#lLEOVNii2]hh3O:SF4l'*Pe@f/n`P6C/RJC00AL
%%;AmcTp%>r;-e%h\lBTP]=+S?l8"Bp]9]nTe:YZ=dqY?=@>J:p?1lZ;MMcN0Arh_Bkn#.Dq[b'blGhtm0TCMPNEPO<C)=[W@2;i&
%9P\g1<hE!:n8i2_#e93Z)&D>hO'a49K-iFU)>e.f=:?_0XAli$*fi4g]tS3eW#B>u#(!n.jD`!DVs[`6<XA7^pHE+>P"Km+UFTRc
%RY;Trdr>a#n@c^Qn7Vo2g1HHh,=G^C%U4]lG9MRn,>&0U2DkL,6e__1bbL7HrbhIIY1mth<4:7l@U;?+ip5BuP967D[.KKO7B5-!
%aD.KP;]mUUMi\*<M7>T)]9_.:6@KNJ%ZLHW2Y;_n[G$pLlZldmV)OEA5bak(DOX765;_DkJD9!,hPM6SWr^)JK\?md,.\B]!FrrP
%JM=.c$EmNt;De"mBK^5Ur=*qY!aHg5Q>H,TZ?]4,9Ic@Q^8*W0M'4S:&95q9=?RL=(n,2(GEeu9kr<hBd`0QlfJD&+)P%K^8Ol>m
%Y',aD;$V;lUc*;mT]ifOfqqpUmNh)Bp90iq(bV3q4!kcY`"MRR]4V*.*98*n5cKNe#6niXg&lM64Iu2i1^Fnhd"W]t?>ds$NVU9p
%[b#?&<TF$f^q@&I@W00mjpqi^g&+9-eRAu9BVRC&+,A=pePYJ"@*+6n)eJ<IU&R7oY.N;J=r],9mS9*pULa?DE)]21oRZe`X!>C7
%2'rPOC^(h\.%<[4oQ#&(M*4-FL3nt+JLd8,O]a4g;b>flqWf@jJu2BBWB6P\]:n*Y`W;"pSs\V(3199hJ_XlCnm.,&*ur@\eCuq%
%%El\7161DPcna,n-noT0JU-E$H]dq;P.WN.)ek_s)Dt!shAFf))G>Qn=I3[ea4;Z"&["'IM4Y_F:']Vm-G>MCnZjlI/E33I80auR
%r?5%?$;c'-Ih+I%iCqV%OUq.'0`5E4Z7&9Wb6Tb,7c3!"maBl=-e:5+Ok*/a0l0mGU"^eJC2ZagK]aC_%!Z<jXc:9OeTDjCgaW51
%#71']VH)&:,KN;j*1Q?3k9$lI]Eusd\C%K2D%u<PDP179s/HO]]eM[pG#`VRbRS.=I@HLJ/Qfe6aXid2Q7ESW7mR'c)/M=T!-tuY
%g$CN\-#BVm[=[4b[e6@O4+8&aZhXrS"K^1i*9UlC41&27)QkBFl<%r2K-d:,Q-GZ#kn(Y)fmk?EmE,sXZ1ugKX4BUbln*#1Ghrq)
%he?dI6mQhj]mgXsP.4TEhJ<?=+%0uTnmW;rR(8?tX^D!N#M00aHq/\<Jk+4a:M`,9lZO#_/@tC)<Wa3nV]sl+rF4O9e9,QH41`0Z
%_5&_5kS."^2-uB)QL!]]Y>McBQ%GAh)eq02I0Jhu=U5f8G$St!Mdk>0,irda*nAMn,rs&*-:QAjP$iTdC1HdL6;P9l2IAG$(Hl1U
%D8"cKMHFSgog:K:3`ocK`Ios/aY0Gq":2<M=RMK^1):,MkCuGY^p&F(8k-Vs8+]:6Y*_/mT(Nt4I!^f#3%%O/&Hu]2eT<F\I%C1f
%QLmnnl5lL-f[j9`f)S8IderF%#Ar'0I"&ed&$?RJe?#+i5As)78SdRUL0HuNOZWHe[VN)B<BY>?9$=:K']mr/J($Kdg'5\@reub/
%d.?I>F`+o%^4s6dT=S1R%+f[Nps(c<h?DJ:V[Me*:G>9J"++]p,Utj(CFr(l([+q"@&UFg:9ra'B^dWdZda9$8*`&&!68S'78e>S
%$VmsB$3`j(Eb"e/X]8jQRq#2@Bp93_)$fJi,NFt'GRTO3]7&nJG(SLLf<Z)r?oj\!&ln]q`@_&/^iaP4Merl%<^m8rT\Q_C#)Nf>
%7`0U*MM:gBV,Mk@[=,%LeuO6>NH`(N@56V^>*\#b=u2,MUU+l,WNAphop,btlUF*VPBeLRN"r#er>;pt4#2!<3&395CbI\m/*"Xj
%s'PkV%%O1lr:M+_rch`%^o=ca&(tbZN1#bVQDildhH>M1W&noIHU9Hga@cOl`6pJlk8S'#0Um+;oT?[Ze'<&?Z*j?"81Wqq\naBK
%SEU-tG0)p,>.H>;YGrnnH?!&+W)l?eW9sR%Yd)&>!qFmp>'CAK/,D/3ADT-PYD,e#P[sO`Xo,BXBb]GkY_DarGLfPb!J&m&O`!t;
%]c6],_f262MPOQAE?Op2ND,YZA>q^b/R^>*WK!(Io04GaG&9V,+L58dF7t(.#53L:rmR?hXQU['8H$ts4iZ?\h70\5UnYag;Z1V?
%0'BXf,>_.q%U-fVf0`;;]E@7/BBLj.YbfCM\'#_&Its-6)e=$6\_q.'EOoht@k$hO8M]ECiX_SK_0*L>%UtdiBcpf-l`GAOp+o.1
%IPPLPh4k!((H4INgCk:%nsU_G6[p?/[D8)4/^:[!RiLJO`shE"F15n1',%1^CC([J_bb?OnCLV+"1+)@AC@U4K,`=]Zj:PD7g:I`
%b`IRL$u\VM&<sFD4/b:q!0%fo>ed@.%kJV0=c?H=4`3hD5];LIpGQS"*E$8Fjo.r85)Po@TM.J9-[",[8T:rmOtdEZkMA]E&!/+t
%d(Y/tBpj*?S=cZY9D<MG0cooa#E$O&QuT7<=!KaH3;(=Q/3e9t*gmHnDZ4J)^\]9&m7>(kTtRhh_s;d'RBR4L/*]k[5;r/X'bu0?
%N9S4FT=qI'inL3uc>sLI4">mI:5_&B^I!><"$AftHi"R#UKl)M&V"r"j!F%$q'oER3c4Lua7=rJU9,B-N$VBm8sLN2d*)9djb3'G
%h:%Q"8;R[g40AM1XS8uRd.T>nGZuF_+86XY#p(niLJ0t*b^BID._e1;TGYCe?IgGYaYV!MMAOk74hSboC5oY(k'/;Np^k"Y>5+E+
%#F7T[q!bOu;I^;h+RKFbmp2-BX+IQRWhiS[W^]":2:^u`Ied-s)H=o:2H:\1\j%8Sf6)\$!2[-nTm`gW9[Z!D)C-8mD)+Q'*]F)o
%QeA($Y]:(E\;$FVZf!TTTG81C=1r%'UKjC7SUu]F!#grf;/HsI'fAT2iN>cjW]fbd*b89?p-pdJMABMQVrBG332p]eJ_;h@o77eF
%^oGY"ImJC=l837#WE=,P<@:HEa@/a?^>"S"p'L*FCWUt5]BbF>46/!JL2akVMX>9%l.>[L\o;^+&G=SD(jbb+(s`-9]2rtF`_K(^
%cB?$nMXuXfDkfe_/A:J;r\ogG[(ker)@&bPo,QN:-F3Vci80A%5fk[e_M,/kI$\CH\H<jMLLSP1Ba>b,e_a2LeJ"_6JQ*gpmF2LQ
%<B&d-iiD6H?P>#q)2,CXGB*%.)0_eQ@5lPSna?a3L11a]Ri@"*)olNX='\P/;o!q*Cp_M"[<LTj>eg%!pl112J2$[!Z#Nuo_tnHM
%<\8DeAFVRsgd,r*p!\_7pa!Mk++-/Xq`Nc:"3C%f7_BIpNl5O/("[<ZLC[4q-[^"r]S,Yk@qsKl*KI;5:?]J14*QMR'$b]uZ_MaF
%L<4,:K14BFn%(r?<22qA22*:@"iKN:ZOO<&g]uRdX%;ZQl;DIj;VXKU^p4)c6Cd6.Oh`+oED-8`#NP3l+#Z9$&)=PN%+ci^;[hq`
%n#2QK6T]lr8-_USL8m`_;8#WO82cc+a[.!2=sA0E0(Z\&/%>M[bO*hSokOGU><*!X_q&/-)QGVV#>*7QG;Z7u_:Fco^7PrQ6fIXM
%SKiSBPeL?b$<s'qPYA;OnhS,SM_s7I5K,/=oMTr*+h/<E>&UjdX[@76V?q1<4]]&D5s&9'5>?pBGV'l`[s*`"?uWOE@]jh;)CC^.
%alSV+Ze(4%h+.:1^j;eoVH\Rj]B\8c(H]_u^N:?A10-&:RWt5a.#`hf,Um<hiq2psP)BJs`m<r<(V1,qeWT[c:b,ZBa4HY>8afub
%%+>c6,p0rMa344D;Ubsk=.sZAg5]10)eOUEO"9`EPC=![mB0dLJ7-d,fL+c:KMO,EnPgt!M$E%=V+<MKfWZ03V3X.rNUl0'(DB6r
%e/PIZq9?%_1:Q8(*j7g)_m.b`A5)<jm9CV^<]>q*[>(;qJ"iI9g/Bg"L+6@&dUPgt3%.4Tjk\I;jhL+Ldb0mu7)0Vq4K*9SNOX7R
%+-&18X*+I9dH60_^Y@<cBqn\j,$$G;phM%M#I512BO(W"UfC.#jQKK4O):i2AEIR[)d(^dL6S[l3*`AJ_m._BialS)&b(\0Gj8=7
%glZ(.K7E3]F;nZsMt[AB:1G/<g(DpPOY+'%V0L]Z;XHkf4u(t$kX?pp1\ZetnI9VV-0asW=?):r%itujdKQMA$O\DTI.?YN\"$5u
%Q\e)AIr%:<BL?:5fb@!H(%'o38Z]8gh9*/.k]2#cZh/A;5e,KO0u,l-$JfEh=7i/pK_t`])"7/9p<n36-?u9T4<ZYnrEWaB&YFrC
%>l;\c05hgo-WG52.4Q+Y:Ug&Xq41'Z>&6\a9?!YsNoa(?,1?G_+q,sW,d&244$>(H_E/mB&%+SXfa(dY?)CnsnT$Nb+s[?%WmAGd
%\9Ve0#pI2CM*0h5M"4UPafo>VchYr8jY#MT/EiB***c_B7nr)RR$rZ+]1Lm+Q-EP:"k.;a[l`GWggHlKJImFJp1W7dZm-@1n7Ji:
%&BPs"4"mQn`(_'4]A10,4P5reS+[iO,K$>BS1.Xi]@->jWoD]+U-NY!`APhBVmXbBAoAtR7=+#cmmZdP%$A*&^ge!Wp+R=Z4\;Y`
%"`1?ag#r3?jQ%J1P`1k<A=>M0P`i:LrL-j:&U`5h)WLI%+1TruDr3tWF,Sd?Mh#ML*SO)4YI:OK>c1e>CcK!G\hmcsGIUul5-;<g
%RL99fnSe!=6T!Ii[ENYbDs8H#SUoN(lW['Mp[Qte67[3*kqaCgfo^d]i9$[oCZQ%B)@'')dqa<tI&S1/4s%X$oPJNp##JX^(F-I8
%ZP(!nV:9$B5.uP^[et7,Y"+Ud@bj.YP:L,+$5hYt'#iSr8p:K6.#)K+l':#R1t]t<e]=0+>]]X$<VO<DY4C"DFY+Fj]ZrEC)OEn]
%G0#G[d`P-4rL@@%>fbVk]Gt(&(iTdoa^j8kW=hV7!&l`2/YOljZmu41Tf1hS>f51/XmVU6oiuJU#^L_&.Xnedhq8c*nhcM8%l[t/
%ITf)!4P1qr5<R^3,e"D<O$"`@<7Vt2s4gIr3GKP\60-X7?Vr+p='t"*(E+k32iVnTcs';]?_o0!aHRnBVh=;P"[65Z5ar[8[kSW1
%akAVnl)Hch&&"61GN9EbngPG3W&qXR")5+Anhu]YDtaZ(4iQe@fU5FN1_]9\@P9Y_1/0nq%)]LNhM?ef.IJb-?5'IOT\._T`=P]L
%8Gqb2B'hJ])Sq>*K>WJDj=L/hXQ_<'*AS')l+Pnq%6nNuCdG8r?23_DihiU/q'"N>jOU;g#W>7m<fajh*[6#K#.X=5Im:`-+\p\B
%oU*I@p:BmJV)nQnGIjRgTSVF-s4%l',!J!Z^`mT2H41h4jumN(37sk7GWARU?ZDNSipi=Ngj%7b]__3i;KBl9A*IRRS.MGg&Js$N
%GpH[PJ@Mh$-@5eW!`OH-1LUg6i,[U_$,X/5"1'16R+:=nO!=9SK<2K&LEPta!\m0DN'hn2L3hbn<<jJ[7ag5tjF3`J&?9+)fE)NW
%3J2Y5mgl_sYnHqu0G;dAe^HAXRGB6^F?^A%&.oj_d-a9-Gm`^3M/sZ1&nsbZb*>="3"MKGrZdT<3,BkX$r_dmp6PID&?H.Dd1rp.
%:7&GQq0$X-]Lc`urkue+Ib2%4Q<Z/!.oI3ZUYPfU)Nm&35n/'M^FOS>'M)mIUZ*cAKYH3Gl'A]%P>4TWg<p#D&dD5(POnmQOj*u3
%8d*_gI/IsXR<MF?c"iHJ7eSs-D5ZY*IsT!ops_ihQ/uU:k;`)+dkc?*e8=V6EY=:B87^aK?1e6P5amSXfc[H##XmAtStAHI]7[Hb
%J[P22$:%#3^J@9.02F<WG1LiN>ha%bBU0;FVSssno"/9_[0XL<>.gG.OH?6,=s,Xn3ks8Vj5n`jG!jU2Jn-4"@s0QOYm\%EB1l`5
%-()]C/bK8^Og>_kX2mjfrcFQhktg<YB">W\J^AV#!OD&S9%$ka`75%f@?VA`ArZ[O-kp>"g@n3%`3iq1?mf7epic$B::Zoc#iJHY
%@o`POCd[+5%QXG*,h5/[;?Q.o-MuIO)B1UW1Ac_.0IsVg<JIk4qi6WH<\c;j=P9su]rq[/I01.DIX3]8)n;36e?m+1TN(J0+7hQd
%I.(5g6e7i:Bm,P%)MWV(n_FZ90TMqT\e@<"`lmQE4^'?]j/fGKYZ6g]Zcp!>VV"B)@;D\t:;<Uc_u8:u1=>;JZHGjGmY\g2qU3Bc
%//?V=dF1c+YdpnY4,&41olB-c3.$dHqb#ZLI@3#qBW9Q3AE`YoU"RbfLPli49au@]X58+grgg`M^+3Rb6""3l0NpR/6f=RcpQ[[j
%<LJVUNSX=#+7omEFJr.tBFn2+(^YZ?YDZdd3+DSq:JKW51OE2[S&&&'mY1MmSKTA72\3).+N:F.#(`C7Z?rDqi6A^LL<i!ii<*N*
%[^X.h.!T=o!,^G-[FHFj<_gKL_DDcQ^rWnrq'K#GDk=-:>t$VO0GZRiS]k"XGHP8i$mC6uhM!slc@2F!X+s=g=AL`9ApKp%0YOX"
%Xr=pG]i0p$JKj1@RS:%sA0kR?[HsAtlrj^qE<QM,l,sp5agc<-qKK+2f3X&V7lA'c2sjN'BKBKH,XpSVL^0Jqn>m<0LQ8!A4eIuQ
%(QscF;b[B,$oFSN4hbpD)=EZ0<SOHe&!'90QF"09ppO[-0=M,Wr+r`hZ@d%3+<3E(UF.)M#0;5D9).#VZHIspV%3`%>ZuN@_kG7d
%IC$RnW.[N>8N/'PIbQ<c;SY=MHL\-1CN5sHGPQ<X/+&%4^0Lj_hJC3>k"2#[(uf"n?c4i\I[E3#kg(nf)!N#b^>5VRSo3?(bIKSJ
%L_K+:;(!Q@,I`M=`paF+;,0!TZ<RLtW[p]CNT5pf/fdE0<!"_>^Z>o/!MpIOS8I&:oEVo8>eaN2hRK:$gHTOnJD?sP+DeSM:ZaU:
%)oK"f43r'-FN"oBhCWL@#KX)D6nU;H6"^.+h.ZsLA"8ihH4D46VW&P@`Y?iM[L].rEcKLIJZ)GDb9/XL)f[6IEZO"Q.a1QHS:6,M
%crH6)c*agi8=*/P<-WlFjX(P:Q(-<79G;3(>[1j7L:eq`m/"%0%\9+.KP>=6o0Sbam`'G?l5#U3IM=fcKqD]ZaC6ZsD]cC(U#`L/
%mYY(mZ/aKUDD,f?]Db:RdYkU)<:MLQjY,<\$gp51HGGrqVb-?nDHb`.9=CAkfjSD&`9gCV4C!c.j-@T1?4&QB0aNs7[6?!#*(4IO
%bs^6sh=<-Lk>B=0&qu=7k$V;/Y>*<E/7k%@`K_u^keBbQ4LL*CD#'6iHgO3E]&n]\6:ZLm2Nl7cGQpQJ2q<PMG)BI`Cntp3h#2OX
%7S<@jPHi1l`/`dj<X4iYopjAZ1YV.pC6:n:+t7.>Kn#'4!R3#U[L;p8'ltg2TWt*SKl,QaUf"b3nCC>J[u$hKK3fDr6]9MrgBUUT
%HJs7$qi5$3(TpO22ZUf9]HbnT;TFlj,YYZKMI@1sirKod!F^O`KFHj0l,*c]ZKF43]?[c.LY#5A2='tpE@G4o/*d:!*j@OU)#]Y%
%V/M?1PAEE`"ddC*p-*<alT[;"iaq5eL_nY7AL7:gD'^Dr@tE-+LP,k#!&k$Ja0CW9pu12_L)n1:VqF<j_3DXT:ulGdbLK6=3.fq?
%\=JTF7)e8b&5T:FndAB,A:-Y5q_L(1_>%GR+blk8:m8?=4.5DFQu;)<nVol`ZaS.ESpQKM'G`N]HN\cPQ!J@>26Y>$5c("Cd,"[.
%0+VpY3HWnIH;jKm;S>.u9ZAkYg#R1;#<R"+<Pi#5L@6Xh'-4oeIb[@M![CTd0c#=)qr+YBco67hm'X-S7HQ\qQ/GsugL;bOH_]a1
%Dl[i<2ME$G(Yr90+\VkF%U>'e-C^%$^2e*:$tf1*KSfA1`2oQ3\PoQ\<0g()0.D9K!IAnc>I&m3r*n]$G40<eH1,&DTrE0>S_NDi
%4bu@JM8UcPX-:KK@e_>m4K35/KQfpk2j8$kFV1>mIMjo#YX.t62`7FViU#T]#Nou0h6i,G2S$B4d*M;j8t+M"2bW8.pM`oJF..pO
%l.mOI0I#1:ZYV"RXLM)`eedBp<r`ulDa*pFZgVhR1md!`.W(cKA0T^P3W%7@#Za&ff3@1RU30S4+XS:lQBgu;_+A;JMib3=;L3=>
%cb"a_XI'sG7)@Xh][8CAEd=9R+&`Qp\pq]\Z[7ktMFhuPYCPH?lQ!\O1m\9X^_Ik`3=h)(?[INH4E]G#d_qM:=fYWGPtk89nsq2)
%6BI;@;KpQcmZkVY"qsJukp[:+Vb3lSpjq%d`;S2M^%2pme2iGR'((sKV`XPPDQf(VCX]&1>:7:q(/$'(l]KZ(4S[-0ST,V3K2.n2
%h<o+hWC7UB#[<1sd.'JsPC.aclR6IPDf>Wp/Pt2*eE%-9j)%C>e$WEL'j'7:H)8&"[L_-Iah/5@(n='F=K_]p>&.%"_4S[e-3#Z;
%3+%;j+G!T=r9C;]0UIP6&UCS1`cDCskbZe0E6EI5&3i:eIu\;K%h!f_fbqUN%rT#7"A<dE+bg=O/+4L=@hm)!p@jdHp3e&$?Ia(K
%4*i*u(WY0Mo7dZulYrLH_h@?&HT-!5/lB\Y0&m[T73AgG4X8Oc?TlGHRk0=H$,R07rIA+?Z0L`-F#&mb2a^*;N]C39'ZF]S3K"\`
%C+[/sD\T$"/tjS/b,Ie4Ue/..62.]WoMoWo%KmTPC9g>\Qqas3NKeeFhakaK&[K)q$=V"j+J*C;NkhFPI*p[1<ko#GL-SeTfO[.T
%;ZAG,D&F@eV[HA<Qc*r'M,Ga.ELBS"6Z1;FZpVS!aI/HF'R--s20WMhA<*g1V%`1h;%JUslhuu!Tbht63us0do=T5X03i4(TQWEo
%He8)U,;GQK2&\j\*eU!*i\m1q5]T`/:A8rU+PI!OIJ=d.C[.0afi)f.V.rXcc]g=QA^AtlbD[7CldN35pjo>:]5b&:2];/F\Jub6
%,.X506:8P8SPdgu.lW__]PQI%8YKj/iS1X8;&QFW\\1bBq%,R!n]?1k^`s#`M.1,V5sEubEXK:)YaN_=?\F0=klJpQbTU%O#j=!D
%W?t\d%p^5YF:UW8gl%QGXURBJEY?.=Y87GP^AFcMFJ)q[ogpj!CnF%1I$@ml>>FV<H[-98:mXhkpjmolE)1>XQP.9SHANV7\7BfS
%k5)q%E^,V9gt"`Mr*B_K4p3p/>YN:-Am0dSHm>:Rb_VSOYKhm>GpAg;c27+2e4A\gpjM7q`O\=c#]FgYJa(7?5S<Z@^j.%p9dEg6
%d`qbgVk@Zk\Ic^^]cuS?f/IN_'8UO*)^TVuWE`W2fR:Cs36K0]cg<4INIS)**2f,)%H?p^:Mc#APbGekahW11&'M)u%/565r<%e,
%Vt/j.%D60\rZ.F%K7nVND-'7*ic*u+]ng*-2*;r5^Ms4\;g]XI-dbdH#LU3IH=r"kDk-/ERn7bUg5]dg7uM)!o@W*./nrW=^OHI@
%E4E%6aeQItjHJn)Q&tF+J,\t_I#i9.B5Me-j7+0A@,`i8'.<hPrs."tfW]Le@c5.eKjQ"j\uut?@JLW:>*/KQ@;X=sd7P-8#iU^=
%B-2M'>pWhkO2]TLIbc8VUR]!-MdK9HcFKER#eq.sf8+gs2;s13!J,/XjNLO?55DYW.pDDTeR2o.^8tbHKem,d0aF?%O)]CGifDk!
%IO.W%^iT]_n0,T/V\!9>chR/Q^BP=343q72TYb&n&7qmGMgVq;;.+78;"&T.#CaGd%iFkL'q>lLOPBoT*otb]CKts+OGW%i>Kb,V
%FH$HMHg_W%V9gecq;R/MmX\2od$#[Y#WUb'/:+=44N/>GnYOtOrHQ/KrU\?-F3+d(&EN\J^WR9-NrKY[,7Di@%L^m'2g1t^l&l5"
%=^43qqt$TqLI:q>TXoIE!:;YWgNarq/3:njPLN`b_%I?Kk\53Ak3e7^b[0r<jt(ORg0KO^2AUSD,&a^Vr8<Y)e@$#@k1/0loM0dm
%ej?5+nFO%/F\,OSlj:fR6?\KaZr4e.:Sj918u>?OnZ[fs2to]=`)2u>!g_nCUm&hC\'ul+o?Tnni"3P%gQK/5ILpPFf2PB;3cq?M
%[hH]e6iuhJN0:\hj07n5V>;cb5.$oVbuAKY"DmUS#>EBO)>O$gNs:it><K4%9%&(-J>7k'>SoFPWSF8C/=[csgh@GW2Y`&@Jh?F[
%(b:+a2[eI*i/W^cO,eC<)=)86+!Sr/GSY^$^pCOJXEt^TqbJ8/r/q<D[:13'mQhdn]&59d[s#OEnJtt"He(O+)A..^]?nOE?LL%+
%"8?6HoKV>H_!j^e<fuoL!/947i`TBo%s\rBj2[`;emInt9;'6SgF$*uorNo34cag=\FoV0=js^#\/Fr6+o(Q.?T_S<!dBJK:TtE"
%Gr@/K[YM"u:-D9DdQH;oHca0Jc:*euZ?>(;f,#Mk&sKdeEqkI^-qSmF'0>kMGW(IKA<UYQj\k[9ll;O?Ft^9SSoB>PH_R4A\0lI3
%R.hk,X<gXto,RJj0/r>^WKZJ=k7CmW-`o#a4ib0`T-prhVECc1M!iB^Nd/l1I<FtgkWCGAY0?Qlk9ds'R>g=sl<NmBS/QUCa.0C%
%.9rBS4f,4AP,DR=8UIJ7g@j#sk^?5iFT(P\:P*qbkMkU0VnLCD06gB0B48%_4^(sE0!6aMX&nHlrn&j:&83X[0$m,RjoWRCeR=mM
%i@/lQ+<Re5(H+X?]7leUF_`.:>sC!\Wb:"=jMN.UOLe4*$gG;%PD,4K&\i9sS2M/.gD@DSCDm3/7>uqSI+FKg.+D\jnn*bbd*D_X
%IBe(4d*0RuRP2$Lcc*kWXL5FF_XCMAI<sjm0p!.E(E)XE?5-F"s.Wb">Dl^HS)qWYg!e2Tr:o2\EBd)D(Xn_YmD[<*.DM6sg(#Z?
%0D\]cn!3%PU7+r]7BM`T00ZXr:GC%&j"+5:Cop)T9+*,Zje^N#=CoVSYZG,)2\2OH"OD@A8\*#/0C9`;4\N%>Zb!Ni706+Pr_$\a
%Cq[6iF;YMS/_t8KA<t`lipBY>kchWtH\;g<g"m)hHT!t?(b2Xm*N,8&SQ,q?O4D7UfT,`n[uOO5QD8O^]=_3.XY(\9DYoa+;D>b2
%^!OJsIP>N_bG?Rl>^jg[AsSqJ@XZ3o;YcU.>3U,T\5I7JnC#298gqU4Y(ZHR()g6I`/DNuUT7R.-+C1o]lJ2*='/=6SR8@0_X0r?
%IMlDT"FQQ:/$7"1C-^O`>3.F*K<(K>Rs1p\6^(kOSRbBoRCf$GeP"`Q>^bg8O&jH`[=>TU:?>R3[I>eP_pt;pO#L0AY.UJQL:l8:
%End'SDI.UL^d`WkNU2PsmS5?[9*`_Kf8.kL[iIV:n?#0fU2M:=chO;XHH3MlcjKXCT&VD0-<MeoXq"p-^.6XnkgO`r30!C[OG1+(
%pp5H%\8o3k-Jle8f66oag=ea"Uog2jR-ND5WBI<t%/"M?VVg:6[E\WOhrh&qqcVUrq`"6c$NBfF?1oAD`sr(1d?Wfp(L##]V^"4c
%D_IVP0[70f^DL6hPH!U8Xak]/SnKGCooij#EW,_t_lX^s\\rg-:qI,e1ifuh@!Td7O@"Lh+EIC-))sIqB&H"cirY9cQUcU1n>mPl
%<,Uom5C.Yj'NYW20O/JS1r7';mq(u4]sSPR&'t!&`^.Mp=?,6I2?IN(KakT"-u?g_q[XVnTf0B"F+3V_!TGMD4D,]B[+?8MU:Km7
%)SIZ"8c#*N=em]#nOpH4apE.l->&QB?;+rKk1I/ZChJ/r-Df-\bdf1-9S&%g9Og;._(It<&XM6Zos6_l_I*ma&(g0u>&]NSBj$:@
%:+rbj^3I*&M7i;>M[>I->XjSlE;.LQR!VG,A:EM."?06SNHWOlDf82tr5#djJ\PAmC@g0P;N#I59.dte>AFVhV6hB3`F@$-q8S7e
%-jD0.n@ZI^M/-nS>u>2TpVgZb,:hp%Z?`]_GRa1G\R(ELmW_T,HmLmS-1*i8?:bqpCeZB^k*jdLTsHa?\WjSspRC_^/BZ-p4.F9r
%IMdN3(/MfK_J4iD-+\-E<)++W/`fi6!mR(@ejF6Lok>h=>k!:>g>*-BCK61oF5([s)6e3rR%&J>0=_s]YI6?1nb_rjl1/5)Z`VZB
%>I8TOfF#ZjoW:fpR+bI"45\V1q;uZYY^7DFhH;B)[ZAsREBAZTFL^-h&@e;(]gHRJ4'oGS3Bg\@mGr2G:]ts1H?3XV&;\k[GE/g&
%h32G3Z`>G)j1A>j<Pf\&HQ1q"`3"d#hITKm<3J/(Sqm2HKMug^8>:33M-O(6bE8]&[0g&Rm4#'*G3[Jm->c0nU3hgGVH*7u_A#+=
%j'iTY]bAStgBY!(@IGDSFO_hZV3Bq?r88h;N8IuC,OspV;)Y\aZD/eAnsV4OIclP5oX4O<EqT"&Q/(/n.`l2&G+L7TZs.mKODfJA
%#fmO'.GljTZZj/h4PG/UqlG3L3K3@G1KJAmWg_SnYHJh/e9^P%-Pc1ISl4a\`E;Csfs;09*VT897pGU-A96;uKBe0!F6GctD&mNO
%4BrktBrV6S;fASIZ?;_pcEhbI1S%g2XJMs6[nfLX`cH.,UISfa\T=<)HAZTdNr;kPH5mM1\&XiPiph#:lRmW!4A'L_`#i[djE@6'
%Ie'#-X_-4c\sQ(VhK:ULp-\`,F'n@*b"6[5oL/4%__e9&^Z[cNDIht;?1(9F]9"spcg&R6#MBQ'jZL/aEE:.ESG8O5cbc5;-g,Z^
%Eg`$`,Ze]H$g2<EMoG;Om:#5V-6#-3[rRtG$fPN`\N$VW**ne1&l4k.BU4Ef/gHYPq;mUK]PqSMG7n!:rr(<rM;Ppj<N-uRYPjMT
%dWPKe]Pr:KbK;ab<A36_Wp/?/gj7&SW@*)X>Gg1Z]054)&%ABj_Tn]j]BHe`/aG?>GD52)^#qS8#N"l-O$eWuo@%OPhTQkc"0[T?
%%k!s<nq/QsS`bXgkD=T/b=MHg<Rq-5j&;Mh=G*S952<T)l;FX$Vs]9m0%HG1-ED;fRFB%8=XI(W-s^?jelq%6-m,qg6qoDj@W%+d
%@7i,.l]nBrBp#hroo!%H`ZNQZQJ'!/C.<%2XN^&r(X"1m=.OB6*9J^jbG?[9fp-r]ehTBgm^06%c"tl_W^b7=FT0RpWLoc;DY;"h
%)?\G90iLb/AafQiVe.6_>uOd_;XGYLO_V"rVJ9on:1`Is_eA^sX85RS]ToVN+5#X?A(@W]2A3(7?)+nqDk$&jY\bHJF-gLHYd;kj
%l''(u-C]L$RXWQ`9_0f"mKh.*.<WJtE'__U#Oa=Ir0k"Enh$2n_-FNpFgc@JJ3.1_?ZdU'HKouq7Rj`,>&j?#e\f/YMi`u;6Z!83
%/.sUD)7m8g$,);,EqP`!)1%iFGDRmLl4Q+3kM<l_I"Afn-\@g4IcS"q233ub:Gb\W\,QH-0IDAuJcY*ZjJ,mIDii^7rq[^(g&KIh
%+9'Fj![T;jJ!q"S0jXS?J)2d*HcJXQ)l02>Z.bsZSU-lb;^';Qs-nr.aU%[+aSRBTQZO:'SbK:u@Re)9L(&G%[5A%,0D$$o&nQ"^
%;Bl.ms(Em6IpN#k^JF>P\q_V"?)cJn3,Ma3nCmtkH@iSt'LPeheEoCnQ2ZAjB7Kl@]WBn;X`ketg)nd%e?nh[s/Gb&4I0;l2RqY*
%Y3M\lYe."q.Y\]G?+R37AB/m5G`.R*.*S'-0b*Rf\:/A:X5RDj&+th<5M[E^VA_Zu6[-:AEYtZf2)G[o2@,#(:Q;++=HD;49J,M"
%<[bn8C(B[fUX&?UAp@^E@u#b_GRhVBepcnd(VaF/'o23l\j+4VlC;VQGZjoX8&afM?<jr/.VS[BLq]KHDR.!K)2#9/?VgsII8!V-
%T"-0Gn23nmWeta<]2e11]4D1s$n]FUBO>V@%*`hk%XT&^TE4A?s3j8'&d09#<0.kU723j6=l:$`Kb"M<U!\T*U]Kj$6OO<E&/?\1
%dkG*?3ODru:!5h'U'55mPb>t"!X44.4O#Y.,]H%EP!quDfH<Q)3*6`E&kl%8s8&?=-p^=a=_s@U&qp:Lb_e]@j$ddIJg)_<hr(/o
%h'<5N<p"A&,QSl?/MtVO/5_Rd="l<@2Si"!NfnW>W6bl(6tCnD6o/@!["<^im8aP/6Us%*/"C!+aaa@J0n?'MZ\n76#/k"2Q3dmB
%m;u;q=sT:C+SI'3!=-;K:2tRd!__YZqM;cnO6&B(0F&FE!b4.q/5TO0KV0U[XPG/.MEMO>el;u8/dN\I8n-m)_[)(!aMTABamq`:
%pS-If4&[mIO@14TMF!P^eM9B8:*B]cQiLDJblq6(d+F"%[!<lGHr,q;S-0N,qGX,IS7?PU&g)f"#a?aZ5uC&",q2C.P"\?^;o"[j
%"+G6a"T:Tq35PqmJ].pN-,P6J;8TRn'BFCpE)dU++=#=E?l>mQK:sO2OJ"R-&e\+WOUF9l5mDqVlKkct:f7GADFKRn$dD:S-r>bT
%#XegC!25SC-D%VX'nCJ;-tj<7`V'uS7uK8Z!@/#,b-4XdJL3/s@?(VfUC^HV5URVo.'aIX#-L<j5l>n^&fH3C_D22pW!gY%p9_1<
%jCf#a$LjSKH'o:1:F&eHZ&+2mM9mLMX!JHqJHkq%Y;d<9/'*Q8)ds!`6\18,ON)g3:_^j2"`QR9+s8tO^Uml6#`u9Q/0/h>U4F^H
%/Ms_!:kXD8B2h67?u7rt]$eArM'q+eE=C#h15IWg'Ih'((DY:5)0cUk;!_M?#Z,IkP"_%0Z&C4i?kYfZ(`GIk?naQ*;.2_o6jDfX
%ad$Ckcq.XKr%-O'0SG.?OtD6\$0HsX0E[:#$tX^2+Pqu/bB=hWHrU.gYUj<_&3rN*"*onD+m?kl^oj%fPYhS&!QP3PCk<F8)70G\
%6igO<Uk9*cjsSW0.^D1Q'j<o&'^,hd8.mBP+J[:+f*Z1KWsGf_`55G.('lBGKZ4EM2Q2kWUUJ8I=&]0EW!G(199buUcoBbNJq29_
%YJEPXi3>ON"n[Y8'^S?m"^hfD3%OJd8q<HT6,ZSJ+<R6u\3@,$^iUVY!qBqB=$hNhZ='mN&3>OhU]M>T+t\mUd#hBhg$'md8d]MV
%m'PjK$6JC4#_5W;eoJQM6"'&)AR#snj:jH2,#0>WQ7I+l%73Q6$A]W/Ujse"&]52BXsj(^#7r.ojb#C9*q2XlBODgb%E<o"@N1[S
%P]mTOKEY;+K,GS@W=UfGco(l8TEu<g-At1M"3\\B3N,JZ2%mJZ&?luh/V(-bK&%.u"m6(u@.E>ZckXd!@(.jVROfEeUr(N24Z<Y?
%aFN89Z\U49<s_42YTWG^#3#W'MJ]#GFqZhj=M?qe"4'5rH,,)cnDIuOfR2*oJe3QqF?/^(iFp5eA)k?uciT3M"KNp^YKML'"WTpF
%PeSl3%KhYk;A(X<lk^A]'uEA6OWl'7BBI"!;k*jLHlOEp\O(RieC>iOA&+dXi)^2.5f!R=7'hou&9]`7OUO&`!X8-'4r6U'>/1+o
%B^8fe"/dE=r;d+QoFp)c/.8I&UIAZ-A/UaMBEP)1;"IfnHltfrfESA#gAQOp[*1SKH*gT(MH\3U*PlKJG"5]r3?')o+H-bkG,1";
%j[@+>#m)A]="o*)]h/=X"ZD=HJMU6k=Tm,1m*H/=/#/d<nZh`tjACK24R%aK&-bE>cACBp_Bog?d2pOT441%5kj]K09G9bt3m3-E
%F!)D9^k6lm6YoRm-/8!p%/>2SUBU.hTK/[b/-C>j->Nb;'L5fo$0>J]qn[jm1Yo=/@M6g\!'(*A_F%*'h1^B;@F8?]L<t\F.)q@%
%U]N("_pNaLL^[*K_8$;E5T!&ILM\S87apQhaMNKsi"(*G1m!m@J.%j'-&"5urA&(Sq*G*kd'0/r,AdL:?9"HEX2SJj!V?K7,0KUQ
%Jk.T9R#I;%)d%";YAcIRl`c/^lj<rNa<sDBH%@XV*'YSOq@naETM7cOA8q'((slF**Y,?=kK-C_)[U<sFN&2*JfZHZ0^&XaC_OW7
%@aka!GS%j<*Y.-M04::[C(+]SEb5r0$p]oN,/tA%,%*T3-ZDSaIjUuO6$QoK?Q%34RH%."C"+qoPmg'ZciaQ*VodX]YWS'h&&9);
%QlsWR<5N7o$IDgN+sI<4(5)nG:i%H-4V$siA_n:7apCV6`<'X%1hm@U8LXRgFV)3n4>=?^+NS63Qfg*]j#@TFZlh%_XHR;/D(qP"
%ARC=ic-GdaJNO4++CU3>&KIf$aij$_&bSI';0Y?r8Xi7\bUnsM*dfk[P=4aAr2)33/NTY<(1Vd6e\G/SG"2^g?IGX"N]Cs^9Y-)E
%A0klqJCXdQar'2)r'@mq`Oce?&GFhq3K3ZO\EJU6A@R:I1(4CWU?k,aLp2E(!?;<cU.H;90^)dg)$=!<4$*ReW+qJ^<0HlQ:nt:n
%JcUITCZdDG`V"`o8t6o#5V"=?89ua&?J'lR?rQF.U*+R`F"$6_1ha'K)BrKg,]eTp6Id>uFp%ipU(Lc]1(0mOfS!+_i!]h7Pu/c:
%Zkd%-Yp9)GP[?,nJ<epp!fr'c+J[&5JBJf?bCg-.Rt8,g)"9Y@,W#`!11hZ-XO%0n'8KF/(bQ)"(u+dm=.4dBfTjA@eJXB"!S`.-
%MEP3TO`"\hA&jW]jq8YRVV%t8\r'cZnEhP7P<R90Os)^!2BW4k=<a>,+,Tta[T/Zq;aLG7BX/Jh.#>Hbd0W=s6nC5U9G>c4UH=ag
%Z*L[a'nfPpgGm1oNp26?g2/$[)LJuE*O&Q3$4QQ+7#&,(+;(gY1)Q=>\Rj"9A'WlJr?+Y8O(9/Nca3ccc)9C;OZ\b"dT&)SBIk$\
%"qOED:Pp>5b/kbP1hIOTQ4XrHo#^)TA_@q2G)/Ti/>MEb(t:fE$;rC:2BHoMCr4u_"t5!13Iq[^s+sarAjU3F__MXX3d@SG93T,U
%3:K1%V=)P=;;+%EbeXk1R9<!7'6l&u1_b!s6#kg3]NlXfYmA.<F-f2."O`Fnh*_6nm/eURBZVqPL*eJ78-3Fb"d?`b_LsJ7SkH`0
%8-Q[q5aKbj&G=%XOFmI<L5\X^*.Lb)4:Di&.O_HUi>j;@0B!nu<tJTa`Y7[b26&VS>6U2Y8\d=e;f!54?;(`81^$1mQ.SMD;fQ:5
%TM8B&BC-O\Tl`UW:k2Ia'.RI#!$F_S.2Zfa8M?+4oY8Z<nE;)ce4p3(+Rn61C]n%:dI]2]>XDhr:tPsq,^)SfY"/u0JQ626TkATk
%c%)?DA$\S',Rb1i/gO[aFN%>s)8VuCd?slA)[DcEBbP<6-,W$',TA4p;LuSS=-9aXbG[c$BG+H'W+de`,+QJW@X4kS@Xr$'BR.I3
%#&@rr2EY\`d.^rfMc),!L(gCpLu=tHa0$D:C=n7E.EMc#Ti;gR"*(_3*:"L__+;L\6F:A,9d568)@U3g<!7T7A:p+DdN-2U-BN>=
%_.k"/N<8@EYVtH*=_/2eNc?%/+JPG]G0LIJ3lI=p9do[r/l65Z7>3+a1#ODe![Gs"q'j*e'ao\`[>0AB,Na[l+HgBbOPk(Q+s7%)
%Wro$T6kC'L2$dd03RThI0Z7Q05p8e(;fWr/O;144's&^T!Y<#*<,h5=,fu'(YaBrl/A[24LnV$m!"*Fu*-*'/67a,Gk^n-O8d5AX
%"gh_I#=\d1ZP8JJ4/kdR5<(3n!\I8f)1j'@OT^as*M"up-C>U6I$odKMcC]!M%sL:[:*>iN`)P-UW_!)5uPQb(,-T,n17/+"WF.@
%7<,[P1_Z6i8!V.5/=P!hKS?K5_[VHu#<[`IG*sAoaoY-qcs]8,,>oB2E*2?3?tgW++,'cC$ZId@@:W7_[XFo;EWL9LcjU;UZ(ce,
%;3I;$B]s.],!iL]TH94H#0$q95EJ28E1@O,Ad(h#$jHG4X;TE<7dqWbg0Fp3/CmsgKGMB6$Q)QV"g[Rsm2,uA`!hDiHr?Vk7eERn
%5mGML1^5A\a<7Bs#Qh"Va]K]Fk0P><B@6]H^k.hMY_Kr$TF6WF)EEaQ#mhLAO.^Zl)<5g8,I"/?lk6Qq14q2#5!jdOLtUg&,0<57
%(bEU^+pN`07\oMbo/R"r*Xq?O&i_\7,4ZQm.\n:iNs-o6"3uE/,N]q9"=f(Q1"I^41P9gZ77KKGW<3>G\1@sX4C2EA.5"!BPCXSR
%.DcfBDg7^p)Au5<Be7+lU>8\bMLguK6XhX07#$gp4eK`A)E1r4/E8Ju`atNhU"KN#&OoA8'Jbt;#R"9?EqX#`;0YbC0juF),9sHA
%*Z-M><<CTN!Yo<Y7*,oW36YY^P_=bM/rPZP)Imji1B>Kq'\p_PTbc?FXL9eoCh%KP`XCun(u+3r(Be+[a<Q(1LtZf'<hc7D<)nds
%B0cki-Z'b/=C'mI#nX9D8aZ[q!)#a:K`Mj_;\5XC,j31;KZEX;duAUVcq18#@+ok$3fEetO'>Xebs<Xc0W,RE_G_%&3N#KligpL_
%$s&%D'ilVP/VD&B$seL9)h#60B:&P$Hm%*K8J#jQ!dt?/nmi+1<XeW@=GPrN`2UDV4YX>@fDiWENBJ-L@<6*(f(f$CkM.o>:#k"c
%c;!=-RE"L1L`P+Id1C>MKIJA'GK/&_[ODQA[;I6.:^X>#a@[krBH9sXA/^YGM'Fm,[#GES9-Ti=-n$q"5oO^*8;\Pk+'Ao8S]33U
%5iX1@:9'=b-09NuqJj+fJo?Ji9e[KlC"-n%2AGRG_LrcdMsq$h*(T_a^bXmJ]j_eo3)k\j2D`-8Ebkj&#&k9cb^_DTma))I&Qp`Z
%_%\W)=%L_([eG9.]gPUdW$X9uZAafr5taM-rFQ5o9gnAMADBSl1dSq\#1=962jdROTFoXWgn"Q>"f3?@%&+p:OJ#4%%o%'[(68WL
%m6ZKAH!mM&Z:BOr.Hm,FP`$g#6(\43A#P`QGY:jU0i=_W,ST6(A*L2sM67bIrVs88T(n9=%n(kONYo,UP(3[9n8OBnU[-`J@U8>4
%0Ed&uW)>mQ!,f/bBFK6i/6W>-/9Y1rZIs+?!_(hIG]SFAA[7.b\q8HuF-,fJ1K^t/c'XHQAut?,+V+^+[u[Q]R`X-nh$emlbr"kg
%MO6N$)e9*W#\bW:K\ak8h?oj6@7_o-!RV_":gbdpVICF@9LZBCdWhttD&@S)7DTFJnAM+;_[8M0_U,eWJs7V,P-[SOc>E(oN87N0
%m^<I);'sPdJ7O"_[L]-hFu.^t"hU1%f&U/D?,@`/]O^b+43/":V_RM8R9hDC.b_#7,D?uo@0W<f#\^<C$,&ejo]7njJ/&t)#TH.d
%d0;SDAr`*Blt2_,)#`)5%[rn&!5$J8Sf$o5=&p)n%$4MPKMeN_"#eRSYhcH%*o=-U\h,I+%Yp09;A?O._6;N48]f:rj6[V:+DJ=+
%>]2=L8[OsULOQ&0f8=,ZC]Y+np"FZ<Bk+a'n.9V_JO1pB*=fr"YK/'(h#t`Q+O2r5%a>h5J<&XJ*_%8OA$AFURY^WL#f-f3!!nXH
%i&mgcSd.pa\7J%]"B'TQH\0otD<,5dh%+!Y*"Iuq@#<>9s(-+%T`$3!(CYqC<AKqN%,V27_\(l:4P7U)2A.CHQ]B=\A;`*!U[r\u
%GsY:8o`T<NNks@<QH0(o#*6\6\0)e'2=Y(8ANW"#P;_VPg@5MR>_se)12_5,@#'U'Q=uEiT]md8*AQ`9cnjim'$9Z0dS*oWD<1qm
%)V'#em7N[?RKZoJ0`mUXfoC^S`"gW!:G5$KM!G;\!O3Li;^*8G,MR(2U<))\%$0$1/5[=:Ct+)\M_(H=+i0J#RhR%foqRXAUoGc(
%P.4%29q"(3mP^hE,Adi4Sj`:LAU?C)glg.+YdSJj(_15[3.W@^J-8!uT\,qiO,"i(Cr8W(UlYsm,jof;g$NC723DK=1QBXmPjPm4
%D@dq@0p7C$A["uAR`LXMRTAc5"kG6Z5VXr,H]::01(R1AM6sN#7h3seG%O(pcuP5q4BA2'0QH8!NJN0O.=AT`W\U.G"D?0eWaNeE
%`3ZV(a?&9AM1(N/d*12e0knX52$?N\EO"8WRgG0`Jg6p'a_BdSX%C6-1c\KB[u#:6+@>!2Zb9Upa0g_J1;d.)C_O#_&)FK]h]5In
%1_(=l#h3S.Uf.DO,]Zd!Ukg'"77^j(DV/h"R8C-,MBI`2Ah8>h&^14#hRi1?EZNi$:XJR70+.uMC7Yt$/,-bt!CihiDSrSL@Yo%9
%(+DVI.`62^o,AodDMn?N,uk6e2c/Q=(P8(NB?ilg3/e\OXR.;qo/=D#Y5F)J^T2P.Fhb5SJ'O<EG1(g3#(H4>Sjs`cB/HWpZJ\cE
%T3Pjhf@c$O5oo(9mf[32d1`m@El:HP7]:RT,*$Z,=NY1VD7!b`J]WoTJQnB*P&-4HSOK;66Ip["nkd7dm70:GDK*jZ'$MVRN]K@"
%4Ut@>A&Rrh<g1P&#&/0n<9&Xm?T!%PIUJ+5QQB?]f=P`0?bZbX?6MCZHo8Q83=O_m]TN^l)U3XL/%lN)b*an'$WSRC>fl@IL(*D9
%&S\%bFE/GW,X5UJ/n[`,q*Q2HZA($0"gXN6[<(P_j&[7L:R"/B>K1M19^U8G[gkFe0sgho[=nl-+[.ueb4@A$7^=p1hH8n30-NFV
%LX/P;k\39@&nXa)F'`kFm'-fb>ab[P/?+2>UQ;MKGU[Z7edcLgk$rrCn6(CFPDobPgUuFc\ooa]1]Ar[(?0E_@=t`9gMbDCK8iR7
%<o-7L$YY5c**Nq/l;Yb;OcJiW<-EZfYXu*1Ds_VAFO]8MQG6^"SHDZ7-EMr6/DJMO`Mi_*k;i-MEoI&]F:dNSl?8a*Gj:]+h`\Xk
%2Mk+9>E93!j/cd";2=%ajJWe).+>OC6t)jMF11&u+1&g>Ea2Vcdqu\t;*.uN_h$IF*i.t\ctF!hLql\-oQ2qS3RmQH1dM9Qi[gD/
%6'88iZCJ!7,d-\.Lj^C_@6/d:'S`k"KIXo;rU@a$OI^*.pueT>JSY$X'c"W3c7AX_,0Xa>T)HmDZua#P]cAjq9dhZWL@mh5G'T):
%@]T!<5.uYu`\XgZVu$n]3BRQoT%S%j71n*5qVqhLm>5Bt'd7+1Lfi47Vs".+!fY2EfQ<qd$!1\s,"#-lS'5Y4S?;ELG5cJcY5N<5
%M*Tl@-Yn"h[e']04c8\l,89-$^:_\,&]Vt.6I^UBmQM"D`+26&F&I9OEu^+%-''Dl^u15=oX=%i/:9n,3)Yed(@NT\[&;tpLP#g[
%=?:^=+PoHN:+S>l@HVV0"ci,8#ofk.l'BF+@m1\eNT+P=E#d_N!C/<`CD/YX[%jah;k_j;B=[i_OH9@]9>/ql/Qm6DqcC?E'+X5+
%#2X\H;*>cKQj2_)0PVO4h[mF7N$s;r-?U<Cefu;MH+(a@H)h9Uf<`F//t[eQ8"`Y/ibdXtL*!urim7M_4e5bF%M[Ji-:mMO09A+2
%ir,7E'cb?Je\[T?PJA&3m`*07>ntL,^H4,AG]A<cH3/'_ZhPR!X/^D)hagLlXGC'%2:720KOW%b)E@\K7U!N,$d[&M=Jq$#(ItVR
%QS(X3YcSX98A'A7r9RE(ck7*&FUJj!s!fY(FZf5_I;MX*;NeFE6F]-?#[,N'$f[i)Li\_"IEoe]o!%V^"5n/+b(Wo%X+I60T!5IK
%a!36#6?#GmPj*snp!iXGiagfcp'M;fI&DR=7>R<U4G/6fpb@AFV8e^]V]6L3ff'[Y0B<Q48hkZ8RV.C1oOhd5IA]\BL!l</^D*2k
%KL>mnAU2\6.XB;OAm2JiNjrIuQEpkYTG83NE:f@jWT6g11htcV+H*1B`Jpk4]'_'*HrQ2\B:[2qQK*2_[Y2[GnImZd9>?qV<`YBE
%2=JMZ>TksW^P[s4Or?Fni*>,DS:U*28-#8M$US:LjDcP^Zi"V7>%W$maG]'aq:p/I#>=8?Gt3,)5s9B&Xh:AI;PB6`K?2BXbY,\F
%*0\XP0?\.1=,q%l.A6k)#h+dW9<NmWq/J'[MdHe^\kg[mESkUo7"_O_>\%2gr+%qjDe=5:<L]p0"#g1!&`Ni0=S%eZN0sV^o!?GR
%a:m:T66Sb)lAcMl:TehoXJT!h#M4bd*P$!aqqsLtHQDul<^3AT]KBid;1356YW7S]KRH&UN8+dHGm'e#R0L`3-8U!q9W^2m:M]dd
%8=V'&0ahD2#8cKSjqpdKAS"G.$)&Eq^uf`GcNp0b$h1p-Hsm'h8PI<sap2oafnBM00BEsmR?%uP$U4L[]suZ0nu@5TKpk44=777!
%*\NLm3+FAIoss1*IJ>8Mo@/%5YI!WYIGY*8e&%gWKi#?e_NM8l&Z-F[;rf/Tru+L@%ps\m>edHnF:Ej&\I+#4jBXk(!P*#.aa6Fd
%!Tt7Bjf-?_p<JFuS-gL*4n(q%]):+E@/Wl`')^!Y&kmP05;h9dmlh+cqO=R4iE?.;R>]D6/n9Tl)d_Ygd\fJ<&77b`$!9*79-UHp
%GE`*OVkZ$JYBSpp":HFR60[KU72=d0]4E$*WrSC\:_k<4hT"PT@Fg4ZA0R#A!6@oD9qHDE!2YYdaq8:=h6W8SZlL>]UWq&c;@=?t
%'u[6BmnWHEd%/=eDV?akZsYF!qSJl6U-Q0NTge3ecLVMu647%@<[7)8.$Wbnl>;@oq?]d`8RKsMJ6)s+Ma;Ufbi&CR^tc[ca7WfR
%LQhTgIu&T&RJ=X%Cms`_1gBR0Oi6<@-spjH]aS6g?%X:@B?\)<jH$f>`X>U.2<&*[U1Q/m.6WfN^kp\oQ"s4>7]*bA'k7thn+W:;
%EMVX_b=ap/8[Ia5<DM$::\c/]T:USGl/Y2*f@p.UE`BYUdXe$i6PX#M0!15j/$>p8D7&fQN$"-8:WncbG;$m?M#5SJc#8]k[,%nE
%=o3YR!fL7&5X#U2;'^DD-T"9do`UF^WYdn=W01nK?\*RHWE)@<f+HN5iS,J6JlUgc_D.sU^i3<=d;^\$"RCL4)<>ru\4L8T(1p'J
%m.027.unCj$HJHlB/"(u'Lq50_D1?tZ\@)2W!*2l^B/PXl^#U!YV8F,*6Qpq\Zc*/5aIk4)5)Ac9jifN^R#_cM8C2_-(V5q;c\DO
%_p40mC9DSHJ>1kE95"<odD?j$reS2J;ce[7Er>phY+2=`H`38+aJqnHPY=:T5@s8,#SPL<A7a)6cB&?V6rE]_3Re5]NcJXh+U1AZ
%EBb-i,qV>ra=;lJe=eB)K.N]fj*"Zog!X.,qr;j^E%G#:(/cUcjhC,2lh7I]R)=JO0?@krSZ#7/`(@s8YMQ]r$qlEpmjV)c\+mZf
%,pOl'eRJ\4QFZ`-ft0g(;>,R]U+'R?80e`n8&[O>6^'cIAa;pcFMZHFiSGu!2b%"h,I\>*S$J2<=]+2'7#%0O0-K-7iTKnjl@"#"
%WQcUs6Za(5/Gg#@<P&N6WflCu[2F_:e]AIM.+\B:m*i;J4Vp[M6_,Z*YZ1pl3fr`lLm;mP5CKDE37$uEHTWJYF2_.W.^g`de(UZ)
%('5'Xc)f_-WC"G`-M/5BPo:BG]XaRuD3OS>QIlML\3&"*m#]aIMN@K/N'i]_[o:Zg[l5c<pa'CrH;Q/!ehNSR9Yci5Z?+C8<gS&E
%ROjKS+?UfWN=^__68ZAb<DGp+/[CLDf!)/)hK^I`g)>eoYO\2Y`+8c74/"5KX!#nPm17#/0dH1?Gg,_Mgh#RtoJSf[S1GK^o1WZ>
%IKDAh_!XFNYFK7tB2j?l59e9,5hJ`?;a.SplU(5@mO-+jNhk4D3#aTG:igS<H@a.M<F1cE%N.$,T:-E+B>G4>e;6aO.[>.IM#DL[
%@Uaga<'^OOd>NW%>166-@\$(<\`2p<?m&u.?%r=`U9GON^>)XVrGa^?,1.Q)bY>o9+WXkC-r[9jB7l"=G+HL76j6s/BTW@ekKFge
%18&t?`=WC6BK=7)Go:ac7nB=[\V]!r9.45*B`0,\)YO,C\>J<"bh3'lEm+mm`eljorc/^!GDpP7H5"Kt^&cb%iZH6<OmFZk"@^rH
%',dejl1Mqe,O+7g7Si''5lGa20)iB,J2rF+OOl/n)(-A[6Z0h/@::6Q<I.C.44Ho%;=?cP3$6[:ZuI/&drW`lE=^Q?p3tr2U$=K=
%STf(DF/Ya,#8"C=JAPdb=gf+Q`"VAP'LGkE&!V>C(oo3hWhM?i;ake,g"oj_UGNJZ^n`=-Eh3G$4_8HkQAk.Qdr7L%UK^.Racd8k
%+0<RTgfKAcS\(bN1GZq/)Q'[.]Q7Iq+WEF'Gpkj5q4d7D![-_c7[Q.s"hWjXQU#kb6tRSS09aMONs--GEeu(%3W"G+*orkHc^J4&
%]#%(6!5l(r]4(`>DXH9P5"#&>!Y\&5D%s:G1('AX4m!IX_X;LMm?]#l3LmDI(Qin";DL4or0.cnrW9^J!D-jL!aNsnN8hKg;NWjD
%GNDm_s-p88>rhNDKIG%(=OMYB@(0'3;6E_m(Gf=)GQ,s0"_N?0?G18S[T9!J$sEZXg$k*!>WY/[nkW`ZgI;KJfRf]Qf/8d!I7mCT
%MVV[\;."\C+]doMJ;1b<A(fsm**;&0:h[lXe^8>@(f:dUg0X6OGMQ'kR")QYq.!1^<>^4GY$`EDK5nnUe`d\M!:\1hh2bjJ-q@CL
%KKdkh<S<ud.!$3S0QZ7HBepcc5b6)3mD2AYAXgpV^*V]@\AJG0d"o$[Nc#1L!q*P[s%GN7#`;t?8lkHGkTj;S>BE1q+=Pb#k-8et
%'p:9(mQuPBT._J?0t04.?*.<4AAdka4uGZNBBt+O4?l1ZjD`[(@H!J`]5.U:$!bgaMDe^1q#X`-`5u+HD)iV2WftZ0n/L]0(H%j2
%!UH*t&5$D>19<i&+(s'K(^lk3*-O1JJh]YNktPt19l\LHf1`0h?ED*]7=tSB#RKW*<?XNtAACER^I9G#ImUn<N"e7+,)Kfcp18rl
%!sBa/$NubH.#37&[Ka]*"g*@BS,iC/Os(NY,:h%e/o8[.A>is6%BF&X?c19+`+<7h()@8+X'4,\<6?(IRq(^6WK\AbD\VqLAM"6/
%M"PeIAOGDFCD%26!F*Gq]a4fEab:gEIo`f\"t(16I3a'G.le`;@]pb-O^maDm`:`Oa\]!h\Kk@*c7b@6CE"%eP)VJ\-7Xb'#WCa!
%@oRPG!<WEK0($*cY[N>^,Ar'Ge7KRU0Ce<r^egY`O<$YP=Gm'faQhgN@'FM21T/BZ`pi95VCXp!X+U8=,L,bB+WM`mYS4k&17%JA
%dncV`D)gWQ:r5V8MAA,FYXtf,51oCAl8@:mIi?UnjulGX#V\J:kannO0UC&Vi!$@L+C*jk&$BW+nA[JfGF.#%;kJkl4/[20q`-Nn
%iFf=6rNtMr?E!tKN,^K1MIEj?YflT'1iY)mS,)ofEs1&1^rL,;W7VZN\1>/l7pOc()VCg.HqGHf5=q@Z4Zr!:7?+9"[t@^pVgWBG
%=1\A/B7D+Br4?uZ09p2OFWj_$(PaLhkrOQZ@P9mk&NK-M$9-a_imZCT.EPPT)ou?X3S]>qPoQa+S8IEj&jH.pZ4`(>P@/D2=lS,P
%euV9JJRTXDh4&3lME#Z"^d5Z1=u.%ILn;f3YUM;8SK1Dgh4?O;(2uGe4%PHFCBq-"fb.Pag=-H4em&pbJQTf$/+K**n$gqF]oLHK
%V7YTFd*E1R8nMs@"`L,!?Orl;#]k0XK0[5[TETt@6g3LhM'd6W5es/YaBn'CTKQ$c7"D4!l:^aX=&Vo'%Q_)P=_%dNY,u/6.GFpD
%PD`G$_)]]@C"ug)e2]@jYKAD&6kob!j`#ah;.*9*Pl<BuFaI9:85kl(__2dh+pB\.N@nG^E;9[/;)DmfgV`/)5h^E:k96#nild.j
%^6^]<M6oP*_7j;W9,/<sZf$&0?5-NicA!lm8)]$hA_So?f%'XtTgM@6'!/gQM305;F?'bEP?Pno:m=o+p^rfmV\G.>6L[!Wpm5_m
%P]CA+NEI&Z@\b\()"L6pEFIVkRUFKa.<ZUH^E7CCpQqBDkALH@dH(gm`3]7i^Q&#6FZ`SL.hf@ln_ag9cl/i88HpGe]R\A,UNB=5
%Q6j:ULjNYK;.+R"Z`.!m6n\NVp1;!B/pP!PO)0oE9"0\g/XOk.6cGYu3#omB3&m)[R-VaZMmH`#P=n4@A-`8ajk>mjT]?gZFE*8R
%4%PtGZ&"#<erTC/*kDgH'W+e?PQq.ZMjP]/:RPrVaAd^1D:1X4SRA"/jIB>$%Wt3P,X3H$`>5PX#3@B4.+>;e9UU*_%+aj>Qu0l@
%i#:RFh,Sp06XO[MnEjZg7FP4@HAo_C\A!E_8uk]%h+-'l9io@dL`+mT$>;sn5[b(;!K:_J7$ZK!<?5H$;XVYLc/N^1qT<V,'D-MO
%bmLT<DH@"%AZoa15&bP6"/EI`%m\2#TiW1PIm2XE5l/>i6AXA2%9rg&r)fo)Z+4ZjZE5nt.Juk\Aq`XjR>P*#Uk.n[(oPhOp1i=)
%]]=nsYJFPS9:QYkYBRsM-jAO]SZYQh51t`t!Wu?N('mOljkBfUV6HDP@"Km2<cVLs`JSLHFi4r`,Z&HiVT;Z5:D$7(E"Kek8o+02
%i/tlr6V_FZJ8-hPmF-N@i5QK+^H/W"]W\<P5S8U_p21hDAkKms$6X50>934:M?5XcikIj/,b^52fnO'<$L@B0E@6mWg#5+J0VIZB
%:.Bn"Ll4T<qa+;r^XcdWJ%_n-p+b3jX!Lqm^/^%lkqSAF&EZh\qCJ>gD64g/BF(liKfIEfAR\,Q3]d*_quq0E#cpF);*']pfI"Tc
%MM%k);ZJ<:Qq>g6_ePXXZj<X99Pim*jfAMl2c/%2c\[7*Rk_tS0l[53rG^#%=-9B1l2i%e%<`f%4CrMAgin9igqeZS%:'\)3]Nt_
%Xi[R?.R(rlAn,A]"Ft68gJ_*KP6Vd6$egobbl`t0(20U\-;Uls?_Uu/YO"OW&o'aW'9d-V0<D/,oNiA5dfq,oYSHs<W!)k'W]HT/
%7#-SYLPWsHPY)\!(9"t?0']t6I+aBci2o/LDlHA!UEPLh<U*e/M1Y6V=q`(pZNfOuH1M`fLt=cX`,;p!)L05t0&tN@2)QFd/+EtJ
%&M"i9qD%h'PM;ZDENL_cMH6JQU,_mo`;RIeMlR)ug^+1F51p//'?@!<p'AWY(n.S^N!X4Pim8KU`<s72iF=q^9I\Fo-15t,H&0#h
%q=RWYlia;'PmnQ,32g,e?Wk=NOXHDYddC.6]rng-.OM+CcT>:-ZFH(;LR3A`rA/fukHC>m@d-39.cMrNp'Q_@'t4@$]gTi&2HR@Z
%=LST2#n8a2/=;+?K"nocC>9Z'Git0!K-%"h':T-1l:j'6rbJ\XESnH`W`i)rI`@ShPZK0i<J0+uP7cZp[q"!-kKTsZU.gRimkC[]
%fg%2%lcKg:D$k.6!JZKGqLHK8j+m38V*dl/:g$1C0cAf`93r^'bX.2P$,])E]!C$O6ZsHO/Qn_)U^t)XEVg;s[`"(K)<KCX>naTa
%T]E\,CFC%ao'+b!]C/^tcI/O$3T*es]?%Fk4#HAF1@n.a7-L$J2Q)#[FI\LK#R^3gD@mS[:+9"j0.L[-LZY,l)l#<Q'q@dY:g.:/
%.,PYWSdZ;.>oq%n/5]=^YHDVTckHJN+t9NiCV-gI7#q<_Q"Ve\I;N\*!c6ee&LE&1=k#=LC=PEA&4O(&>*dkf=EOTD_)0\9G->\8
%*HhiQKV!Y=$D=69H7Lj@I;-CnGb_sehLAm_efa6bp8nT^)I?)O$``tMn:PP51B(M:n&i%0ie4X^eRBE;WtP$.S_\<94cu.$<fOs3
%a\M6J[l]VDh#)uV8/:doWQ375KUd>65(%^"=904SH'\eC&eKr^N\W0r.P5F&6DI!Z@l7YU^ru7+Cqh?m1#H9ffm;/siU.:@8l%$W
%;$fBcS[-1(=A.XIfA/9'E>;q+NDt;iD@TFZ12TbfJW68Bb*r/*pfd&#fMr8ZGYdi]7j/o#-Z#dpn-(S$Z#bW>.6#:'T^$'LL?k>=
%FH\J)2<XG3Qbq'u!Gdi\(*m'BV0h*']K?t"i<cTETH6i5&8aXlX-6iF$sFZ4VWh*R**=umN,TZ=4$V/fW0h)R`"PG)QII*/$feV?
%8;aGD19tW_ONEX29$5]BN?ZjfSt.?ONH7JB@)/T[3&uI9<WSq&aI;FIGf_ia77>pd_uHM8ERp83mHh[W!>JI`I#/Fb3>+5$p9j=5
%MO$t4m)oSFLd4iS,.`XZW[oh:MX)(0/Hi4DDF(\O53)^;(46O9bj?&t[CR67+CVE&P=Z!G@Z#-C.06ZTKNDMTqYTTdnFL#'K\C$F
%pN.,V*7u'DSi"SICIE[!@3Y3Of86eFP(oK\`bfkN:KA_M+h=.&'Mq).6IXPl[/*T&dTPp/9fbpu/-U1&!+sb1D)!>uF&W.^-X>9i
%Lsf[rlk`QS3O5S$#bt*Q+J%3P#G^XDN`'.6ZKX[cDBHineU"7U8pY%kg%o\1`4\.8WlrVtTjR%q5<n!+L.*F,*/^_R0C/qig+mkt
%i/p+r%hP4F!9mYTrpZB1PmqE:pm#]ph%1h-*r#*X_E_\QNuGM%qa5GC,MQJtHhrGi$runZ0SR\IjQZuY<kHAIlBh;=<ZL:>auMjs
%074_b:fDV^OJT1jX/bSpXge&VbO>nl4LFa;i0p+-bQ*YPDP<g:6:Mq1a_"eXP^m?.4P#'VrC5Om+ik7?5rr]$,gl3Ke1ZoWm3J#1
%?EjQVA2^&NK"$"X?$`Bm3GT=SYq-I@a<Dab<)Haj4#rh)(34C@)lEN#\t"#/LUS!k(:n?F*dP^4Yfp\;_r4,)&Z]VFS/'<c0/lSU
%NNn$-+E#]+F%SllXghTUT-O$5<jcV6#Cs`7%f$K3'+/3;oodqNR$:jbPC[&uF+A8Nm3?B0_(ASHHX<=B9`5UBE#e)YqCQ3oe0$&\
%4o!@^aD2DJ4NF[qpOa$:i.EZubkp^Ko^cGg<+!k*`-$'<..aNHH2@nXDfB4-;R=1hV0u*I_BWPP8PF>siZ)VJa<bM;0Rc'UiHAqK
%k);[+CMcJP02])p']Dfrn=BJd!lI_99tlDq)Dn96=V#37+?\ed6P\RY.2dD*QHU*`;/le*<'V2@,E\SD9.<ern@tHdBNJh*dJi2F
%U<0&roH?N-U.:Y?a2lC%Ee%Z9?3=;S<IHkN3QXYon_r$&^V?A"TDohh..>=b*Dm%OCJ[mSfk"Xf0U</$pNf\tdM+J.MlG6#^*aNf
%-tCVkOX0O.hHDL5a]]F-de`V%r1ZPK*+[<]G=%[f6iqPQRe:,!g,=@WWRe,c&,,*\K$tk#9phpP_1WBNghtSdl_9]8Wce$=["j*E
%hMP1D;s(Q#UrJl?e.8:Blhs.-(XgR$&%pQ9cub[>^msa%j,@B.9BIK?j#5).DBCmpfas45Ib]YM'/lKtpp9k`Mbg_Qc53m-+ID:1
%S%_!"42bY1o^3j@bd^"0CRakQ3$C/TRLAd*D>AcI(1CLFQ>4%*A=[].VS)2SQ1.D0=I5n436/Fj42\d9E::!^iQm#J!$-u^q%?lR
%267El6O&I1H:'*e*"Wm.CoSZEkor;lpK8n*.Mj\<)Vm9\Zt3lh.<9tZ9"HO%SS6*M#"DC"(K2tU7YDeqBG[mRi-A.[a3*]kgEbM1
%>prZXk9OR]PE1;)VCX?jSG5-J\r!R]kG5V9W6<]^8lSV2>DAR9l2ucQ%\[:.itHL\>YFF"X#^C"7k%SK1@`OZ4WlQYL0C[HT:9W3
%4I*e;rolscQXS?JYF$N!dS3lE&)S_Q%Y,1`"X!/EKT[4lX/(Hupg=\XMK'jZmdV\[(P:ul<5\)+E'>s9[DohZ"fCac%@:#X]G'u%
%RW2E#nF!#7GdZDb?SB;M@IjnKQJ9b7eLe5-+9^8HlH^/s*`PlG$tY8``-(I+REC09Ct6Y.8O_J+!c7!];;X;(1WDjd%WToJf]E:%
%825NCE(t=3/'0egW(_@/!XT5-`$`l)2J@3E3&+%<H7-CeXA'dj6fj&.Z8.D2;#d$Wr47d4&S&/SVYAl^`$jW[i=04KS%$e('e"Nf
%)Id^'aUm^!X)/(@^)6P;f9>ar?U>n5kIr<ZhJNNGgqON2M!8'>,ZTqdd)&P\Sn,\7[7+5.H<(<n+oo;VXlrZ7TFKXA6ESFIJ8Y2@
%j(>uF\j)B$r0GEtO(i46AXNqBOgVQfKNh7h+C9"+3TV$d4r$+I)U='#qXIr<nh6""6&ARN?YJ7ck4nAOnpR2m*O]su7$oefW8%=A
%G+T&kCHC@>>.QB:Zd"9%etOlAY_fF("&oTXCNT/Kp-pVHN!':d'BF_S[cZg[b.N@5bUTCBEFgN8luZTaN4Ws]O`EK7/B0Aq/2R&u
%nN]Qr,gWlQ^]if/rMYT[YO1?lU,^leL<iFI<)T!Vlt[*-)gU%-#QP`!#/E^u3(qI6aT<OZj44#*EXi'H2]eKEh+VE/Q9jUXTP'$&
%6a&?kej-fI2Ph`d5*Ciro=bot`18)j$GX`OS4i(VU"e4q$j57fY$rMH?i9]rlZ`1,7T,44UIJ"36>e;Mkc#37bVl0\-8-%`N1*)3
%-$tkV+=#Y`Qpsa_'/'Z$/Fpp2h:pe:'54QPZV;bZ7A`sIDQbhAC5<&UhPAG%nj5B'Yeo+Y-Zs:bLfES]O4b<2@cJk&[S+7[gg5)F
%-R"rgbUF.lfBqq5'aE)5^r&r,PH63SN&S?44aLs]&DW9fJ0dC>i!QaC`,4VlgfHs4Qn8-nYeRrENA"ZKJKHZ1h,N;/l4ScIQ7O9!
%)]gU)=IB1O"S(B<A>1;n;^eu+<=/V<MCbTMUjt$S!5N8;@'^U=eD\E3aG:kIMA;S<)52V?.kkJrVI7_&m\tssR"b\-p+U,;Lo&;E
%RE_X)97UhP\SEJ:bACf-I$.B"0nN/$PS9lXhi?PYQCeF:DD-5.(c[Vr5/but^pYDBC(S[HP.b('A!8ndTJnX<kBL/jQs8MnN^n[Z
%7Z"r.D(#gD9^8TF)J_*EJFpH7NX7,B)hr!Q]r$`8m#OglV4!+S:[7Xe<6CFG9B/K84!>GQ2f]O[+Y2(t,+K)Q@uCX0F\'7(%HF6p
%5uGlm<VM8MX6olY,5`(^N`mD?GmQ9Y>C/+9Yp^27Ra!B1Q_TVC1+*TM)RgcpFQ[YP&AcXX*J:+YHW$5C&.RJ9!1m9,rVlYY^4:cf
%%46FeAnl-T[m`RQdP.Gjjt?!H?kfc=ZT>R3Ca]2.dI]\P2i2QTX'6%&im!sOAD+\]8DlK?pY^]Y[]?@`hC.V3'\GhfmOBnP#oqQ9
%X0.`AO<Kea93]"Q+cUa#=W\iQ4-Qit!!A)cBTMLhJM`@4&lH6<O`'i;h;psAT<\GcEtEo'@5h%K[/DjaTb0iNW^_!J1X"fT<Bu5Y
%[+O<TGr=mUY:&?<=@0*4B0)_4(s[f83lpBs6R;IW,f7_`n4or^Q2i:^Pbl`<X6dkL=Jc?JC7<7uah2W6"jj3-[V/lB/7\.JhC/)U
%fuhM:Hl_c@e%CA^nld'LNL1!UBr8K$NCM:5,<f;)`lkP4]17!i-,*<sru6W8'QP:J)89G7:;k_aXU"72(6:il'?p0`k_!JiZ'?0s
%Y;HD6PYiel3h\bcaP[sf'(IBY+-6<rbLu[d0-N<LL)\hU$5TV3,pFK(Jaj/Q>cct?NcN5fLkfp(3pLpt;>df`gOUkk.d!-R[0":I
%Vc<^6B6B-n=24_5qN\dFJHYMtX>utT+:cU\@M?>uS!.[pTdcbS3t1t-U+Aqgl00\4*->k96V+(T*'dDgqstZ(Kr1U=$"M_rJK<`2
%S)mD_F?Ptt/6;n/M1QO3+>X#scOiZ&EV(6W5l%1Q43NH.HsNDH?D\F_Tpo0MN3>CsaL_8mpp3sb.9V1.d*RHRFaKd$i7)%0Rb=Nu
%6CKkJ6tY#0'VRu3o6\Rq2N^Ob3Mk:'lErhJkln,2WM[gl,d`('YKgg_pmIp=W^%;NE>p&qn.752YoaR_*&V%Xnj#.g,%SE&XPL5l
%;.F?^^k)/>B9=b<caNNL[h-2#LpQ-MqJbgV*"WcSd3M1Bo@7;sJ%Z&9r]<WPnq&Y`Xo@87r\ii\BfCYjT[$Q("7$`N?@.AW.^__1
%&9S^=]Oe.#i*P8;Z/mUsir:,+07Lq'DD-Y1RPX5$5bQjj5TE0k!d`M5+pY\aEs$s?CD5:%E[rA*C]q>=-g8V#S>+j^4#=NTT9IJM
%_e[)K*=q?EQ<T2lEFPBMA&d-/k40EZ1.R;RhRC!_Ps7QZ6EA=urH#m@HuYL0U8s)M:%(\(1q!!=+M53P"@"`FdRUYu5$)r39Q\+u
%3rrb.[rAOL!MdT-nS'&a^9&0%!C3eUjRO+\S5s_&WV<(3>V7e`"6PW#li@`oH<(b5.+fPF7?$6.P@>P$Z'[M.<$2<tA+0Y`Q!I]&
%5@038T37jpaMuq"=//5KI=KsQO\Wag``/(>DYppFDU^1Yn=p?s5+hB/eM10'\(q9/A)C'&+:>R?AC]GlBXZZ(QsLs],*u+eWrA#F
%N#U%f8O'd&75LHPWf>&)QKdXC"[-0i[35CJaiH+Vi%?JZ`Z90]VoG+u$1/NR5X/d2eVEcJp:;;99%teJ/f!GOdo-6K<4hL4FeDfC
%4/:n1=#8hI#,;SO]A!1i]=/5l!H#DON9]$mfVV,GjVH0&:Bi77^;HnP2BIPfj<HAdSolbL>nrW.oMHQZpNRaf,Ein(iEAJ._9"a<
%FIMq3FS+UV#d->6ULeZAGN74WM/'l^U*:(SY<D43%p.fgB3+8`YdnG[O^5M'MC82ROJcja%$hq@'c$b[)UM`g2.Xnk]aEQ_kZk5V
%kFHN^[4^]fI]Z"+(Ciu<i">CbI,u.#ni^(a'O3Fp+>"<b.\Gnj3;"6YJqE+D>'N0BGo%eF-QDO^4ti1.k(hktjXtEs7&9?Oe:"fO
%cX&InI,5;,UUp@-7Ok_3o0]narI3>sWa+=PVu<=cBlWMq>lu=[HA\WgTUQQZi0O/dl,P']bg3@O^@c7B.`q,(V3bJ*o;%PJI2aB`
%p,%UA,>t7uHLE![!m<)"ip*UN?J]>`;=ctGT^CGhQa\KMg>_*iACV5b*N$<giY*0T<2MD<X,3BEdp>^<`CEl>UVBumn"3a[s*JtA
%%sD.UnF-CtVp-!AqY[C"7Ik$O+I47aQbsRi;Hb]'UUc@g3tZX8=55ae8B-US5=W)#m(hjIP.SB@I/$LF-MZ=[.T"-MfYZPFrRYET
%k/6)(p!#.>q=e72s8K(frnDA*roGg5lSlTXrBJ56M(nTRa4FDlLTeJgDu]>(\FaTjAk_FSMa)[hh=&,Xh667sn?gC/qPgOq^UP2!
%I,(CHQi;@2',UYmhgP7F?iB,V?[lu3r:%P;rS;[)s6fpc?iT0aSc;-&V>F/_HZ`WkpL!mqRt(:T?iIA/MghH#a`m^^Du](6?_@AW
%qsLZL%tFJ+rV!]RhX*8:IK/d9o:(7-qTo"mq_n,bhu;GU^]2^#J+qbX^]3Gshu'C%qWc\Iqs(fNs&kCXs2#<Fdg,+6_tp9,`ZP36
%T>"/$n@h,*WSCkV5CM@;r8sWdrm1W6(!l]*^A?Yehu;YaM*H7+%pn@E2uSN8^AISA^AcsgrRJAaJ*+TAJ_j`+?e'\fRNp_APCJ&1
%oVM7A3lI]t(i?c^'hjm<S"Z,2&4`aa[o'LP7!jcM.S"LJ?38;1\r3IZ`;ON\GmjW]e35(g!P+<d*)<r!/7j_YX-=Qs<t:47/m.<H
%h11ZFb)<mF6rK3tHHM$^FC115@U`I5:r5(^PLPA6$XO:ec#K`5Ba^Fa5!.ghZPr&+G!mg>?YW!%SjDY0M3/1dcD3i(Om,-o]d\@?
%N9(Xi2m7X.C`K<0h-SW2DHG8Hcngn1D@R`0f_6MqV@iH$HTXbQ_>:(l:+f+l@4@&/,:g&c(_=b:!mnNL5''rEo;s@WC*'X6,?Cul
%c?Ha4>j;g$Y!SL9p"Ek\TKr6K_O[1U)56-8c.b[)-O7<Lf[OF$?J98?=Oa:oIA3$s.HibW:='_1(QoVB1b!CqR%g=_RoIOF@Sc#K
%..icefQN*D$1o(Y:#X;1N+BZp,?2#Jp-U?,5:uVnLNIT:fjR=f+FqDKaXJ#aX-.tCTO"r<7tu:+>aL2H]"8d]%!5=AH#=aq?mAD2
%`r>"(o_qeO;\;GlDLVrrn<[i6,[QsR6,aJ=le5=>!G80)l;cn^-ZKNn>ol7I8@@!7ea;Ftb%#>3/<Kfe7Dr8B7L*`3d-AluE*`$G
%?-ph=+Bu=Q#:lV[q'as'?;bh`^EuF?j>uTN.dS,26]3e1:ac#qF`Aq7<3oF"(LMXkqe*q1-V`X9`8#gen,*R;Z\Cb?Vr>]J`)OI9
%rY\"9"e\G[,'DU\$[&.u+F'aW"/3oTm0"qFVP]okeMbol[RttE5R#$d;[D;'R;2QF;h.;7F<j+[OKUhtQ*OQp7;=9M/DG>+RhqgK
%6BEEO%kf["H$9`W/9^5C2kWDnU6G'@#/QumbKd"e&?Nc&\Rp_*MF:d$1$Un.nS/ME-,01IFanWnE::!No1NC21t,D5Zd+n'2Z2=n
%peZhYJ+>fk*HoCTUpqFp<dESmXkqj[GKnq7j.fAM;Hbc2\5gRI2+^M?V+M%IG;Zk8"/$_26?-_)'u'r'U7T//l'Me)6BP`V95%2s
%.J7;u&VO&S:d,9p6dQ?)9KQ@b2pS5$7IjmfhHu>eQTWMpFk&nplCCU,d+Z4E`pQQl2i9tNC/OEJ&VQsTqZ)fg[E@e.PqQP`I$fd7
%k/j;J[]g,=9jCA<4GD(PVUNe/^coTO.b_ua56iNBFCX(!,2R)HI?Ca%dmF2_;/0^R=b0uEb)S4**RaVMn5bBWm,]q6IqEr>jQXr_
%NJpuQ[+,I>XSS*[TURMfMREZTG"&aB`AFQ[\!0spbZ-7+Ao)1(oMoZ[Yso?K5-bc;Qe?\AJ?9c>$MGrPMR6B<8=WA;H:=h99^^Yp
%0Aa,uc_+h4A@pVFE[n:0-O+a1efIm+64u'l@a=5A'Y$rE++<t^lN-g5k>t#9f@[R7rOIhP@]C#Ogqgg'C5ElbKjXsPC2Qm.L;\9G
%-"r/Mop1_&Rtn::-R"Xc1&f#[\O[MhAao%C^u9Jtb.?6-Xf7R\'P1#qE]T%J'a!VnRfsb_,1"HABHW,j6B@$SX%'.!>2iGY,UQCk
%]X$`'0Ad8Y-d#%,\2(N!Yqn\\H4LKF1rLU%I&"uH(*m>\Yu%)srUH&>^u5^Es5[tC+BtFtp;7Ge9"psoWV00tr1Y:L<c9jt1200b
%Ve6T;Oe<S^j<Ut\X$GE1$!s'*<n\/C\Pd_J@[c1]:B"TRFSc_[>VV+Q2(PN5&.6[XW'kPTH$[VDX`W"B_g2\/."g47IrDBi]%!J<
%N3m=NnR`*_d_oIrpc#T%!t1t[Y?XGf.rbFT52CM\a,g5O"aMV?kh)b^4NNF.UqlSo&ETHZVJgE)Io;N?W9)<-5(?1hGIXWf^I<GJ
%/^!s/;;T'8PSZd#0S]Sd@GVKLQ&L98QCZJUH3B93jp3SYriu_C':@S=Ib\Vj?;#trDJCf\L!huaY[g[I[1a:KVGXY!:eq>h)S'@?
%P^n43lSOa"geUX[9?%h;Wc0?UgSKZsgX>VuA^d'Hj"$MO[k;VSfEJFr3Rg\7kED],QN,M:GO54MR=fN(/Z,b6b\bAL_fP^A92p*l
%U7g$GAGhT_0"7t&V;3f=<MS<a6n&Z'QhV%,8'-3^<:o!>F92$rK^[U]N>2JlBB89&+WsuU!kR-!:c\8E>R]6ZG`V%/`o?APJq;Tg
%\2@+YLWhCXg7jnrG'-kMT1NFea-B4/C:X[\=bOoEaZ$\"P]tZ<@`:$=NFJVlr'P(L:Z#_`OaX^?qsHJ]*KjBqq@;kB14Qc:;,bmI
%T.ca7FIaQ,NBg3k=%(lH+>SpC#:42\gJcGm2d3:komRI-T)3ml2;e;fPaOamG&!,6WYKJYShV)o%,/W;dG6X9M\2T!*<FK5MfA0<
%6o?hR+AeFDE#r8sr92K=OWDBWP%pE%6"Bn:[?X\.*V.C"S$!MZlKfCQ%9f#a$_nC4LJ($@d$cH;Oeo/*?=K2$^:gZ]5H]-oX1&ps
%'8o>;rCP(%U.A]kXV\^6]4fCI&NVX\,JuoUZaWl,.cZe3G^lhNrd%*S#a1ZT>%]8tFZJ`(2Sb_WGRQW5OE_[4%TH`."bu$1dJ#Zb
%jU"j_/2Qo]/b!VMc5Zc';"#r)6o(VU@-o"e4MkKW$3R</<l[t%W:hJ]<r?k>osMYu@"%nfg_#LNoPCn4MYI7LCG;?p;1I'Zp*O8F
%5n7>%=dN#<9h\qb%>cj;ZqlggQ7W<*;R^.UQ"oSCQ"_Y\!a?gJ'Q7_A'$\>L'NV<%,+$siUTpt%RjV+uXKeFZQLLO=fIXk5,-_J7
%O-jKZm\O*T[,*?>J@MRjif"HIn:JebS`-Kf=_LsKP&O4fU<jjSU'(XTUOn.V.$jjTj"b,\ZF+2(GRa>1cQ\nrPG<d+F:'6a,Qbrc
%J<c's)Kk7jN5^EVM,LW<.$KQ!6CQ(-eb0I(Qc8>O&uo0a="[@C;sl8M6[bf:I`RDNKL6X#ph^q<E]h4T>dZK@E-\VDZ>'iBnWU\`
%]7lb"/ZPur()J>'F,>o14E/ZEbjeAaZo!lN7'$Iq=8a@u;K,<Ic4#eh>cb#SFr!fep'Ke7iK'2nrIo"*G\5MCAqISB^J.k9Op.Ar
%U8J\]Gkg=olG!lg=Y,QBqo=E*b`?N%3g<[<la.Rl%Ts,tX]an=U`ZL_Y^RPjH8,O4G?;u/TE?+;W+s&]SV?C%n_rb;OHhfPhP%^d
%AY;QUd^02a34m8q$rMmo@4Wrir'tqcoAVJk90+@#Nn(o#U/Xh'VEP-)!ib7JNsr;u$l*:sA!"oi]tWumXg(E9:5>TT/Zp'k-2O6<
%:BUa$f4e^mMdU[Cf%\p(.Jq.I2;6`h!RIUK2Y*6kG;ZVWRH!,jl)!JbXeZ9J/MKI/\$bnfP\I+3O1d>Ji-t8/?fLR5-I3S>Fjrb[
%b&<o")8`Ik"Z$-7jsLrjSk*Pean.&s<4hm"2T;(j4j/8/r]DdAMU_QoXk#'F71jr]l,B!Cdbqo0-G#/_[Y$9sa-a7h=%r(;.Tuq`
%`FkoO_^)F5SV!"lZ0&d[G3UNPM@`.'EF^1Tk6fo5\EBna81>Un'XpH*-\[Q"<PO_k`,>%r/5)9A;=Q4B7udD+1PoBkefBo>TYoH!
%WWtBKc'eb*hqUTTMLJgF%Ks+RR,GFhrZSVer((\OX;s\fJfMD&d!NmD.tMqX'1Q5DrmkP?;ca$^15b>@?es5Q>Euo]AU&KW\4TUa
%2rbcJ5[:^n1r%,maT?jK]9fureV4plAj^9ASPupb+M2bHp5I;hh:1Au4K[L4?/(Mh>09dDEPp@ge%J7VH#=D%m]f$`\RrNVLRMVl
%kO;W7mFO_39@&?A/9)^4f8sT_dj2F9[?b>"m2RKO(>Y*r?[I757]j<^`[\\Z=Vmg+J98Fbcp$`<%8=5*9TOWb#I,:)EUWr&5l2B'
%=tMq3)#t]<\3"FC0'0,)&Zn9AN)!0@N!QbDM>Pm2,m^::M?-m\:jZc8id#=p_LgI9]``+a%=RqL>LH>%a+]qq47np8lXQV5c>cH7
%g*_oj?#9qU-`3%oPE2!>J<rp>Wc+eLWc]q^A^qP*%"^?aPUDe(1f9mqYd<'^Fe'gO@Ytp(OR>-G^ZpY]h+.^<#q^:=Wd"ueSX18"
%;2XO,jD!$]lM6d)buWB;;`Rn+Gom.MPLXmfn]Eb/WF:n5)ei7L818fjKL#A1mbje4DG7QBs0UCXHI]%\VQ1\il/;WVDFG2KG$*^+
%'h0AdPC=XK/u/$Y[efl:'E3o58O+hk3^PEZApVfKQA7P<"jNP@A4ZIUUr[9YaIp+-D+F[K!_%*P,Lds,FS[;gN/F(!lA3dY"['EQ
%fEh.i<5&2`d>oCm/k]0/,sZOfd^!ma<:Eu>Ta@aM8m(d5WhPPV>@-Tf(Vch^'J+hglpr65D/i+Fe!i'+9d[-k4b+YAft#O)-J^"H
%,<26]\;(X_!MD+$,gp=jqPtoEU!1+6+P0D`=,$=('o9H5[gO"Z^!"OA#RHg8jJCD!OF/"f^KT,c[)OR,\((:<a-'nVf\j1#X"D^&
%7?t%0')Y;f0k!C@NNd`b4pk9`;M%I5,dVl/;rac%&EM!sB[4oVl4^'^3X%k$k0L3-ZbotCq8Vn23%?5OWs;(MDElUq@aVncTh$T%
%dbWY%)DD:K1e!'3oZS-_cnb`ZAas<s'W*,"O^X<qYfoa:fcO.F;358-7*&ON:`TA!ZC8(kRnIiiB0iO2Wbt#8;q5_glP/MV8?h2%
%`8WCO]Z?tMWjVIP:(_KN&Q%]^47u7.UZp:'Le90>cETLLcZiXk'qE&nW!Yf5F(qIbTC(Pd\rn;L4QEkZ]=T^:0aG.H"cNbRAYo/r
%FfF/eq!6"Y'"r9Q;*D,;@=XJ;644SLg`qD(W.ZVQiAWpg3,W]0W*<o92M+B(`*Vjc>Fr#d!QZ62aY[Er-76LhEEh17l#g]@C_0T2
%jENCs/cnE#\B_L\c1.B+:2oq%D@0Qhm"l]f86RD"mjb!"Om_Ysl4[`"FHC"Te'pj\r.bCS4:FuaDUG?]m?-?jgD:O!+;PC\'Z#0m
%9:#'U"5<GgB"?1(!dj&$qp<,%NkGL0AFgA-%R*E]m(&?h7=Jdcq_[>`>-YM`Z`*,X=52YtQE7*Q*/!+FFPD(On(rB["g-tU28/U<
%2elF066\$b7O[5B*#T@2*jRXV0Fjo?.PXDfO&/V07R@On$T73LG)H.)7$sq26c^1@NXPEXJ2?pRLk`eGkfQA>>u)HR>b0(C:[uW7
%l%]91<.Eg1Sg-LsI@Ht"oS]Y0>&iU7/%@2Xh1bdeH*t!!_!UeP6ZuDm7ni,2LI]%@emqgR`A%5?^;u).=uHnB'-b=jfMLj`.ePA=
%,6o+aqpq%%0[>gB?nG@(8X>NO9Wbj<XFB]hl3Las>nm0eTJ"2_"L6&QoG&J.$s)SWe^BZ<P9[ReI&"'-*30P-lM[;%ecL]*_j=A.
%e@LeWMtHWE-GWFWf_Ds)arcH>)E-/Rd``nmP+2"-PI:Wa4TR4>blIGPacHogI9X^m_!58NaH29f@%`D/\FGjPL-9H)3E$H27sEaQ
%1J-spcCiHI3M*HY,Xo"6a;Xh/<A6Db[C\.KgV#1tOqMI/0'OcC-jS^Q(?.HWR__9HU/sgmbBNX^=GD,RY+-dJ1;YT=$.k\\B<)_6
%-C/CA?b'\32OXm7+f";;`pXl/+inLCHrmL)LNK6oOe^6D(e3;&AEj3Wl3K^KdHuY1N>aMt13B75"ku%.UVWpS-J2DJ.k/&6#^GQR
%='XENRB1AFfmTb1cE<k[O">Fo"6MJV1;jADN*!Z\b4Ds<M50iTr!kJZg)[S<f1.@tKqD)gbs.eu1o]<#1Kmj-OZ)c2C=MX%WR/HD
%^n_l/2ZoOkAjHs#SCYkVrh*4-"UN6A22#J"(BCR#N45W?"SGU>^5[lW2Q:Y%RcuGOLq+_YKH?Ycp05j/ff2F=]ZdMU&;Wp/HWFHE
%J53Y^f!n\\GSH"-?r*;N"mt2k'Y6sGWjo[-3/>V`Ml=]7mPGEV[/%jT2CREsDo8l#.)roMc[AMK@Ttp"\W^mnN4dBZ8_p[S?3lU#
%H?\d(7-E#/1J61FU9-uNqB3WeX'C*aR>Pf9pO;8I4g.H#kn[Z?6IZ>uEq(iY(<`Ik*LTW-NckiJ*nM>Rlk*S*Q:ug$NpuJ^HW4I1
%i9^fj+6Xf&\o`7?r#-CG_#H-"A\f_Omb\:CfALbU?'c,"('+Kt2CI%#\B#RWkSe1+@o[gCZU`=Jj>gRU\DIN27t"ZgPP<"kaSiB*
%Lp_W)@_TFL`]Fb9jl55(d.bZM*5&a1s&L/',,6!%fmJrL%+!"s@2RRc]i1+fNfHr\%/mlDs09o>TVdPreB[iDcXjGn`=7GR8J5c]
%EkD,>R^FL\"D_XbJP'\I$?RD0(P!bd&m9YBKkOPTVk0Q/:5oLWG2Eg,C?Q.Q=4n$P??'n,Ni5B_8QRfk-rGLpmWp34;m!E8<`)]"
%La@Q+omFF)ilMqYP1T:rf?8dE^3`MYQ<JZSBrT$bVB3[0\>=IC)+:_aC)Yj:`!&iPUu@=2j_62g<jO#Va6t2r2F9Cn<Bo>'frP5\
%f.)8K8BQmun*Eq3n#a<M]N2j4dfWEEk+?86LKH;=G*"dZ8HXoUk>ui<gS'3aq&"u83`d\T%<dF_34kI5&A5EWemuq#W-`38*S2[M
%YbqNp9cA#^&7r'3>m=B$AeM+plL"&_^sMRr7F546W'gQe$67[*<Wq6EOW,-AV$*t8Tu`a:L_8<t;CF/^mWkZN,>u)q^otl`_Vlk-
%;.MQ(q!SjhDp5D2PflbH1=Ae-CJ2.T-E6[5h\UNlb:q&]G_JEqfAqR(So&BdEpPZ=MT<c/pIOY(*mQdFI["i%'64=\.TSDp3-%h8
%@0_kT!Wj#%6YRP"o]^6AjdJ0UZQbAIXDtQcco>SUCe"n!a9VYL;a]JMaVqRF4(O%?P^Yk,BY.`N>M3>6f\K]$@.Tf?C1Cned7uGN
%5+Va!?Ej^/P72;L>pX&s[%olB1ARfYH%eop3$0@u=/T[I*BBBq)*M@WB4*_ll4/`u"b'#cnf"8WP]Y)MY3h^42mC8U;!/3E?b]%(
%q!idP'4?D%*&u@;+kp46\Xq_K<Q2sokr)bf+k0&f@6Jn>PF-5Zn&soJTtX)me&'q<GA;2PE$;kiB\=:;n.ESfAD(/?cg/_JQhB7r
%4?`s%"\1Mp=/Si$j@)k[?/CWKg+!iW,tMW^QOm3sO5W=Q!2NP!+tK.tmV9b[8Cc6-e*LV4aDD&.M@AFE@AbLEfP)$t%-%J)[:0jL
%ciq#FjZeuYdGa^iE5^kI+9:Y5/=\[IrGm2#g"(df&e]*0X\^J&a=4*u[*n2='e3\uE2&f04@af.-ejcGD,.QP7_sqfKgG,pd7^X9
%oEaFcXHN0J.P]k)(ga)kPTX[?cQkr\aV5=fOK'HFH/I>a\J/i?<Kis]/8UK$7n@UD:&qQ0?K2Jo^?u5:]%?JX_?Td=BM[\G!FBu:
%DJD8qM@uIP'2I1j<2(TMn0;_57]A-G6]:G4D&:="d75J_'NK8/[rc7076=^rb7CbG$*+,)'g(KJ3&<EU?f1sMM@pSUL\6&Afr#1X
%DYiB#,ZSDNX%F+5^1]F.mrWbg5-ogA;ITB?dk:uMg=2>m[cP2pU.RibTGa`gpcNc)W/_;a;4IR`$!?>gPNlVqo:EGlOjU=rFJ-u<
%:+MN`XcOe^TqXWGM#:LIqcI`*&_A$V5BQ%#(ZcA)^lbT]I[F-o399uq#`MGnL_5r0mFt((WDP"(OL^N&JIAgZ$f?Qn:9&rDr3;P#
%;<F_;\#o_3d#DMB?o\u=_)Q.3[gKII)%6-il`)up8N/>mZ654:_0=H#EeCi[N+'U`K6_cr5E']@%32Zb4*$=.PFthgR@irnnO/Kg
%DB\NO0>orO7llnoic7($-uG`'N4FI?/Z#B?MnEm8H6`;6?;8?>=<%M4ngn[6h%@-#_,)H0B@Hfl751He+rknY&R(jNW*$\X-A!qt
%`7Ab3$s/r)$Mn7iHFY8dqKmj4IUaYD,;hcKG&%%83":!16D/=:cHoPTGG'SPPM!2#aMYnrj[\jVderC;rdB6bW8ioA/.1Jq9])YJ
%`^YL,i#I+Unr%]ZWS?'?%BD[<1<@[TN#UF^%7X6B4NR(<&1*56*pe"Hc;8F$DJhmYK2e%pDS8(l<:;f#PRshi#Y9-VO\nb``&m:o
%8HUm<$?>L=oc$3NX[`H7^_6M]PL]kph=A;3nd'0#%l\K,CZ%8Ib];[t,cp=d($[7<9ea7qgp[?#O;^):fDpEd,\"$FkY"II,-jTX
%ih9Io4/]qMHaLt-msWQo<+pmF<le2'Vnq:+58'n;VIL9=0846'(;$KgC=-5ZBVWb3>"4=lST4bugm)ug%2]Rp\%#3.+4c?FLlZP"
%:#<M8=>/Lt0G:"f'p(hLQ\U1hh6;S`a'n\<,!9/^-7O63!RDm0=Vl%s+IC2%LfUUKXN@E_B#1-m[hrC1Q'XgTFi$HiD$rJ6cE!;b
%o"'7</(n"HG%9Pk3EVFn]It/RQsO&f\FdTg,eSM9<aE;;:5`WaK/T'_#%+WWE.OML]Hp]!`n(W`5'L][JZ(sLQ?+F)cgb.3Uesd%
%9,S6^gW9W&)n6,ee1,R4Ap0pumY'V\QP!iUj8bOJM@#IJhBfZ4ZD/>E:UmgLi8c;i.VW:@<Ai^heO#?"=p;c(@F#.FrpYn)WaT\c
%V_&F*;l&$[e3YM[:_gL>Dble$;KOjkjI2hpGU^g<0E,&1PE`f$@Q:usHfXH!3$VJNp"_$,+@^C)(k`M&2q/HcSRs'P0c&>*QXOn`
%\n(V;ObQQ4/i$`M!9#E7D/%`q6M3hI(m\EJ4/(`L@si*Io>9YKF?N,ok<s/fMQ^f`hn-Qj9st$<8!\RH8=&=Y@>>aKWO]Va\LRRe
%%h$ZfT>%ulfjX7D.Toe8IL\`Dgs_sK*tH:0l:eKa^!akX>(rTtLAe@tILXsPLqdVI!t8[HMCTE!4n"M8.cGrn.:-seU2AMf<7`qd
%N=4*as&Rq[!4VrTC\VIO,/\%>%'YH@,tg:O4<^K_\foCpN(]a=0=!q5k'8,]:mQ,G7p(Gc&k]&<\[R/Jk\\M^DWqHr#pW=H5cQ@S
%STe11W>:2UK\li%\qS&NQ1NtW!,u_/L)A8%Js*.EW1jpC8FfX]#Q8$.\[:c4ZIc0A^,!g:)@L3qkRQk$O@(27Yi=fgJ.:k'+GQda
%I2ar<"][8YWe9>L-k=H[5fui!$>9VX^@q`Zi)CLGBZQFX1(f2S$E?pX:E]=2,Yr^>>m#.4W#a#%EH^U[#b(Oe'FF*#CEn]46@<0u
%-_8.=ShS9^Cs,+)U>.Qd]rDT&6:)2cX>m#.'KKQTjaDo8QLZdWFC-!H6PF6;p:<i#R3><BeO&hFUOFCikh4.AT_D?3MNKY)*;gBM
%UufQ%Wotf@W0_fiF2Vt20>Vg_of3U_]WS8<Z9M#7Y28g)F[n3Z*ugfEXbI'<BHBR,VJ)N6Gb+a"hGIK[NelepjZL,PZE+\LWTd`]
%>"V8;J4oE]aGS@#?p8m_HD_@RH4jBDE7?f3`S#[ul<9BeI69*32skmGPdEt`(Fp@1QZ#gf$lW/NSJZ<E/XaUB5KP4Qh!-7?63IXm
%".GTgKQ("DYhYN2?CBQ%fYR+D`bnqY$>%+G/mFICs*?=WlfH\MbaCMEh%Z:S"0q.p3`J4k3t&u1:kDZ`A+[/GL(kXi*;kjHJsJi5
%B4*'hcBm7P.Quc+\u7mteA%Q]S7>2D*mfm#K@_DMH(Tikpql%`%&gAd4<]!:R!7Q3q^)i,`prcf::lW7c6Y:Y/k)Rj=H=M0XLVfq
%&8;_(itX3&QEB5]::%,Z/oY^KWNRFLf`hR2^cs0u_2E"3-k4k/3^Om2*&9UrQ^dMq[/@MFN1M"LRO_3,cp12/(AZt*'Paf@#u+[[
%^pBK95ZqtAT7BL:AN(2.I<aQOJQl0O6uttNpU7E&][`Za<Y2iVU-C8Hq#Tumi(@Y)QYJQIjc*k0fN#m9TlAU.[Nth#Sj>Ic8dTcY
%675X^<pO%7<>ES?\sdSh=u$d]5P&"5:JU@$DL.n9MWt+NM$gltbTSmJnD=*F]1BT2kMuIIZmG=IOiC^V"iA7%:M"m6$S.uR8\)#)
%DSmU&SaRunU#cGL?8ASaGACQ^@%qqM`>/c2U..T.Hu)aEMeS+$4M-IkKk7@0gI'rLViomg740^2ItuiKM6n%g/:?HT]_c`N4O/qO
%,Jgg7NW$@eS]_+Mmrou)V6/h!9(sL,<o8Yh/d#ClDJ(nQ9I1ETfEerI6T8!P)^eUGV#)2[U?&G>(-(N:FN<[VU[u=$A^efn\Y0dm
%rq!qN)^^ea(1>L(JcPhkX.#Lk(!,\LeNB?aQ*AJ/c#\3J&a&nbk>o$/-iU(`3G%3eN0E-OjBq%#Mo?*.V:F`8OV>uK=&"f#9_m?d
%e*iQE](Zc%<Bhf)\fj*iacaq/pmp4)QZIO7.0;IU9Ek$dKuo"S3NTBLl<o9kWF!J#=2q=MJQ-j)iQi)RCJ:(*TEDY<g1pIhF6!/!
%3b_Ua^r%u*F7.:Gl%FraEQE^rf3RB[^BVcN9$:W1oQHRB"`UWO$p?qSeIB\aWF0\%7t"]PnLJR'[lZa4<6E8VLb[oPW/QtGO"]fG
%bVH+jCGh`#Y=u5>Tj-n[_]QYuNAB+fT!QP7+dHP'.]rLhfE#p]'644V2(<USEQe*ZF[S+^#EpdOB,OK>j'p3q/Ne?9=fYO<*[Xb!
%2Q!M0F^_:YaYfF9h?W-,_gp*Q<KSS3q4WL`h'JM0_uaF3kF3`uAnR)$f1T'NesYtb.77m-W0FnqED._]NI!pX>INQ*VV1rR'e+on
%514K)Ze.T%MJRli1S"RNgVj7dYLK_<J6,^Il=^>KeXeB#$`A4M0Ws6o5NZD(_E%A+qHHm`NIVAe\-CSn0V"m`k#@rb=?4N'f21<9
%@G,hJ(.L\%+dp)i6?Vgb-`ec-SeVQf@DPM&dku9ec$suiZL:Cbb"0R5L<IeuW%^N(0PVthX"W;f`teQ(r/::G/$ft'X4t"L41.t"
%=+0#&XWClm9"C"2(:1>f0S%K$?48sS2.r/i$?Aie<EQB!\h6@<'EgM[fR;gpH<`K(c$L!Un*u(qj@4g4I"jo;iKu)cR]sm6"Q&pF
%+OKrdjVJUA!^tg\*WTp3V)ZK'gl<^34aQ!N0Hf\fZdMjU=k33tGh\H"+E3"bEDmq`CX4A@,nuI&S5Lg,D*@BV]=V:T"0SBp&AB<s
%>9,GV"+^KW;QZ.S?s!n)9%Ej'8S^?D$erp9ORCme+L0'u.D7ZVQ[$<#Jo=TB@)U,C&lp)!kN@;VLt+l`a;4Ho4U/!G*2-j/)V(m]
%A"Y&kmP&NPRto^#`OhV%OBM&kL#5.U":>2S`1(dRf[E%V+c0(5(06n1hehl,8g\FLn3G).28-<rY^BZhKHOMp/(A/b)2[.F1#O00
%.Z$]@$Ps7lW^a?i;F!k%mX3&Or!s.M.`,o4jM\/.pg-t9Ac'NP+-lS+?kg<B3TfEa<qKS.l8!\W)$;8"M452l(\e/d$<8'E,@f,<
%HmZ7H$ap3bc:5S'1c^1U`ED8c-hN-qW_HaWlbYH(%B?"s^,&6'ig%;)X9@GG^6WRp4+s\7R/uU??uj<Z$7fGBplO@!MgJh8<?o`j
%"A:Bk/!2#i.$Sk:L1ca9OJDH`j"cgt874o`$*N\$o[j4pfEBVX5clO[`A56^&&9M]]FmVl2#CSq9V4cgEAVf_2>3'(+[5"[F)ULm
%UPSTr!2A4BKc2`83t:KAC;Ap<HAi%QrY<l4QgNS,=ppXBWd5lEcq$8;ps'*T@I3fEEabK"C(q*d2Ln;@W.gnHi[1r9B*h$a7b8=-
%2Z?cF[Zq]3mb7XeCj"QB#*9#UD;Y.0r:1G7+dBSXBI0T6BYC16BO'UW/+p'_gLRiPW+S9="uJpB;?1*0T8dp`X+Gg>'.c[=qgm:f
%Q_B[#C6+Decqo-[r"]b5KF;XmeM8.![@4.51sI]=6.sa*Qu?SG"cT`):%")+^_Q1[:]&>$lM.Z+S^l*siS!M-R8UUI)%-Q;@lQK*
%Mt:cXUS8rp\<QnKqQ92o%EMjph@rstDCMhgT7KCMl*5<]4(9_t1t3;Pm1p)jU%<BL;7iTPNgeqI('f*r/eF.o!pZT:airaH5`Kp\
%)raQ[i^lY-g^.&S7W-MoNEna:6*HfV?mX4t:i-Q.N"%?'BpXil;C&gA.Cg\ALtCf`TR(JPr)_'CjY4Z7jjQo!%I4&'XQ'!tgbHs4
%F.fKAo:%;Z\m)h6]@oR]_.u.>>W9lYTOiu$KMun,])lO3I7+XF++`@&)>L'qWI/i(gap1F/5q+IG\HL,:7M*_WPU5?-Ph=]Jr!^<
%2THZ$1I6>1eEH7LhmpU)8<13\K@2<5<21iqi6cEd,23=pPOGd3S.G#;R08XO6npgGc^QE,"CYis!B*_sZBTFZ>!doOqo.1jTpr8(
%Rq!^/b)5b>6rV<5SQ1!(ZgGgJ[L*W7)DF^@em1FpmP#uOEC&m'j0;75BnXB@gr8-$Ds8XR!;A>hX*C*Fc?MT1^Sk]+I.)7j;Nr#]
%R&rFY<30+P7;sV;-Cnt.ZLOTJ;cNUPn)]h">RUF*M:H`UTjOS"g56N[gEctR&,)upcl^k#M.^8Mo$%C)nmZmdC4r3l`O^c>.,5eR
%Jnn$kTNJl][^TJ^BlleHpW@uq`qL#*?ac_o6k#lmR(.L3q$j9[NhbH2VbOSE(c-1sRn/-r)kV"-qPI*g\Db"kLHX$Q\TTf$c#@P\
%TgUS0N[bh\'mD-B2D8tf`RYCT]GX$HdQp,m*Vs\(E=t"b&`Q\["08/<?X+[JMtXib=,!UVIasu]Aas?2E5gP<4c$G)p8$02WcqO6
%1C-G!jlG(;cu)hA7'^dCL?HglP>lE`S]Vg7R7rGUl`u>0chX<@QeK+fRX5MX^FZkc,5\>U&%Y=5!mf8I5&`Fl%g*sLl,9c%I,d8H
%J5E*f!T9MK[LV0DVZ7MPkZ:28ZlNMhQHc%&IId2#k[Xk4PB'\/=fAJq-+;i)g<e6/.9;)CIdT1kU2>ccEMX[QkL>0h79/^l1$/Be
%^m1*>Q4>edY:u2N]jk!0ZkDlMjs<@>n^p6L%'X)3$b;rWKWhtb%A$4t6?$8lm-kaWWdHZ@^47'5S0kU]79%]tI:BgrO#Vu>M+0>s
%M&-]a=4?/]b?_(U%_1@Y\1WIG7$R$Z?Ra-bHQXtOm>IFFCHZ*lN&'D3P]Dqk#]K!=Fhcmf-)@q9L3TS!3ZOmI0h7tB1:R<JGsP'T
%dkrTt/+q;teUVAeKZUAu@Q@-dkNdF\Ah9j"PH;geL.H='l7L$A@W4b*#M;rkAHEpG>o&%7m26+n_*/Gl<QEb+]CG;)GVQF;bDEJM
%aB*XV@J4hR\kA#r.NgV3nO8sG'HL@C.d8Wj^;sO8dF3UT,`d`;SrS=4Kr_Kh!=:ZlVt"LAiVkc)T,_VH;cH]2#?rI'3;K!_:Gr'/
%nJ5+sN@0+rHNNCEYm5O,'"]DXB6/@E__$\4*;)RH7T&f@%OVU!U9HsW(H\nnMTK#%?,^bfJZqgk^#q?)5_20Igh#-LKLMao_A6WS
%oRFlXg*F;d>!Qo.dh>ki/kBB`o86!]7VI6$R5uBfrrIY33o)^ZX$JR/&uaBj\sh8S+_mCro)d*L/K2gn']Fp*;>6nJKh'i-3@\)A
%Y)>(uX/<HNNHnVda3sF'?@7k:,2TsBh_LC,7S9R.guTb[Pm0RriEFqAEeU]W)1ca;SoN2T&_L3-8GdM3%^=fqW7N^1VN@\&<tOV9
%!7X/tU2!<_\$N092cEe%*m8gE036)QGDL8r6)XG4P;FIWlR"E&QX1dL&=+/KW,!C2jD_"OSl"VCQq/3XFp%ZM\e%+EZOsdU=Lj!;
%-s$8M>$UP<7uhqSX7FTX9,2HeJKjB`)Q'sJ5[pW!O>%3t=$_%n>f@5PqsO-jYPm=)?EqLI`fHCSHQ56*F]Dl3f"4S@'GG+dQlP>*
%&X?^LYT#9s1gIPG.R]*%);,@`"Mgg9U0ei/K_;;Y-57nWr+%D$aK!@o>+C)>Z_?R$ZAjX#;W8q,p]k$EVp@2?T?GBOM)L*J-JrBf
%XRV:!^i88*cgYN7"p"@U0b:dG!K4o`SC*WTq[WO8:Z&XpDahrjbArn8;eCn;P>bs(ef1-t=0)4i_1F,XT\C\b6M@pjLs-'`c*M(u
%&Lnh8GhOjRAE%.m0Nm(C'd34%7)A6=XK]e'Vg^->ku"a&O\r7:1mo>;dH;"BWMT[p$T%_Z1ZnL?[G1:[PZeO0QK=-(7\J=Kk#N^l
%TEGEe*P8:oOk@/59:SI$lHY9@+Al,6'3@U8UT.2U_*Nt9XFM2*7X_i4(:S'mM-;EIW@,4B,KGH"2U*Mh(>6\57AaeQ$3rQtMl^,N
%/*`$Fg^TRsjLl<)QLa4e7RY$9#?[ucl/Qs8nlnYc7Nau:d90HsdMN*FQV+p3hq"S.1i_GC?CA[@iIThYirfcMl9qBsKS:&@E99r!
%K*[MO*`!>Er3./E>N+LJctIi^co`T%?8?YK5^UjZpg2[hW_OG@d@],l]d`)K"GubbP@qPo>kMS%kR]$f8MTccFNYP]g3'2'c!K)q
%51?<*D[lmDLL$jQ(%i"ELg.`Jlk&CljD1UrP/B/rgQQt":c9?p%>Qci8"1oSL,oYd&R,$!&XbZGbf.qMrl!,8.%`Xc3Yl,]\c05u
%SK//k9(O[.UDs@])@f@<"",)Antsk'Gi+[N#Ef9egOkuB9E]m"Mr74PI*-Ab7>j&tW"$cY)o_;erihfKEAt!H"'W)H8GTd14V+\b
%,`DP2p/h[6.dmmc=6/::OqcS`Nf/69na_g5NB\>W`WMZFBE@>8E'_^1lK,EkKR*7K+p6G5i2b!>_\-#*gd2t,(gC`Wq!nA<IB#9^
%-/N\6PYA.,H@je!alZB9bPb<^9H.F$_&V30Ht8.8c1X[`\thk4k:1)GY#!)<;H`USpi(mSK2e8:/bk@,A*&$<iq6I!]bL"WC+f,G
%8_#@MCVUMbkSVe%_jE1;NHcc5l89&trH_1i8*$%/-:6'F$J0$o)`"K=6[>Anh`mm@^Zb0RN!j\91a#5+o&p>\lajcA+eDT-&/a>3
%Tg;[W_$"T)')'sb]7)fNPo6m;MkpVN_k`u0hou>@YcQ%]P9kZIRrK8Rnj/WZ+eN"^;Wh&Q90%/$b%IYf@OL%@G.&-s&m%p"1JFV/
%-g23I'I^%QmsMENf1dpd81lWZpD"I9@:Dhkc5oG[[].eV03HD-5TLpp`upBoHS%,P$ts37.acg`-'1Gl[rt&u!.ru9%S\ATRtqK:
%"5f)a0;WXq%7!>Z-fHFf4GpS;+Dr[M0WRtY?Ma87'JJ##,MUH&6MHX(039VL7BWn/EllOC6t*75%"-_^)ES+4C8Sg@h%=ENlJLb\
%H:D+C@8`:,5amSbp@bBn;cGW*]Pf>9"W,'A7G.SNoT\p`(rk6QPXW!S:f=&"/)<<LMI53Q'7%gtC_ph)$n9@c,gKE_/'jq/q,Rh=
%*Ragfj:8"qcZm[aQe056<>M04RGHiV'sVM5*\)Oj_+.L40`>*)C^Gs?M#giLYjs*3&lq0'Y^b/96CrkJNK(pq)FR=o,;V/8cVc15
%<BB"%_p!_oZGL37rM1&Rr"!qeqe(#iQ`^1#C`b=S8WV/86b\OhAj:K;E=.Y#a8'jQ%(#bG[uGf7-#^NV22Ir.U2a-aKtVJ6ME$Z.
%!K65FRj1!g8JT!DKR:-V&s8;E:#V\4>)9`#G-_PCKNBdn]s7_G5,X2#N"DMq9,&KY`=pE`9YK7u@I\s&C4DuPWp=[^_q\Z-1EpLZ
%Qr=Er*%unb?Z"m[CDq+>e3^d7kphV9E^FjtUECQF8.-os<-X"-QaEo8^G"Ud9SMVqCSGVX^0.sa)n]pM>QRNGN%^Y5E"G6@!B7Y]
%*=BJ/bd%X;D-^tMVB4_F20VQ26MYm3+f%!;5dZ\8BrKP$3-1h`MEXR5*07!S2Vl8I(:k5_<M,crL<$;K61g^'2\RH`ag2::d(Ha7
%6L1eAjn!B??P.1bEZ`+."U1H-/>6:pU=M0K[6?[kWPM;hKi-VU5$8m98^02!"Pb6'_EnuCSqh,0f?_ZJ\D(__J_5Cc#6.D_k\=kl
%2p_kU%GkB&E2C!O_\W"'r2J$mV&[*&NFrNQd9GYsE6uQtA@9NBH'`WnjTk\ZrA4?Lb>r"%FRL+\-MXXi?X#6?9f?W/Z`6-<(H`re
%8nSd.$%&'#^K>f0g_-6DWhYr--c^J9ik/AABQen_@p&O1fZWrbM3VZ%=i3^r8tJANjhe5/Cc`$G5ecBEq@dbdY:qW!&>)c=l%35:
%JN[PEeoa\Z3subFXK^1hrj"K'K1k`k9rPA;Sk[MEp<+N]giKgUD@"R7'%2f:A6B[-9NrQoq,WTFP\kWO"XH$'RZCl>-GujaWg&au
%ioG<`$fUX>AA;`ce^+\S[WtK=`CHSFD;`enCY$QT*OY1krYBD!d*\I-o<i5m7i3kD+ZKtsGU&V<`rrB9Yf7NsC>TV&Cr[GhAl3W>
%DDcnE_'e=p=@^P[9S@OXg9epoo?i6eC3K]Og'f"6S)+.bUBiI!EddBGXJ05i%XISp_bGJ".SeN'@9YahCX;Rnm]1OLer(7i=Z\_u
%nDCDi2<)<gPsLXYQVhsQ7.R2X%rcS'X>5d1`'TJ*oBr"c/BM@&2anYUC"j;&eZ^VWcE%-ZdHFV'#fjUR(%Z_+2.K70HomX^YJ:u#
%->\#P&<38YqS]FOB8?\Z;)F7q^AJ3#(GNal)oZ4e:8A8ZFN%OU.GL8#AAQX4lKVBp3+[?>\sT]p*F"&hmCC-O.!A`5*;7A(\NLq+
%+)&%Uf8B!S<nq05Rh!KE#'#L6^%1/*D^0I'K6j^3DZfNcMgTc88D@.lW7N!a"@o,<1%O:<&ic2I23Uto>Heo&ZdUA:El0``^7-$E
%*n!mLaFLTb5Z/I<?1`h@=`i7Gks3n_QGb1s\7-20F@`f+_mgE^Uo(/<-o-kV7b-<'@WL?")TnjOA1CE_RuN(;987g?.M(-UT$ULL
%EY4.d;JO3K<(X*iCs1rRKHB^_WBkC@J[2`I'5Zrc:k`W5]'J7IPUOjYgb*;R,5/G?ejJ%_[`9_e$@l'>^B\6oD]iYhW%<-0T8nXX
%h5^<kOVPNs<^;nH>FhFJYgoLpZ9B2/h"G9YnP!"jeU>O#<I'<Q$P\Q(2]o.RB$)nQc$Y:_jW3t!DK@9@F&/(T"#;^ePLUeGWLlFL
%bq!),J`bf1_+Z68.djo<,FDKkZ)tGr%^u\1WEfYaAbjq4+'ke?,ZcVI6OR7g+,5Cr>5*@.6A)<`>Uj(["DouYr0G5HK#O"E;h;De
%.0ri%/kn/7'JYSl!X(]e>8!7P,=Z@Xh7e\S#S2WiIPJh'G'@:jnKf)b$1GUFjgf.Fq$?SEFLK'-.#]0F:R-R4^KtT?pWmND^Rc?D
%)e];4r#mp/]qKcr"=.4h>L^?[nU-N5e&pmI"4\CFQ2V8Z'GD4(F[f&J;7i5(NhT)4M\R\;gJXs0PacNX!4)J=FHM2:o#EbibXiVO
%Ok8b3_/cot,sbn\NIl)!4aJamq@ZOl%!.bqqqu_tRSaFASKN(q+1sf"#f6kV$Rh4gd8tGH%cCl<W6mZ$/&C:o$9k<'ZKc73*7H/V
%Y+=<]5876LQ>qmD@i$;u^K6BseZi7Rc[HO+6f<_Peeb7=^qAJ]g!h>r4+4o#`OS;[m;8kRV@I&"dTq!C40VC00!%cRTe6S?LU%NH
%,;pcQ9XOt]?Y=%fo[QuAF^A`rDlVbHnRPItZph,\?_;Bh("u)((RZ(q+Mp_=6T&O5#%spaD9"<T%bh"a/D,9^WuB$q$lgtX5h*Te
%+X1;iV0FTBiG`Y/dRn"bdVMF4P?F7NKRKnCp]gESl1dIq/4S3pB9*V<!f,dgpJ9O^(`pr4g!#c,0Q%;_G&ro-ETkh@:(@oG]b"Tj
%T!pnTJ;ZC"ku^*H6^$N,<+\OFlG*lb$E8cGU%*4[a%I)S7(pX=Wm')$R&F*Hb3<A%<`?cWMG2c-GW2>,_6iOk%*RX_S"f_+7#b_(
%I.HO1_Zp*P,[,ho6*0;BMG@adAn[?H8dnF:D3u+,]Ig7TS!*TlMW1?e-;X5^6<,tA6)2C;qM2sO36[JF'Nl`^(eC4_iqP-[,&giO
%0CJO@RYWuem@fOUX#GUX`8s<!m3E`/01Rt8#?o]NZujLQ2K;fMUW.>Ea^*]FZ[8,jen=V2O1YgIhRC<ph^\!ZYtUFO4>0ARHem@p
%R1F/1GBF\"fjE,\aO,ha%)kB.iaG0BI^b/=F'?bo&\1iu_-t]jYEQR@0FTEE*9q/mDTXCWUdpceiqaLHB'b=8%8h>qX4sKi$.0'k
%Q#_qLWOA/#^$b=TTJTK&`PBg%89Qgij=S,b2]ia/TLq`.kcAXGJq;Ta:XL:tYD@F\6WG3ZR]<ug`)ed[?B!j;\Y\gel4Z)-"(r0t
%Rehspk7.K*M%tH[LE%,j:sbb^!ZA?mVk>X_C8eU[P#V+%qPpi1.FHPENopjt^#GJD#BN<@*WRYJA`b,cGbtI@FpT#=G#)fZ.9as3
%8>-l/W(jOh6ALJq3m(`2Lrn`p9[33,U@;0plD%3$W_L'?kRMb3]piH@2,oO.P"65JF;)OZ?(d2/a+\ElbH9B?UlIQl.NanZgoNbl
%Tt>V4mDoW6ESpG6!h-oMKrRm-;G.PbR^U;%ZD6#S/1u8D72i20'"k=RSYr1aL8*E^,dH1s%e\]'g;\Tc4ag5sh1R'_cWM_qn&2O+
%IBQd2\kk'AX&LRR_2n,:h*Tg!SDa,2+;r+&Y7mZl5bTISLpCIG.u1i=^n,,dM'P(eaQL/5M,(SY*!5g,<UXn-h$bj6H]UoA_Vt%G
%'S^q0Fh,3W$>3Q:TJ'jFElaRIgjQ+k^tm=oPtEG-i`jo17N`RI5mcdXA86&!A(*kr9]hSmV/c--1cWn)^gSj5[9e5XZ[p0C[8.rd
%'cHOGW<[);VN2km6/G7n,QRrqEfjA(qn`Gq#8s\h9i2ba=sD2F;>#"dKqmmqF_0tZNnGjRS5-=^m&@.S?'!rI%5-6eldJCI*;u<a
%0((ta<nN2;H0lNA*#n^i1NhH>KS\@,d7\aXkgj[WJ+$@d#OSC2C?o"2ULC9HYqYbYlG2p:H[+?<[N(+g.7PNufo>p2B+i-5^i'ZU
%Eb.8(]F=+^*rs0r<j$Cg-#D'R2A&VgICm'MPTR*g[U3YcapK7eNMcGT46":G_h;5--YtE4dCd6/@\6IHMp\5<Xju0rNq&D9^m`k-
%gFK!$?$4gYQ5J\b<EB@)\L5d&qo;c5fNe_HP^aj*-2ijF%rHpKO<',r7*O\1;S<R\qhT,PE=.RKIZ0%_%VKi]6*2qMXGVa,O?XH7
%ET#M0&4c;5;/r%[i(dTq7I>nJ7h9j.>b<F+RS$)2SOX%YlA[CH*j4k%TF<DBq(!OGlb3U7;G18DcHQ?;[\sYu:rW0]XW4f#j%r\?
%&]\daZRBQ(9'hIFe6t(F-K$j\;hXZZ?f4i*]V>Jci/t9Pj*PK@W,mI1H+uOig/3DZQ<9/?%"e:t#0"16)2(U':JZ4C5knt(]H5E,
%m.':SRBX>AqD9o$_0PDF]L!:47p)Egi:<q/R,B26b\EeWKl[j4oUO]5JZfoX;Bq8^;nj2MQ,pjb`E-!"T>QC@s4YC:ZG@"rl1-8J
%<giNJYTq2@kZh?9P]!2Q\@b*:,Ue@scViJ3-?*6p\\p>FK?/D[^he_tcQT8qFpO/;nsMK=SmG?4<.-CGOms986cFV_LjeTh=jd_m
%?f"Dcn/!s.d1_sO>L:&mDk.SRUjfdD\i'$,1]V`R5nJ9IMGr=93RmD1#X3edNVS,&/nrp:)oI3o.D!C"M*Nh%n"Pqc3C8Fr7nc:<
%iKd6h4RDqS8^R3'n>2FtIPfaJr)R$A!eIpTpDo-(eZ4'IjZc06Go^m.g*3"g7.o9m.B9Oq[:T2(3AXkiJTttbf7Rn^MbY"c3`;`i
%Jk1ag`?X.+#LB/g/-p%0J)&nnHPh(8$0NX3Np-%O1SB:AN"qnU.]3^-'*&*XCPJO[3/,FIVA;t+VG$D&=e^"GCtdO6VIJcrORCB*
%rPsdH`MAU+oc.ac!>O#,hjB4Wpkd_<>*+%82-f[VNFocFdB'A%4lT%\[2qQPHCPK$9&j>%T*:&tr'6)0eBfUtBJYPXjTo8:KQ_^e
%4-rB%$MIi\rL2_(6W"s,I+>=UQng.!f5[E6.U-36!othqhWRukXkse(7Wa,,oej97_X@B?6[Pp6##/MSQ4g]/7e,?->tu(]Pc>9l
%.m(P29^.^dhbq<KG&$F=K\GG0^!PtKj@*r.ggNrg0e!P=(@qX&<fl2'SW3g>_QrHkDnMfHb:co7,D:"@@+oSmn?1A[N8V\bS-qM<
%mR]#,Yn9KbX"FSNMl"?0<??'sW@FEjF.!1sN]9#J,K)G/EQTVsle2\^^MsdJ,#93$QVVd]b5)>H\9B6uDo[n88N;cX,-U,R*?LoT
%<eT_g6X+gGSV//i0*$#0q\6,DCUR5`b_#SH%%&E3Xg,HT*C`JS&2Z[(OYVs"G4q!7/D)ufbb"dQ,0*DUO8e4$(n7U9]qN_W?AkTl
%iQcjcZ<_8/L[m+:$71Q`6EPkR-!)BCPhHcI4?GW&ThrsQ2`.eD-=`Vrnta9^Do+sU.#?7#^3NNuSsj._.:O@X0NpX!7c@X0F="eJ
%7)ZBr*us/f/lh8^<Qu!>grdgWm^+].dW+m+P)%Yp#m%O"5[-j\f5:S\BD*8m^5m*@MUA[bp&#XM?V/(#iT9u6b(LLd,m4q=//ctP
%c3a('c?TDLi<A1LLrKMG$tZPI$]a6B5a'<E@aaSV`]$$@j>>la2I]8C$Ah+dmLk8lMWfa9TQmmthP0&g)am\89b2&,KsuG3$Cd[e
%5WupPUC.X-H/*/;Z+Ua$"K"aH.@^gmH,N0$>R:S-&5eEIGKX*+?\)ol^S+Zo8d#r?;e(pQ#;X@oQf\H@lcl;b<K^r^0s*QK<g#(R
%?=*ief6)nBE/t]qLko*1fp-rB15o&k8Yu/8$UOR[0O:L>B;!-ec)i@XiAdX;&(5m,QqGT>Ea+N`=WD/K'@^[10BOEbCA>bsJsE`,
%YiqLX1U5K/n*X,Zm7m`XfuEOpm?.ra[IM_2*!OrfiZM"aF/J2ajTC9G<&6fVe7prVH*o^>[J"CYe+`E[=SNWOlS=-dR7Y*h]i9mI
%Ds/Y6DeE*mr9bVHM3p:g<oOF>e3pe5dj&[%n#pmd(Q=/4D[!ul(HVh`gEeZ:$CP:oS)]:Ib%6OL+NdRO``a;OLSuLThG&oRatt_3
%\U&X)].#(c\e4`FRV&NaEU#NgiP.oRVI:^X)=Yj44KM.1@O(eG'-HUtW@D!8-%BjB&K@]W&ILuu)]L]HV5$=mm_Y6%V*^@HE@UP'
%D@?`MUTFL1]lX)$mQ.EG4VIe4GCrj<m4cikH3Go986-+pV=^dn?E@PbG*(a9q!Yi7D`i+.O*pD>Jms>@e2WS\\_"G'oCs<F1IgF4
%Z,=8WX^PJq[9^R]E7Rsn:P\#4?XSSSDJo[/`=Y%(#t&#!M&k\!bJbi1@l[6*g:tX)N1Bs`Cj[Z5>\A.\0qE)I,KO/K#2J#h2%'(t
%1/+P$ci@5%?ech@X2$?5<"4io"Z2]e)TrG+r1d]9/X."#U(RXB2%rrj)mLHmUWee'j%Jpi$.h$m^M6DNEt6++L3ud@Fila7[-EV:
%M^UInYDO[p1*fbMgOu]>/jp&J`4I),*<!U+Tr#I8I$,FbPE]h51l=6R*V;D<+^8U#%o;F4RNk=.D@M],S582Q<Q1Z+^2$;=>WlQ"
%lFX\5#khEd_V8nq.Q_\LasM@f.ql/W=BMMP`U?e63)2J0;B"%H:oWV;b[`4N,\F;L</Xph4\8MHa2Fauh&B1T"3i56,B,Em]ptBH
%,n*>\6>$_1;VP:l0]gu];b!*%.^o<O/kItNf/QRpG3)f8(ds6n\k?)hj:4e%cZHA>'8R\*atR^ud`@qu91FJ,Apjj$I0sDJ(A":]
%*b%o1'cu]-mXkRJ\Hb-\qP9M/G7D,Q[epi8gk2RHgQdr9S52i6'n\]K*)\>n7^]:?r0(gtkdsUQXM*U]m\QPh-GdklF>3hPkfH5M
%Bh46\oN2H<RXpPf3MX1tFOY.P`/KMU-\AFW<'NF8\pln^P@Pm&/3b83<_16=cd1?/5pu$7)R)u>EQ*H>RsXJo9;O=khHpSb0WQ>4
%_^5tpQ$XHn<ZK7/(Z.I_PH;eu'QVF&C]Oa'JcGm)lBmC]DfDSP)QTd-MG1X#O:V!jj+XqDT%6h'<^q\oAl'sSmkH53giqE5?e+nr
%<5L]`;'u[,if"[HD4ehD_i$U<`j=X<K';b\V.IcE;iKQ!3>Ab#,:q,<if"t))IhiPf?,T-]=2Dc`:kdS`d'V#eU>m.HgfDoZ^h5A
%mpS8m!/1)%O/+L!*&A'Q>a6!lNM;sdPb:,)n4@0Vn7`bSS9$rl'oE7e2"E](E/OkL[FhjWN\d%1S<!^cY5N(U[0HE1msLT-&d)gJ
%)MM$5IO1kX@<BSg52<tor+c*jED,Cd'ZUQG4Mj9EacU!pOfk'UpPuV1ArWGn9hjtZh,3aG.^bIu^PmF-hooc[p)>@OR-#Mf[XUeW
%G<o6T#gJ-3X#lfB]Yd`@@,R=CTu20nM2c5OLG%\mIDSJ5jfr[VQ%Xre$s5d0QTX/QmV9WT7,2bh-S2EQB(Ya?[?585kZX3^`[dC0
%!-)`)f<djE?IXf8HIN6a<P;`I#A#)D)kEZ$#Z1GPD[UK\X0TG8K]dkL<":21I9R@<d?qsoB;?cX:4&=Mj5c"&X?2PAH9pJEM?QPb
%E8GcYE6M?C^k*)t<5Gk6P%MR30EHf>`(`%^R:1IloAA:##r\B>+eJZcou@F>@+j_pi0KS?PY"ifWBj#TP(uN=bBel6cQ.au':?0f
%7'kt!Cm4aJDM57KOnqpb+I6NRb&a-\VU7L$)+A:GS\Vi`U<,_VZ-0(]bI3%cNoF>/UcX#/"l2=TcmRIeTU<F3`7]0$1%<!iq9%G8
%P'_(CG=V%^TWO6@'n*6b6]<eZMG/,q/)_K?2[laYT(P/hO-+&`O%L?mH/8qL,?c^9mq=A9U<t`8&Q4C$WV5N2?rM@nN33q3_r*(b
%*pqSq[eqL7TJ_#rRDI@53`+Fe;4I'@@A'OND5o+nS2r-DO4P'gC[t_ES3&:_0BKF(fL$oUUbJ6rGt0[?[q1?MXDE0?:3>,"EF#6$
%3eSr:H>lO+RWObY7Mgk)VSiq.=EL,Bl*q<YRi=._lC@)[Y]79SYfh=G:b>S^'Fu_&><ncN]r_'NDOZZTpcs#!T#if&LcLh.]`I2%
%ni.eI(6(b0rFb(bU`?#^4GtrmbDK)]4`K8ORi=dhVs2@MiZ6%lRDeLD,"%h,&M'.R7>sY"B8h,FBZ8(5%i5=iKrQ:uObmH3"DSJ"
%*Qq&HmTO+9P8m.6&]2]?'($]U\PB]$@qVK->ea>YUn#!Bc<P>,lQ/]_WMqW@f\GOuUc:Hj$DJOaJB%tsCEFK;SVbN+QdJR[,[4kA
%II.n-7h7moh"eTM<r!r!X2OKU;aU>-_Gu')ZDCA9iWM-aL]p>o,4U+4(\CX^/h;G%Qt+&0_FL!cpY=LU(WH>,\VH7ni9R"<)^i8f
%X6oAepe*MTOhH]M[CFY`A:POn_7&1QdUZ:.R?/pB:%hNqb84tip;f.=>(G><dP]T!T;ES5.`Y5e/ir+M?)Dj-f2[)O[Sfb_$V6&#
%%A7*5W6IO(7K@<le(/5IF4G'`h?'ug2-q!!K2IHlFl0KW?QKr-h<+#mNf^&BVB0q%]]]?aQ\K))$iC6M/h6o^.AQ3Z]3"9*l:M4C
%3RBHW)W.6I5/M)R+JfWGO+=8(W^[\.pEXp?5V,g`E]d9Y.%lI]/S1"8pc8.%,VBT`@Hi<S<W%4(2%h)K$FDO"EZ,%kVK3n;TNdZ/
%Yoc_#pN4H=:Ga#UCE^qpDRU'\Mn`BuB[.KY(j4<G$;lirq;p5'`^-TL*>WqPMaJaL-s:Qa&6$ctEg2E`\PR$L2<qE]#2)t.Y40S+
%r7EA>3:W4r!h(-<pNArSO<pfD-3Xak!O:#m]A"$0+h>B:gj$S"YtN<u]YXNGGWklNUjPMYRFL5V7,KuNH8:.]qUJ(oqPYp(/QOMW
%mE4/Bm'-bWKC:AlnO/k'qJ,D0I$@+J&!M3VcqC7rP9p3Q]("VM51UBDd;;>II@2nJaC'G;(.KrH!s?VD:hbi^Q6Se?0i$q*'tbXF
%499&tB2/iJD_tMlba.M#pj30Q8b>9GTPjR/Jg:7MZD35j6e&4UQ_>MW$MQRAOJ]nrenL`].&EaNENWj@Ze#1NeLg2kR-i&%:TM,9
%`cJGfRSnODjK)"3A9CMG?JTQ^NA#MpC@\+E'kI+#Q6nY1)bMDQ4B[(t(PB>+-^5)eVSq\:Z&B!4PKdEs.Kd!fP_$kA4>mG/;nR`Y
%pcHA,PI\8,Js3%D_`38RB.MoR:ZN/^e>mFgK$`7L%KS4GS[9R.oRtCU03[`d$WKgM_C!71cN+%$\[Zoc?m(UofH+JSICT%UW?/WL
%Z&3se7,Z<3rqU:bl9Q2OcR*cDE)<7#mH^V^Xf'Z<;!DX^l-T#mZbe@`-:g32V(p2^IRKN&X].?.j<CuQ-gsBQG`ru8bGAbFbfk(F
%N^7K>S(1Go+IO@cD9tj8ZJ#`Nm@<_5e4s:;62_t!%p-Q?-e00%kfZ].GhZ1*kW4Q).Z]';V!DEJ'jP%TW3H;p8Pr?BUcr)JO6>j/
%IICgZS<-KD#"eOb2pob%@E>7XD&4G8UI$fZiD.2.<Rp7>J>B8Es/;N+LR&F#65O+Q4MijL^rCmIW6Q_m1IpE()-*\oQELjU,1KbN
%Qfn&8aN1:u#FeL<\SWqK6tkXlI479&KWXsL4=(SkmL$4p+Hs1,\3i#Z<fR"MMl1V@.1tg\USIT$'q,75rH?O@3Q%&fajr_=!b&>"
%T<_RDiBmW#6\3cIWIL4j3NRJ.cT6/s.c6.&[A6?FJbfqA\.<3PA@c<]%3!Z6NO-B/3'6]))ZUtuV7E\`*Y03HZ60`k\40KYL_.'D
%]_it33.WBOOA[b"^e(7q&$5boWUtFFMS8I9;t;A4PsEuf'JXA-aW=5gFDE<,'pGF\]JSVY.*L'FDC1$Q;n:/k&n4>Of&fL;jE3D)
%2[V1'?5jFFQR60Up"\5?cu%o.CU,Nl"L0_n\VcSagJVG2M5aVl,/M&!4;i,P:OtDTpe-3%?mQ*ajEMFqpUh2od(@3;rHsqS-o;^<
%,^2(;Gq@7K'Zi3(gSk"5Xdg1^3U+"MWC@%k25RGompfL,iN@6l4%OkIU"UO)+Grg_l\#mW7I^#-K#jBb0!S+X4J8!/35]!`Bd20.
%%IM8:Ge>b"hYEZ`7r/me7?nLRMa/aHShOr77X54KeW.Y=H(\-[Cd(J!0ekfRgFYgL8kG#l<Y+jU'KgQ3c\b/2&k5AZ_a0ZY\I1F:
%m$*%Cqa*RWWLFDlmZ^*$%X!JmZRYQ@\"HtP=>T%j3\-<m97`#3VLRHg-^7`VSJ$IHg/FcYm*u*f*r:UqdJr?#+&X+N7ccg92l'KL
%(NS_cFu6a2[#L'=UW:C2%BK#=&US_]Raq7TPbk@4js^#lMI-B%XRE`'?fR`_[<O_"8EMrKZ`G]-bG]B-4IHP;2l=[nT(Au(1OWug
%OXOq2DkaG9,JE='0'pQV8k7'cTL*T)c`c`57H:<g%JN`H<adsj@Kl_$^=HR?JZkcsLGRIo40R[+BT.j\DhO+()#tq2Zd([,li:u=
%0Jd$@D"_>7Le4d8X?TI+"0B*`Nk0>ue(0@m,^;W_e\(OsQm_JR)]gH2mQU/jA<QCic+)]B2\7*uo3tO5S=n#FE>^DL5ZpB7g1edQ
%V7ifFh2QValkY*1MInP>NX@i1,sbk.?o!@4M%LEV]q8b/n.6[.V/P?R6e#f*G*.FjAU66L*cF`7G<P+&]V!gM9G/Du^M1]c-9lt+
%/H8jj]'P=X1Wu"+%M>oj(alUKb3@t3WMTu&+S/J<W!TY@F_[]oQ'R"Z$3g2m%69iR)T8p!1(]^:l(qE>5?J:m5:%W*dDPqjR>GaO
%En1S4>kj$R;(5?Xe*NCPqB?L&,XYX43Xm?O_!?7_J-G<ePpOoZHFmnB\P,7Rl'ZB32W^Lj:_/d7Ni%ZA?i^&?E1r!i(D=O1(S[F=
%q:.j>92T)R_bo3092P/Z=aUO]6OL1UR^@A_9G7`q,S>+f2>r>n9&s`^=/l%`8HG?kZj+>LoatbkU'Red!\of6(;s$D"6L?NeR^=Y
%WMZTWiCOAEVoV,1OZK'Prh$!"SIQlYLDGVXEY2$rJXOnI:G=utbqiR^c)1]#2E/A`A/_tJ)2<P0NE!!,3a3\%kO:Q?P4F75-kJ6C
%]bH<&0/-T3"ujDWP-SH!1+D.hO`/O>eB;sFAnX9u?j\P1g]RV%Qjl2I]EL,A_A?LqXRg(&],*)*;(N!e>6.,"!nLi&/@_o8?GbZd
%Ht+2R&,*+V#VmX:PrOp!3#*%Re6(c/32>"X9uD;.UQXZo%5b+SUhid/qP$SY!SnAg0WQ0cg%9Bl/lD_6@c318m`DP^P!Xn=9f`'-
%2k4ICEC6"uNM)6QW"Q?\jMZ]5QN69)oO_9/G?Wr/H,^Y5nfup<+6.C<oq6oLXHs'TP$BHmjq!Dpb)ED=VJ9qAo#_1lk%U!Y=?R*P
%d++(q3'WrdO/J3*IBNt<\=#![\;nLcU.*2F'W!&0cj=,@%Ma!>$;."u-c%T&4.BVS#HA7B#W9jG!?JH/(H+cCX\'R=<2\/FAlQDg
%lM[*;ia%7J:bPdJ/cHqUCp;eDJa4&p]O!A,WeMkj8O5L$8MgepYI6<4I&6sXcbB>I]L1QK!+-M7?BA#_hP&9R$<9,#Wr^4DBV':Q
%EpAS+")=btA6_0q"6L3i&VLX[4R.\`=r`mZTQR1kom7]&2$]"idXY7kXb.QtO'7a(LrFZao[Jel5Q_:b3"RH"V8.^Y,Y]1bKkpka
%du_mJ?_5D]Z5*S7;'B*!KggG-;%9)d.$D4knri=4iO&B5^+r&J-#V&/3j>Z?Z4lKHD<6$ZRiICba@ITZKOsg,o(T67+4&!e?-b)S
%^eD7_W>Kl6!^\+,cB/CA1IfEHh][JTD%eO5q9fXeL>)L;!l[)`'sj>ZPZqgt<t8ch8hrOcr-RcY>BC.%AJ![6a2=<;/54R>KR1uS
%V&0DH:P$W<aXW@#S27G@8oCc3_"KF#K>QE-S5fp,P:doXX%h6V6aA/<@]BU0Z98lu>1A11RC.kiRYp-fR9'UVHGs^\K:g>-_t2EJ
%=,"*9$`UN+f3mVc_45<'_j_I7:W4<tQ"mHmCFRIe+GH1%i+22.)eiK1@c#/"?qNK5QK6+q[7G8ZD;)SerLOJpj7ur)f5nQG,r-/:
%Qr'[jn!dl;k(ug+,[a"!;A=&K1IG-##KsTt54E%D==tG!l]R[a3SG#h[2a<"%_jHI([l`LY-?k@Ugd.1X*V'd0gB"\>Z!?aTqs3)
%UnY)GZ3^>q0[SdSUTH\!=[\[k/5.gJVHDAJ\].+6j3nNg4R\>T4h_5*4Sb0KiKN3H-:A.b`tDY$Z=_]DJKsbtC"M"IIhM=GluHep
%T3A7"d0&WN0",dgmn96oOk54M>?F1sJkN`fWugB?D3O!p<e[3N$@8JkY-;_gZE2$O^#CakaC(3VZCi+8.pU1f'IAG%op)[kHh-9Z
%k8j,r#?^81Mn%P/'4fh&ea^D<#?/eLmAUBun'r[HLf?_OIRCcZ'FAGCoXUYkVcG]Q06AuobtSt[HjC`ser%g!FW[AMEYphEQ@Nr8
%9-&$!V+VY-!^_5)6oFik7-'CA?jh5Z!i6>JG9_^^7uB-:PRl)(r:.EahY$Zd2lP<AD1JIRD\oe*=g+R\&eoKsN\Ubi-*9!8Zkh$I
%E]oMY<IV'i$?c_$)<`9/(>><''aEC^K(N.GU'ONtPmUX23AsM$BbH?S)^%0Kj$ksF6W'*i!#m146Q90k:A&/BE(2DZ/CP75'Od"E
%.Y#:e/ZK-'"LBXT7*t<d1DK1Y,Pr^'b]do9`mARh5m]reS*RWXX?%Qo-5UUZ+0bA"9aQG%q90qaZc&Q=-fa]@5!8:[\r"$Q'I]ft
%2H"3/)F\M"H\!r20;GJMqdSqJb;G(24S"ZM)!)m)d<`)TZnPrA8JD'nFAFPXI)/nlO@A$/^or"s(0:n>lM%,?;ltY0io(P>.#"&J
%A?7+sOZ$T21hlG]\fRl=m.gbMMdqk9i,cjlos>5NDtM;d*c-umegHfkYqV[)r4ZsDWb_5a!4u.KT_K=[,qWTTT.6?C.;l-WeIsd'
%KBQ"+RPQrE(=i-I(&fRn.Z43>H\eo%rcM?KeY!q\3Z"iS%9$3j)!`M7RQH%P]I9"LcL?]!apQutHpP+sPcF+*f>N89de2'1GWbG^
%G<O;PlFG[Yd<%\<%sLbU;2jgo#&6T0OM(K!W]80^4_9@"9d7[L3CY^aVo9Olk0]l9\3.-Deqqh!PU#j4Wb",LE_?6Fi$$u\5eb[:
%djqS=PK6`9FN?=^+WRDm_GRR978%XrWS1"#&73GOA^.:r%!PLZiUKD3r-Oa%nk\Bi&)WWOM]XR?*NrAnik^=CZjBI]5K*R;GnA-:
%E`WRb,f#U/kT!&lD<S9h`#pbe3D"Qap`UQD\l='Qr.!^Z"++6I-8ej\e<3fe=BV.C'+ZZhQRYh$W*,o4;J?)\3&8@r:)m6U0*OBY
%ae:V`0C[@)*;nb\;WP\D0J2@H"R%$.es-M_3^@*`>aJ20Rtu`t8B[-8TW"_]LKNa@3/&a<<eV7-2"V\a'\W[:c0Of+:A*Bf,;P$_
%'8*$nWM6*SY1.`Q'<2:pn).SN#6[^gi$oWGauV+Es*&.DX0#=[VI\CuirG(+b1S5(BjthB/D2`n[q=KJ_l1O7a=1ERPJ1(D4,lcu
%iY2ASL\OsRC"EY,h36JrmANg&^sg130AY/7We9sY9VWS"lL"YKdQs">([8P<&S=_HYJg^M,@\5JHof:icR/WeD,ip=7=98OFd$qS
%nGr/ZM&AZgei&PNF]mBDKsR?\lR128K"sr+Lun9-U=8&BF4A,ucYqMo1j!-&Lc,8(!nG)Sm0[833Mk^PG'H6nXUaIO*'+ZBkE-o'
%8:3L]MJ15T#$83<,@6t15o7^(:r:,V*Zd%E@8!CkZJcDdopq?m@[W5@9osKGBQTjL<*_L+,,QB>q$n8WG?g".e\I!=iP9.BN;eX_
%!5aZemSoaSC][/%?sc\-Ps@HY!uS'[r%XYgftkhfCVU3WA$8`$$2,JNgG7o!^`7V6'K!Z0H'P1>TmcuS')A(=FV=&'oWK_F6\RiO
%ZpA#4JRhmSL&5^P7?kQFM4cbe3`Bqa6b\jQP_#RsAdZ/L6E]`n_1o@4iP"nMXaQ<0T^Ni1<7.NHi"Vh??jlUK^s5Vl8QDY)3IMX9
%>O:)Z2=hYBR,LRlDYN7jX6&l!&cIsF3';W9E%)bdG(e2[M#kO^Z1:@"(,@?fkiWYuZ-]pH77S#>NrT3;;9Vu\A0"7dLuYZUB;$<+
%@!Z]XJ9Qklm3(lISA[t>@99B8V/".COPUh]WgGUY#YGlN#S<8i45`JH$rH>5Yn/pSWrcfe<N:$eYg;Oro>\@6I)>\'OZ%0/V&E@=
%=seZ:r[%2;MM&lgb2_*J@#^G4i,`O>[b)[:/)s!9J>>_QN[).`L(k9_5#W%aCq,JDZ/1r*lda'DNp&@dCW'^/5VF;`![=WF>1nI8
%!<FZeT+(PUq+UR_9iT/SoQjLSk&97S]7F'<].&mQVi5%'bZ#mV6jR:K4UmbQ:&NCBoDJgE)eJSW:qIS!FJBo>nj:Q*idT[f2o$Nf
%4Fnsb-M/MKD45,U&lg>1iT8RBXRiAIBr^e;o/%WQXNB'EZV#U,o#o71=\28b(iG!7-\`NNNLUV%(*7'Wb-Au?lo^Ep9[jYs_Mk7>
%d7>:.%9l!Z2=ro8Z-CGbX2<JG?DfeZ.VCS.>Y0@63lt9j/"d/9?aLI3OV0_rc"8/1OY-@"A$1Z7KB9V%/+Mfh*'_/rec"I[Qp70<
%KqHdeV7]s*?%e!"XEIiG.A/q>[hQ-<n5m_dm*<d'`!DDg`8_b;jm(tlUm%hUAQ.+)IAKK7WpGC-jc;.Tb8EfZi3OMG@DSQa$su"S
%ei6W1PrZ.'/gCj/A;&Ni=@:3tdp)DrYK2+DM([TmZUCl\QGY:C$K\'Cin8?h1t[^YG1ak=9FumoiUR;AWpBm(2u!L$Xu<A4dG75D
%PYeIdm$D6B$P'Q]:!g&m]%]53/UB;jW%+ef&CK/@kD)D(_mHaZ'lP=OU#4W966Lh@>,'S(Run*n\X<#7Bpb?]%f#)[4SYmMe*Ece
%qg4U4mbL+!B*._CD'<gJF*>`7bS56$L3g:!qB$%_ktuRQ5h0GAS2'*X'pde1)[6dP/4-2A$Fm`YgV7>iY/u4ZX9J]VB[8+mGa`7O
%ocMGW4p*(0k/q,1-\[d!dU8L5C0$SWQGld(f&Seq+b^p5nA<od+%BfleFE,n$'$L;!Of?]$()GsNu#i[e)Da_b,:T!HM=lrW1XK6
%kL1ltb=E)&%e8q.V["O&SAVQ#5t6#Pqr_e)eSA#H35;'<do)K!O,(ns\XJ2&:%@K[HSagJK)=(e"F%QmTYBdf4Z6#,>VFtfHZUMB
%Il-SN[[F]i?aR.d)aR5O+$3:STO4+"NU=+@2)b<qo%dfk7>gM5B9Han9V)0I?WL7?#9<G%IA*Yt5-WFGl5$ckCSq%+e!^2[^&WUS
%lVh[@:>SY,<;.iiTlO$!W:kWpcuR2N/5n-Zp\#)H[mlV:N-1X&E=-H<bK$-<?OsCZB[9c7W'+T0"._mZ>SUK%$5N.o^SoWj!%J=T
%V/+JP'pal=(.CNF&,)bT"^(oA(5a'="r6uY1aV6>GLYkGmZ<M1VQJaLP3RXBRN$'LW1J"1.0*3YV996eXE^H)\p1g/VEg0:<4;B\
%lk6tC+@-B<:N9$BhKRT%T8lj/EAA@T^Yb_R#reT#g:!c-64s%Fnr/TbZ\HU4NF%#oOt!tKUuGD8(`H[QTdicC[I&?Ha:1'GQbmV^
%::dt&?XOWhXL\N`kB+2:F]e2ITXj<2>.$e%4BXo*]`J!dc2=As'"1o8#pu#Oj(g\Tin2dUL4JQCY\a,X+6aKG9nN4V(ASR$(3-Gf
%j+@L\Z_o8YhYfSZ@@>JDKIr'hde9Q:O'C)(\Hc/r$?:jQMRL8ejIfdu0X[1elP;T^-sX3>g=h'@>fR"=.V?f).Nq^sPQ6T1qD\+:
%":t/?$!nEb=IpJqIGQNV#Z4F7+Ilq3qZ6Z#FTr\c(C=lnb:8fLk^[OD+DkE?EAJ1='*q"3:4/n%f.q;'>:h@5+#4fIQ`7KYP.;=H
%q2bo)bA77=5#>,*-PALDk9O&\RQXaTKAmfK9Pq%>3=mbYO+R`X?jSlO,0GRR)7hgC1VLZTYWR\&&j$2XnXO)qkJMKi768qikVtuN
%o^GHsf(jA:X/(_*$l,J8=33&!lcPM,ok<V+XO)TGorf+XEJ6GQi]Mo.PD<q/A@cQroq;#1R&54\kCAUp2"PB,$j_mB@G3b"Ylj%B
%KKMTFlIE61$"W=CCUuGLPC%&0&Y)n&Cu,j?oYn!9W#+bijL[rZl\=FX^#ZsA8k+QcZW0]2IPuMS=?g'"\%eg/8/q?_4'#bG-GW\2
%KIoIs%F#<P-kW':nkGs;:0EVV5d<eS@<oCX!<!YlBCPT@m:5fV&%8QA_X-RMl0(")pH1d0F%XNrY[bi"EO6Gl,]'Q_0!.?631!aP
%k@,A93R`@.9nscQfm@Zl0]+&a$%7OMP6gF`il*@Tf:emL`0D9-"+o7H3l;7s.&M8aK*4FcNT5UI;uBaLM9E)nlLE$"'<oHN/LaQT
%#4K:/[+et'ok3RHT;iAVS*J`9+-h`WFEdX6%+\$&MOH9?g"q&HN]@0Np1/CF/0a<bHnHKDS]*:qGPaf^5CfjVSiMkL3`KT?&'41k
%TW/NWB"b&Xdl`RKPpTWrSa5U-l]Jmn.U7:t6o'ao6YE7(EhAO7i?ks4Sbi=G*3Sh-Z(W(/_J`fjT^TZCOck,TpSLjfTDa5[aNi8V
%]+O2[dg2Q_o?`T\aJ3I8ULFVgoC@R69NHJD]/OiW+^Bnn*d5b.MZ6XhMF"24RmOPs4kI\C\gY-o[P'Za;%@,Jl9:+G6q0&[[M+q;
%A>j^[EHA7lBq#`AGO3Ps>m\2A6'`+.e<<@S3=Dm/`Y"G%?<u>)*XaCn6i2%KPIT#!&LFk@O#b28[Q\?RhrtfD[Xdu0"m:4[ltK[D
%3_T5lMmlK^`$Zj,qY>q,oOhV0)Ga*am+i[U-L4oRi5p(An:><d?LY:bMf)3UII2P-6paRH5M-V8OcLZg/*jJ/HkM?#<,C*e^^Nc_
%8e6f>9Y3]Yp0V#$O/IHB:WZ7,?rWtn0,R0ajh?T0@`G=-\M[d#%6Yc'#,7ST_]-nob#&\c_0c]/U&q.nDStG:S3UFF_Vo39%ZL+!
%6U>m/GdF,).anc.P/1onI8C:b:VkIKPH]SXT.'Y+-Df5>@g=g-%FPW`KdE'E6"48Ui*=;h3ZaG!6i)5:o5cWoq&E=LL"]7qYO&5L
%Bj)"Q:%?t-Gm(eNO<-5f`a#K!6<8Z3`0FeUSIG=up63$8(^j=<*a6/WJnUN#GaJ`Y-7:O+]hd?NRN._]e)YX:R=LsE#CT4B>nj'"
%V1=DL!#'\)7Weq37I3[I3el$Zn")rrAL^eqm1jc];.+rdR"pD<<&UBS<VRhu^&lAs#2UPF)+#r!.%M&Jju!mGUC:37=/&-#MV]5-
%5XDc'6cZY#3"9'<9sKXW"Z7Fk;W%gP3F1@cOm,gueJO4TK'66cNA++)@tdN]ABfq?'9T4_RXc-I3ttL!+[eJmPob!TYU^&<_X<>/
%?tF%`*tqRG00+Z"USDj1Gk]3$,H_#8hktre6d]'&0ZTOCe*Acs?$Is\\ADH"i(ECD?H7`J\mln.UUI2LRt!&Y#f[M.'D>3VA+GU[
%R>-Vk?u,/B1<TG*U$U8ui&A2/E;8B+KYeu"m9F>HFY6lMio/=l7bQomAmHWb-_^]rU0g7=JK7lOZ?o[NRQ!B#;ViS:X9"5YDqJkN
%1fTT&DIPFT^20X0\tL``+[Fkj+BYJ^Of0R8bg:[eDkI0\%JMhk!)`l&TN!bnn4,e+JdkmNQH!;J&.H.O*<:biMc@:?9dWo1Y[Boc
%nARR4M[-'t&%H*Kjo"rnJP$_YJontIWjXa4.B:*/WCES"+?TKnS;E7A)\6,U>.=dSRh:mH&gUY*6--s8mnW(c:TrreTMPah<b"4I
%KW1J;pV^bBltt`M)poN,J;FnP))0]^H1lEiFlB@"<&fZ;N-;l%`<^*`520h5[^s`X3NXaU%>Op4T1)*"Tc0Mn<ofjO%tV.1i,\Wa
%Wbphg&@D9bZIuM9Wd:dJT15.>TmrAlK[LB5gREE@Z+%BCdRd>uOctM/N$=in5_:Rf'45h(h)<oh>0O>Xq^so]eAMl5=r-9,PJAE5
%#icKAl)l%sXA4EP49X=_K'*65rSbEHn>a`taF&r^BE"bCque"C`Q)Rln2jOFX#YVQk9ZamLZ(dFJrCP4<OBhd8EJ^I3UWLUX2+Tl
%U,orX-pirAi`Kpjl#dimd&3WW>!q?2_M'CHG6!HP,Cp9f$RbhQ:)(#cl&'X4_jW'g+QZV0+CI$/RZ1-jjr"'8EdBjUVg_7hSd$r4
%HI?g_:prEtS'N42)/@+>5]:?e/sH&FAQ'i!\^XrL5'```dTf_pbjBgJaeK_n5HB24-HZS8$s@'(@C9W-Osf3P5T=Q!>o(]W/%3id
%11d]=^5.\p>?XunKXA#V6'-+4/(QU/60P4oE^$4J?#6grc!07!YZ3"Wi%1UE3X_@6MI2k^5*Z8A=WtfEPp.qD5W.db^%Strnt)uO
%*UCWqb0T"(iS^UH741m=<SC9gg5\1Ri\*fnq=W9n,FPQ+=m72m;2E`&)]RCn[:cr[?1D>;+hCS)Da\/\KHq@T@).@GpDKld4\^<G
%-(c:tabf+kCFbAa,dY'X6*X0JS^;S2-iPMM_/,H>]TA=W6NB<oQto92.ZG1">@.>eakb[1gAPi#6K/O,O$!H/i]ojSj<ln'<dG4;
%L4m"%A/^?_]W;*smu:$i@REuhTH?-s<(L>V/=7j*=$1ae67[rJGY-*s1s$F5^n;2U^Q<X8H!m,2J)6#&Mm^22<$`NPbm0+SIIVN^
%p7I-+!(73?!*qql?rIuqio)bNa#ekgHJ>P?L@]29/-`_94M(@@T27lpiHZ%pKIqnW5&[#ANMG0YLe2-k[C\"@eBBLG5I\iafE17Q
%9upaJ;@NdkWg`QH-reT4!&fsdS#=jPkeUV&hI_cBn[;/iYLtTj.\AIcHsoSYAjXkiiE)5i[?/dU[n/[mE#TE,K:oR#6\S&$cVr2T
%e%E]J_ZMkcg[$*Y""b*ZUE;W_d:2HU`qe^@*=bH7DB=X1.L'VQI2ia2,f6No*QXm(B0iDV2MB2?"_>,W>6h"*i+$c1/!j"c8FA=F
%FLl]S2m(@\U!Wf.dNecTUQ<!cr7*\Z#LmYo"=[+qES^%1,.lq<\r4Q%7,1on"0M85f&3Ym;CL0epMZ>o_s:hd=j?dd?7F.ffpmNc
%TI%$M[>cCWPU#@O/1n7/o(m-Y$e%(U9E5+lk3Iht.P=:-d=CVQ!LGu+QE*D,(R2O'V@i?\_1)Eajch1o6)/dN:CT\[[5WZ)nh<+V
%5N'dGSR.RZlJ=M5c6R13PBY2f;*ino5Yh%,>FKbum:,Z/6$f3mXY<juE#%lYVE.UR(D\9:(KsEWc9/$K#6a*IeH7j(Op;>&coiR5
%3"R1.)'Jn9^h&eY!K`E<&FRq&R*cqegrV\"S&25iL`OKdOMF&AU>i3g7dL&<mK:iAR2CQLFG@o@8Na5f$ltlcm+VQK6LaIIp,HX.
%OJ]2)m/GQaYC:Y.`f"-IgJAPj778tT\F.;9b<9c71/^fWgpHAUSa&e#WfPtWN/C"76nN;aPr\+hL9!;bB8X.@,jWhqq;d7kY<mlE
%%_:`CFRfIo9"GZ8:8Z[HSh78#:P)H45S0u3[NnKR_Yr[nP%d5e.cUZaprLLF_h9Wg+r%pTge>SD(k\i17\h)%,^Kd"dj$]TJo=1t
%9q#*/e:GgX`.KZcLjj1D&U@macHj]#iTF#&CI4^Q,.(9gkf>sV(2q^brUNsF+I\!KU#./dL.8buX]g:5M$0(p!NDi9B0PtTll;HC
%AHZt#&iU"3f6/"9^LCtCSt"[<Ng4sX'<AH;MLsG68M)>6+*\e9on+6OY3I@-9!M<"d'$0.n1FmB)EjIHPcG4<EWprcAJWaTTitNm
%K"7YGT+Aicg;9lnECqQ'[#ZVGLR)*85G==DfK8_U=ll-j]%iNG#')h97u$(O5nd,H#U17glOq/XO:%Zs'l)Q^VJ`%$=b6%'Pn\IF
%YqEaAoha!NLgJh(-IEfrZB9[u%OsE)+WmoT-fn`H9;2>WN,\S&AQoD,XALs\):=pMX.1dTK\k!"8i.$bE&&k"^OrIsJdG5&[gjGL
%YmP,2M,V[].^sVSc\4Gu=?Vq4o#$]j/6'_42._&uCZ,_AJf)Y+^^]p9g#^=mV"jJe?C@EB#0]:>jhPkjQ=-Dh9IA'j3F@@l4%"`b
%O/Qjg9Tg]!6[<!#gl)[$[T7>&kTiV.Jocg09kJ&Mb.iU;W&u58!EpWC_\(U_-(ZDbI0Nqr9])LuD/EE`ZFuhJTn(m(Z(mb0UR-$,
%!npd)q!@OTU&Kb2aHbhT=fZp<:_eS/BVt3;B"a+OS#Y1!=s>4(DT;jPNZI9d'U5j:r,kT"0Js//*_Sd/gGJ*Ep"nH/drL`=4N)ip
%aT7C1!oIs#/5!Wcl,/_`Cd3/,h^7457L/C8.0W[`>SVI9]&`.R7Y$;`i[mM$.YjU`1KAmgaX1S)Dq>k*d7qrcH!$N=L_2/Ronid5
%>nX<O(g,[+Gn#rU;!/je,2TDhf0CRd'qWfi6O-R:d"<OEU32HuT'DPa:PVA0E)#t$<K^UPrk7`GilDg<Vkd7Q8*+`JX[gOs'rm+b
%h$FWn^kbk4c)`,aUoXidS"X)h,'YihhsZZ)Bf?g$J7^Rh8alqUg&s@;)N1M!;9jUAdui>T;XIHEM0#Yg_G-)O;D.T90$,El3pOoQ
%#<:"B-3cr;f;KphDji*!T?`/2)ft)2:%MUd0]RLa?o0mjW>/f^JqXHg+gIngS?qO."T_HgMI/L\A1QYt1!>aLO=%+GRrB)dosu!E
%$;X;e;jujV233c,A`8h<N'/<$Y)Q8JXqeAP]M>WVgahkI!m<e%\T6l>LR!\R\\3e/#1g9CP<bp0/$lJe#6!6^r=GdIe6IA$g2Qn6
%Y1=$QPmsT5<P?]+ihLZ\7!+#j>J5V@/00>mAiTMmr/3$oTEhPX.fMlZC]/U:VYU1k#lYR3bS3crb/r)/KGJI,"S6iF15$)TNRo@e
%",gZA(J-u%NrnTMgZl@e[m4pZL"i0ua=<SeAd)&\6(>hmpVWH-#Xk-5]l<XF]pqk09ml;c/]C:p?M>Ao=om-1RsYc`@B=@LCt5N[
%JCAbh'ca*QH)IDM4S/GGVt&f,l2BI>W%s(&:fWFQ5[Z.i/I"r@9q[V)@Wq4/A#HY>U`(9,j(OghPlUI,q]E5TX81b;@nT/pGm8+:
%8=QYWAo0WIUN`X_N]7>\?*C:1]Q%lAbSZ&7Ml-u7XcTPZqdiR4@+X%gGk&J@kG(tVMRX&j[bBl$%uVj(SkmbReOXrtCKZ(-a>,XS
%6BcnGb*D%$W1OS7ag53=gDV`Wa?g5A+s0^"_CJ=;(&p'N5YqG"k+&4eH.b32e)*a@Oq:]5$R=,#q/eo$4hf6.RB*[5j(\taQu0J?
%+(6BtCdo]%]YpZZGc(H(hC$;!+'Xfk]W$6ii@OHHJ`u_bUdN@K]t]1!gM`1t8>V6&3q(`qHp"$o^Y:(.l#QZfM(kos<%)M"!IF-\
%C:gPoJ\?d"UkD=gH4$:;79?.2!epod0IrrKXh#]#TLDO!:JqSPm/(&T%B`O]*H%5d8l5d),&]lCVh2]1Mqj0;X3446jh1:i\"X]%
%<`pP_A65[';oWZb7bfD=MAltS_&?TJjK`AidGtW`C-G0EU1BM^n4l6S.+uKY5`2;>U@odU]Gl9T]5`>qS*O7Km7%jO2lFT>8\bNj
%Y69>+UAZa>"OEdi/c0MA%&Q1)97!XER1_I4^7\=X/2oI;Kho(bLnM;l>#\Vkf*?e#ZYBg>_Q&S=:/qpCE&^Y1+`>g`>`CU]?@W&t
%Ek]KZ:e>f2ghVSQY67KTP_-984BBg0$O(O,+=R%[j75rV3K<I=dVS/onLb2\o6I]=mi\uEI^RpF4h"5j\:h@2SL\5Hl*'h%kJ#D=
%Fu8o(8T'o_lY3_"QPuQ`3-XTLBnANRms_s<+N4EEo0a>cBb7VX#H)^M@!dG_6FrQ5:D6'E#E=bN<*aa)+57ANQTj^Tj$X\aP39'W
%jeBM7D/04*7LEa+p?iAr*jT/nI^L=g7[jS(O'Lk!gK1T[?0sC7Xqu6XQMJJM#:\;Jkdg;C[>&P,i,jnI9::KDe7TXns2Y=>iBGGi
%+F@<M]uBNPXVrGG!TeE\pcbb)V:65pC7b!].OW02"Pq5E+m$3_.Y7K''Mj#!@>jF$ApjY4RVSjL?QJsBNa`k7X%%"6[LF#.%![^F
%.BbaOf%c9JfiFC9k0f7lfW@SJAJ`eG:fH#t#4_tlk$CYbHL3i/d_I[s%Ikps7WB>`/#lL)7*RL+nQVte<=9RFP1eDh;O1F]JL*\6
%$PabG&-p4Xh*`P!N1l'"Qgt3S-koS2nP:=t<U*K&,I9`tJ8AttU*C]\fkW@:7]L5))VOOX&k#[1i0m?O*fDj+H!%P2]s07XR<Ac&
%+T-&D4CT4.IU2:ngf_cHip8>MpWKDrI8tg&>hXD0$VA;1d`>7&/sahtgo(Cioth%C:igh<G/9lb&('_j6+[o0)^4`pUG1,G_o4)h
%Fm'Bj]5(\$$)un>d>3,.eQ<><A[<fLLr\&EKq`u%01KGi%dbb&TZrbA@>`B#o\3f_X'I/N?9omWidEIJ6D9)BU#g'm(*F]iUTq`$
%Z+P!<4/+t>6+]KTpMip'hpUp(W5d2Q^]!=C=8]M8a16WXp1u(A4Qi)1i*5@D(@qti+MgbgE8a6kh-QHOMLk;T"%N;,lO:bB86=fr
%@5]SSPfOteUgc!uSlhOoT"OMe5Jr?TOVhaUPE$MtS;p3*!JB(!KZ-?\@uWkb[/DFDUj@T?AXW#TORKRuPcqqc01\JF*=e1&Zg`a3
%`.#EYQY[g92%,MGP=S_Ll='X(g!Fi8kUWs@!q_F.iLfc/5Q7,I,<D`-J"-9*0AOB#;hZ"Wl6"Oo-#,J["k.TJ'N$5-KXEX*qO'2=
%3kr\NF9urq0JSjmfYRgpl@SiUK;RiKgaIeRGl-J5\hm$%Rm:%B5(b!]+GJ'3V(YG(d$U6R/4jr"nuX/<XJ_qX*euu]Yb6bWEH6#]
%U<9$eM(8G;82@2-1Kc/eo%YJ/XVrqK.geCO'5^@G$aenNCWOo,!0e2HkGmP*'o>3:)W+.eL/>LEqeqKLAr>WZ__?sINO!LIKJ_d\
%=jAaSO=u/.kpS9M(?peuo+k(U5$,7XW.pC]Q?ab>aR#WfFeha7CuWk(Ekc'YaGeYg`:8TKc#V)s)+C^H]:=?l#FQH5]V6VP.Ebhj
%>?`%A0e?mqgZUapM'2*PC$`!>Hnq66DbRJZp@/9^^UCTDDrfsW(9X4fQ-J3L'LNjP)_FtHCs/Qj?/uC9O%At,H"nWV*%`$7Ju=]T
%Q6hZQkpm(/61,knH>-/Sq1_]_7)a4HF^_5Om_FZGL+./1g=/Bbj5X3L?7o"S)@DZn02#?M;.`H$.cfEm3:+:CU4sO.I;=CMZ#h9.
%5d<HI]<270=RCg$&2b:[</X).c)CuBE7[#<3VJEImqPoiLIu;\@A@KcI49R'`)V*2_2f\./?2L-m+%0+Z'H\8PkJ$j//&G]&C2\#
%o'0#_:)VdmME_:+W5?.^^1U"Q<J-h\ECSfk7+R1E<?[257Sbma;LZj;R']7S+qr^3gnF/?_MRsrg]/))'d6B\a!LCP&.!I058NLD
%g-_/D>J1d[iX!_F.p82-OcAt*na[TQB3qoPWc#&9H;f./fBfrhM>T%c^PZg*^Z;MOn-i)SiUKD#r:"n!@uTo<[fn1k<<e(X-]#(i
%_,\'HBioa3OiZG*cjj\ZTbkAX,0:<t-!LL(WhY\6s"e6-?8f4E3ntL$+Dou).dAu5iHE/uh-*,!Leb5$o5dpB%B?AcU.!fQ.C_b0
%[,gk6hR,oP-?dte5/:'<@<*-%9rfFs/jsRI2R>l;fNsWeirupF8(Z`(D*mi.>\8h;HJ.P]6XIg@(RJpYWsb_XgT/]()9aBV1`Pk^
%dY?3U<PcD*8Q`Rc/T`mp=!_/@5S1JZ9t+-5o$;65f+63:+2cV./a&KT\BE=*?/U654i[\d"O!s)ZP4M%heuJ!XpNi8&I7;F"+]p)
%Ee+Xt%BG3)XrqVnXS*rNi\o0qfSQi9'q0X`:6X%@FHZqaCPB*"J.r/K:OXGf%tYftbul4&QX(f8P/ZZAFO[s>U_FM]?Tl1D>dnI$
%V0.8T:q%9l'lUanN>*c,Q4^:kn"1ioLh3ES;EuR=>WhDiTDGKFEOg4=]3V@9PL`Al<Hne$lnZ8nP$/4Z52?8PLsfi-Q9mL,*uWq4
%*1n9%g]5_<"mgu<ZeA[bKC14RX5SIQ_]kqN>7_ngS97kNR>m)GqmA?$oRg+;VOkgQ-`G3DXj[bniDQM"]t"<YOP$"F"\RIE>2+R[
%C-#0HHo6i=cPF_YcKf&`JC11(/=e5sXQG*CnfCZ"UfRe_Y<X7!5M*%hTUqoef?R>JgVfS5fVtCMOL6UeMm)"TK&=\W\c2J]fDkDs
%s7F\Q&qao9I@DtnEUL$Ve_D>>=*73TTl`ZP7)ODjO:$TJ#%i[s\]Q$Fng/$ZB1MhP'A8_=C[`'TV;!\X+tud4q4.l?lejB^Gu\e6
%;bS9"6Pj17,R[3hh#%)alk$t'6kbkWSOuc4D9&&trbEr&f-*&H:&-DA3>9#'bs]EB>k1;d&L]%>gYQ7gk"UQB'P#8gJ2R_MiL%:U
%1MBEh7OS<bbGnRe;'4("#Rm`.]6#N)$igB3Y(nI3%B$%b;JS6X>u]P^[R"=MTm7=QDBb-]%RH4D:o'F>eq.ic/#6/HlrE?+-]1`i
%eAQIo<@U%m"3sNX.1;i21npkY/TM/;#6b8_FC#:)&2n;<F)Y>GCa,@K>[<$"Wf6:^@L'B;PN6o'YoT3"(5YS\7-Xt"cPG=5C6T5W
%"0t7H_?#S?<Xkh=_C+f.*ZWWZ49Pf\BInf"Tn;#oCT4Qro)ZDX+=>h(S+(0e?>^?WbZ6m%Z"N+J'[fp1Q,_m4YT!7r@(<k9BuHuk
%+C]_qX]k4f$(%GU0TBmYNe4-OIpB7W\&Z4@d%MT2S,I>!$#]m7,oaR<2(I9^,,VJQo%9O6WYVc00?,^kf4l!V'sbg`/%%u(Rr=Cr
%T,AqV>aSCl+Bq&'1f][h0#b4fL9/N6Y?i'Q7k^f(&f^B_Vr`tmE1M[T,qB'hPX1D1p/m$nl$>s#<JJYZ'jZO2L*h,X`iYo9Z4,q3
%@gX!C<)=A"BBjm-=nApk!4-%Wd]R;q1^S"Y_r9rS9X$NVCFZ='\=Lo6XEcRB<8udc7qO,`k&cq"5><*-cu&Qd8fsU":j`fJ9.:Lm
%19W%q:`l4H>=,c(D*m<f&#mj'LJXTmV6tT1l4Q!XL!W7LPf"Z@hGr#Np[9"iZV/#/`4flEP_F\hC]YW[/`go/724P0S116goLiR2
%l!YhNTV;^Y#UQc570qdg6bf*(34AhOc5K[%R$F[B;mg)RAbaM\Af&@Aqh^hqr5IA>aJH]aGO;,"/7d@Gh<iW`eJ-1?:'.>DRgf=t
%Hh+iD4c%+dP0eeY)juM$8t5?cg?T_0#&LK16W'e$3shVGcDlOp&QX2r\Y+i:HKVqTcZcu@&me9iK19eg"-@%D%0^*`M_%U)V6:$;
%]l'R$j,2Za,FP^@D;OZ[FQUT!eT3p3kQ2<-Oo!hRO\aRf=#Gl(c,c:"U3;NW"s$-g:A#iGPOVPt-@%^EG%e#>H>83d3>E\]g=sI\
%;Yuc##`Y\$*L%2+d?m`CVQoh/!=5BBL:^.t61TODi_Bn]kh;89/Q)k8KS#(J<jRX=`L^q0&9B\\+CgK&abk9Jg*XhNC]:kAC.Te)
%T_=A58?!1Kh=\9g.dRtGa+-pB,&,^j+X4f%N02h8+=7XJcQ8j=`!YXic>dtbh-Nns-e(5r0`9GYqVaCK>P'e<IoA`)&-'\>pWB_"
%NV6k8]`*Vu.G-icY>Jh/f\db1(mZX&Yr,B:`U^c)6%teO;KQZ4;U.ia=OP`6<<=dBr`:It92j5YXffKbQ)Q/G$s5,R'Fb>\@q2XO
%G3o&m.F"SRJ<ar^8aipE0Z[WN$\3d0@<,\a=7sNV*u7;Rp8X_c?L(;@k)%&S@I"+HSq6DZ/?:^=fe2:.&Y`A9)Feg>d`Vb]KtVrS
%"tdd+[XH-:.L#>PGUYOUX<iLu+Mt)1XmoNOr\>f#AjrCuU_._\=k](F$FPa`MgG)g/'k(s6aX)UD&TIHI;$)CWYh2E_*Dr_K#e!@
%ATF8Z7BT'1.YoS"`2Z.RMj0mM>rK>mAMgWp2C[)jT02Vq7uU8W;e/JX<$a1mQPnk+m5;1aY;U5$)p;)kDeXdkJJuJb)?BnNU_f;q
%/?$D/\"Y#X.q2I[6B4sD.gW9aP(SaS0lO(n/?2PQOY*i+e4/"kM.#s<Ji5$?l4);Q-aZ;uTu>YB+U)il7mIXJ&I*`BUq01r67M=X
%+N?u(25Nr%q.pX&g+\-QZl[.NmDm@T1QGfBZ70U,fW&MC$>3eo$-JAki]^Y0O/L1nLE5&tmJca]j-06IpD1R^Za#ZCGIgP4*?c!5
%("TAC1"\j:EUPNIJon6E6`btW(1kWEXC]pUVAO_M`3hhOHZI%)HCU:?,Y!neT@;hPAFK"*Ulf%a];V'Z<2/m?\s5Ie'>Tl?eDFs:
%fd*W+a8R>CaP.3i.%MqF!F%Lo9\ruPdO2I'(n)\+,4?]D^oS]AWb%kPc@NhuEZ('en&SUH(8g,rb$"9CW+9!]8E,jJ9i;H?NU=4]
%F-Y\$U$+5=_"l)JaF7F[410)mBBL#A0cQ?fO0dd^aBJmI:mDhc]KHYe0GEHC)@Km<0ai=MndB^_g5JPm.1`2ON%XM;Ze8AVm*OMt
%m(5:G/,fn+p_I#Gg%BI)ZJ92"LiM0C&:,fG#.8YiGA5r5eietMG(F(F^_To0[>hP,>abl^)OMROc_4Th)1h`bqlnHp6&dIX*peWa
%4qmhYR!^T-12lAsMpri]Rd/"g]B,M$W'l":mr5SM\tX7c<r#?(';'=tR4mjE[(ct((06!W2b[$;A/'j\TY`O&qhhrA:_6pq:m#+e
%+\n`T_do-hiCN[[q+[PE98h#X]Z.0]<UqX-O4%,mq`#F72,b#(UR,eGCnpNgVotoj0M:@>C/9oM7]*r[O@@pn[)%K%e$p4@5+;gK
%cG]U;</Y4!(1kN8dmeg)'dM#o'\m-n(eklpE.tDfX'L#g?@o39'jCUjrO]F!>*oaL1siBcW,0C9fGjO6-.BJS72`B,7dsW6T!DX5
%4&IB(;@SH0M-,Kk_J(E9<%'43*+$B1mdU(tF*tY";j1BbXmu4$Ds?q@9iN$pTiu1niIk[u^"[@%(W`,@:fG=`TU6N`rhlW9G<ApC
%##Su)fH?mm&si'MX5;mT7*a@S3*CHP&9iA>9)Q3=pV4u3VA%Y^W@!Lq\\Q'Bs-If?.`!62U;Fs`mAMrO2A#8s%ch^3[]qYgaTpkZ
%9?;&P(R2,/%C7\0"To-#mq&,N2P![A:<hb=K%ME-nU"<$@GB-B*!,EdB5n#u3SHd[l#+/f`)2l_X,,hUfMh'ar;Be:brfM,SA`IP
%_d3t)c^B83^_Og3Y=@%jEWa)`>+>Ak7T;^3EjHaD9rWukRRO_>/[g7NapM#,'nE#8@]:3YP(ZFT\#j,iMQ0rOVGEWV+rOr;cX)9g
%;:3/H.[`%e+_`&2[,;/BF<.PQrf94F2CjJ@J3GZARjs>$od(K[dS&p[loV;n8]jMB&Kr5H8RteWRrj38-)Qa#.D$gdFgti^c</1S
%"=.*HkjYQ'J\/!DLujeo+-iE,Ju>?AFbY16n_*^#<OdY2gfRA)[Zfh4F455*Y:#P%&DhQ9ROnNnlnWV3(gIOg)jfp`jE%r#1P#jl
%HssJROA0%R!3tm"01[qD%KNB!d'W(Kb-<4\8D@tG/=>+I[>>tPi;(QQ*Wg<:<I'Jpm;V1:]]&gsh^?$2$[<oMM?VW9Vgc(S+3tc#
%40ZI7YZkOlV-m@JO/.T74_lqh61.@-T3iUl;ja(oG<ofm@BP@'R_-K-E*ID$'%J$6T3L;lg%+_@WD4sKb7%!?Oa4?Q0cD$A%%nZT
%go@IcO^\FhAaF7Z_Yu>r<-krF!%VM:We?M*Wh==?ff"aB#TR&&:@Kh!MU$W^PmV(B5Ehu)XP?*Z0ED7B7gP1f!H109V1sm.+\P0;
%E:CT:)Qk3C<e3BSjo)-J/<JG@F!=52p4IdT#AC-c/Ff1/_TAP5;1igU>E)b,9&u,CF(D]4=<X^h`*R$r/Z@nacu:C>-B1!N>4pM1
%<p8_^U<')&*S<Wdn">2OMkj9EcJL(^Y2'*82N%DJotAD';=p=A,T3PGEK4&DAouNh$lD&5rk.[=IEMd1Q"!u><f]<N,no[VXmANR
%P]4W=l=22D'h-Df>@Oh5nI5ilqV#AYmII'S%7/T&V`mB,bi94+ZYIH"<%9"(>SV<#l.`:UGGT(3)_*sUBSBgUj@OD@P!Whs\s.de
%N?T-MNjq<@:5\a4&hCeB)=XmX>*S`-A$>63Ccq<ZUV2k(;'%96hC4gk,>B?dgfAi</$P8HdhHBIXOm/?lD!&;#r"a6'ORL5&WA\/
%1,+5b><i`G]`8a8mHnZ4B7dsm(])8*[H!d\0FeEu<ANbt=0F%`,2_Ks'\G/*`hLJg\U\4uC8W_2,<@L%U,Oj'80l:JFE`)EZ0T)Y
%c+52/28!H56!ea22ppJO<:420/"#2#0>$tSp,#?*F@i@>Se(nr8[%?fG;Ys/`Oa\GMibZ-CW_dAiY?XZ`Ppk^a>N\%N6Gcn-9tiZ
%:,Xl;SqOsEPQ*rsbWDqO6i4u3+Z\%]"-p?7[4.&(71'T[[![0Q(F0>o0M\c=Va\*$;fj2eLk.<!@2pkQ$$:d?T$:RC;Fp7&%LZuJ
%)((-S1;9aYP'<[;>MCGjRi0EM8G=)_Ea:X@Q80uoS-flgFSOsoa[1qGf&_Uj6Ogo*Y8b]/Ol@;C>Z[heY76c!F/k*@Aa_Yl()4&d
%N.1,l&b%>sXW$hCT5:eN/`m1AX*g@AH0q-6SIL/[Z$N0W7's[n%<H,YnnY2@duVI.?ZcfJl8`r*ZLD";JP1,5fBCT&9Mk[WlB003
%#",&>S^/?%SnT#'8ZHnkX=eMY3@E:$>'4jA\IM["b^B`=+sTi[j+O&)aDr3J1es-6jq>Is$q%_%pEMF,=sicOY_\22Pt]ga3=-+@
%MGoU=g'5"$#!5"@][^p"Wa^[d,dlf^OiZ'^pO0KK+)`_(GHaTr,<.F`?<@1Y!kO7r-(E=t:Ok#r)X,\)5fZS_)Ng+=U*phdOCJ<I
%bs'Q*5jjPgefsrY!H*&/#`+&uR8q/N+b+8a!1\t-rQ6(;hbU$+\\iNsP2$7E!V[O8aTabf`pkS6kaHptiYY9YX;-Y`+\%XGLnM,T
%=Ik5s*L9(8g9[\U&mB_nb=);/auI`4-_@+S4Q8pGXC4N)UL6[5cc?^`c2iQL>rJc,Ko4L\YY7MgNN%sPJR46c"5I\T60\@M'd`;>
%HP1^2C$l[B3i3k:E"TGq>:T@Te/6.F:_C*@bNmYdmuAD9VW8fG4#hr?(SnrE`lekSJR"6a#$5<p[\@e!rJ;JS;%EJQ3U]50^$O$.
%dM[,9r3&R\d7VWC]gauoPb-X^TZTsIlbZZp3DSCT0>9#2\&Mr0.j>45hdaltbZeO8gpT/.L_!VPLL4kfO-"(_c5i-f*&ZHD(?<S]
%`([S]C76690$2-Q9D(I70M7s<Dkb-jKahW<BfTYCm6o3!VV>l3-'h+VY=8]UcRq?JOOta9AFEP:>b)FXe!4l='n"_[5*clSeh"5[
%q[S3DX`G<bWo8kO\ApYS=POIg`i26)H2Luj`m.-]XW[[_WE:+R<4E?KPu+sCf"!npH?*?7/`]"I<sEY1Pi2[Ld`i/=23nf8TeVo*
%#rA&Ygoh)@%ke7YP.u50f%i;1gaLb%fhOLU"g,>O/4L'5%`O!K\b3s\:<i=VcetnW+=,PDdlO4;X877"KVDX,2KE5%B#<U("F1O,
%>4N3KOa!X$eB,^55Wg"1Hf`=6bd:0-Ho`]!gFqR^@X@A=6jVsM<(SME;g=M9n81V#52=_@2DMsU*7S3pdimP?SVA50*Lk&d5]!_'
%>.kjY-rluDSKuUemm:kkQB<pSe__[6:f5_/U&7SAm^hgf=HHP,BMX-be6(-_gl7Z:?QAn.[QY9V8guee#mLW.a=$Er3Lf<F<HS?u
%0/Oa@7QE@'?JJgQ0fAftBG;nF]1n5eDgneo2C"-B_]i(V^>F0-Z?(]7a%E7L'-qo_&KYjaOEWC^Q1N`f[HQ\6!^@qY7nNT:a9K@O
%*[j%rK?tdhG7AXOYX6gA"^XO%g$IVSLBoeWn\KU1P,].D=%:/#1gpNk!e#i?#j2Rn1b'>cOtrLH!C/s3a$k"88FiaoHUN=qSTbWm
%7hJJ6<*V'5;9DYOG??KLe/`;FOO67iN=k(MMJ+K52?QR2p*S-7-/VOnTlGa1^#(D8CKFM1hdNop?UC`R7*oe?a^lch(Aa-"[rO\c
%8TC0<DPR]#nI;Jco6XT;cL4hLkKTY>o'](SpG]0uXd\G;08c>!%IiTB(s>=UTYV4S`_u2UNHEN8_tA!-p3cGUZUJ"2o8/?'pK/[^
%`F&\MkfJL*]J3:@_tqf:V+=ko15Y,#X[O"nCHu0/*'6YFB/8WP2jfVFlNZD-M7k2RI\KFbr7si5c8t0#\4p\-\`[XZTC0&W%^+kh
%H`j1AFkdf<&#Nd3K.QKp')FWG3BdIZ]PX]T5X8U+Gt33.nu!2[jiU^N;dUQCjW/NP)X[tEC/ef]Q;'koQ0tj:F`c_&?)*'2*a_l=
%]>@1DK`n(rLH/LKd_dJ#cfS-OPrkKVD/okqOI(_fk\tkT@MDgASZ,*c^[X\eO8ru>8S/[0@nEpaC.RW@TJo;3fZD^OA#Ztc;!*,f
%o;#DfW_(al)lhRHFYT/\cfWX8q=Jt<MZW=5@HY*s;WI<rlb*KY(E?Yui#K&FOV!b$CA_R:#Nq@elk7D6G.Xcs'H8ichX*LjYJ[c$
%G&W<2K.o]d-"VQcb764hS<C\`eRkBkHO#0P;l"^.Pl>?YHOku)("8m6.[cqgT;M_k-nHRGq]=r_%q4OdF.N/:q%j5!qAG95ne\L&
%,b#+_'T`[0G@&+;=Cb'%N@i#=fpkrE#<_Qn,T^l_d!M-^6N7t14MV0Sq..a0G#B'W"8Ynm@YFWs1m5[p8X\:(,a''%7RX6f7O=bm
%XZ_AHFA@th"p#:FE/0&m5hAX*^;2SR[)s?7I\9R)g)l:=X2VkZ0ur7sM$Ggb=:.Xc[LV5^3coeL$KV[Ql0ra0.3d@1'J+?gqqOH&
%Gs,!?%;h-FG+%GYNKmWQ1>'\Q@1,h(Ulu<G0MrZT0kJ_a[lZ;\AV#aYlTliV[Ds:Em2Qd:-Sti@BFJ6.WuagZ@-4PW)iAe(p%PT=
%;e=B=pqMQ4A3E<*)5M2lNo,pa3oR=R"sXIb<.$mnEO!SElU(9&C_LsOZK8%)=ou&X)9V=B8HdHFdU@)unt7-]"!%3e\bLD57Gkqu
%!^8XI+h8:'FD_J9cUT+H;V_oaC*!L:9$*C-*ih_0D"C+O.WKh<5UWN_$ioI=-#t6U5;un1-?j$J$O7SY7e`gRTXf20/`o+T.X_FC
%=d2^=Jj!4aYZHPe[KNWL^j'GC[-"hqIEW$[$L2A5\6G3Y=pVu1(qHHZn5K52<n+lXcVXP;;'#Oq1rAOu%T,jCgC'89Abk?FPe%e1
%n84G^EI[<CH^3?IaP/eHWbN>n$T5kb%Fk0tiC;lL,=QjW"<*.i-,tLi!K,OGC^.T9GceM#(V)*@m,'>AA[&5J/pgU`4Js#"_VII>
%e;qk>`O\r(f=*VoN02kSV\Y>2G4Jjd;uu"YA26@*R&'1ZD*`O569E^NauEpK_6QV=Qq1Fo'd.GYi+Bs,%Fje;)M5,4*/Lc'>i%r,
%Ni'<G45?SB,,F6S;)C!J/JNb?S2sAr6nRE!Z:&6GW4Z+9Zadp@.5:23T`G<?lO6mNn9V3_-Z1*q$mKqa3)oFfeSo1@ZEl@$U>Lkr
%)lCAEgEdAG+MdpP,)k._P^W4n'j.OZa&1qOEC_Q"8Al/N)mbal%]Rf4:BohK`W3]-Gsu"65!*Wgq?f0n5M1fqlJe<>KEq);llT[C
%Nfk_H7Po[j49t(9FU09\A(7SPL1^PRX=4(LZ`!/0JDUtPo:/V]TZ<gNCr/dU1=oO)0^h/=[D8`>]oR9DYY9IT"&idZAFWh7)WqQ-
%H[UNF2kbDA\\(3S*+;b+;faY4l'N7X>((AY2:?]On\Q0H4Z[!giFU<Jo3OT)o*T8eL#$K&m*;)Ao?sW]\Q3P8e)_f(#B25[F/MEk
%"b"+:5$F<m`B5(rlJA,kpT8u2"l&EnQ;HE#kS,=m\aPL@>Z%K51\!_g)BVg9k2TrE$EFr$DcAlm@n7$-i7%OQ&58hq"_qRt-@47J
%2Q<AC$ODTmC1+bk7e*GfNGRD<-^4ArI#bsoPpn8/G0Xa#/6A@f0!!.8H^tmC%=p<G$ouLVfgMRpV/\"ac'?^bQj;r(fqce^h+>.6
%U%k]X!ffTkBQFA!rE%n8n]&2SLG%sb&Hap'.8O?T5V&3'@T(P&%A'.DKpn`+"76/LmP]Z.Cr_&79426bTW'>.)>(Mp<5hegX%j^;
%l!IZ#T[<R-$n..SqA5$;%_mUYA>YrrUn2&4Na0i&B":\/=%pDMJ6hsFSXjs?/1C>-ZIOl(3H+eB6p?.45]*)G:4pcgC/DT&$GNq'
%%J#!cF/U&LN=&4B6T%km-2T;+7H!*XaCnBgIl\"!kG.VYjqOcQW4J1l>D)XmHlD7XMlD^i.mtao.t[_*NL(l32Lc!+_,/6Y?hN@L
%aMmrb2&__aa`3(Mj9,8+!J7:ubEb/V/QdD!kW'CPM,7qag3prd`G'eZn0W08T#e<F2^@K`Pel=M!0Na=T]Yc(`m-MFG3ufLfpJM=
%ZuEZ;9q+^CG+[r.hDnhTa@7^d`A,*B+%h[?<CcJ^)3$eUIeR].]gFMPO7Oa.GapW?I=*S<%?u<4i>N,'aS65POj&HP9SoHB^;Zp%
%"%]Xi$$FN%[mq(Jr?1Zq-CKW'@B!k$O_FQn-VQe'-(3;X<`4@T%dI/0K3$;K9`.!^Hf"IHTkR[b6%3r?52M[)mpUK!2ImVc8?fJ0
%])X?`$D\stWppTR\3qp0@RnDiCsh_$I0)a0L'WlN]=h`$'WKh9!0cOO_'OmBT"W&%NH]^[?)m1G&[Aqs&Wu'*'ja#h,b]C4+:I,\
%N/^n'GBo(qJ.tXgLrNhuLltSa'@\c#42Cq#=jCt\Rl1\"GpM)W$n)`2g;2oJcnk5j/),b)!7h\!'>,b0O,Odr7O!/JbIN646K8P"
%ri2(LOBHTQN+s/2J7;IgK,6\T"'pVkak(.Re'lrE<"b=tjh"]Q!C>EoK0E#5[akbp-4]XAlETa.bro/3SrL\KN=gII'+<Q-++JPc
%o_M:hYGa%R!9eaqiA8trTE],8"1qfFJVtGX;s_<;EAI'M.@V0p8?gq6r%fZ\.tkX3EJLihX"[975WE4.Vuq(=F7Fk08/Uo,c2km.
%C(:?(1*R)rkT/e\;>2e_BNftn9cASV(c7>o3f?@E^aStW$&<:Q"F.>k#NEgi2(*'QKU"(_cId&3:meKr&CU[H4ngqf>,UN95Wmm?
%TQ`)nOD5*Q-:gt61P)Q//E&JL)EfPMr]41!l"*\X[B5#W6HshGO_\oAQIC'YVnh##e6>(i,m@2:B<UfLj43!RO(JtqQW#D!V/cE-
%[&ZU^K/;8!K2dIeH6)kG6?lLiD+>(@]mKPA"F;M@^761A)QgWP]_^8G,-BGp_3f.c:At'*o_e#e0k$c*<(cPM$_.D<0e6lTHlLcY
%`qd<"GL6ai]1BH;];D/m';]bAn=G"-!-91[QDCI$gd.=;'jgCPrHnV(B,Z,W$?-_:SiN&a<5)MJER30;K)CG]_W+BH^tWY>*g"&,
%Lt4WVK%/fS[UGG)DIfj!GjPMZ3DH[MI)E1&"KRURh4f(@9lCQJGd%eJH(Z$<L#YFTn''tS3^I4^?+pDQYDY-'2)oq#$EcGQFH;((
%^>-Ioh%UBF,U2mneYpnD1\("T%"/?g96S0q4et^;[t)%0J`tq%N&@R_A;:1P3Ki]22CLF#(#d?\'_,)U"Q09-Z19jk@cEu8i[FGJ
%gm!f?'D'nI;09Uk7QuO`9H7,H/QZSA8VtlPU4RQdCXkDil'"\RIW-HJ,-NJIK4SR"e[Zg2$G:=1"4Q^+@RPV5AuI["_k!$_m`b#S
%oa#b<n]!WI!.fglOH+(25'Lf&V(kh3Wd_MT95T!X$T]R5Z.H8Voisl6-ER-qf;<[l'fE!?eC]Po.Dk*c-]2Q51V>0gW0/uZDepjI
%$1Fg2/M8;FA*o'3;Wj:0VM;T_'6R/gH?NLNE[KHsfcd:WN8BO5a?Xp_LSlSbNHJDuD^0!ZWR*l#MN9]nk^-E75b]7BCa9FM,DZEj
%MY?"t6*X[>r[;3>F#4(B;iS9hoEUNoY3/60[Fu)F1FOYNK0td(MHLpk(,&+gR65fV,0]^f@N[hYQBl:AdXoYAYA08&NN9G(H_>o&
%R3eZZ6#jBVKIP/grGdQ^"-7N7DS<ZZ^c/4T,_1JUj'jm>c"`9YbYb6(j5mV$pU\+*2>LiURlX45N'dK!rH4A6@ph7jcY#)CETX)q
%F?)Opg1?s4_N.#*2BCraL>d7KpF*5aT2^DgG[Q-`Bu-=WTU3R[E8B&eqN0RP*L\<ioh5q[,JgdBggZ,[jC2be9B=s)Ohd:O+@QJ.
%\[im6l8BZ/o@"=tUh>n]n\ui&%r4fq!C?1[QXpcDM>">_(pA?6Z3jJnFcQkXlqiqO'W5D^Y.L'$["?2kiRH^p-S'?FkHp<j2Eqb%
%3<cgi3qn-l0MEh(6pa<T<f_<d5]s+ffT'O8oF[)K39*)9SbQV!g1^n2<OK>/(E#N=@Fl:Z^ksXd46P0%9S(qGaY!p@XU1gnb*K6N
%DUp5N6JBKW'Qh7RMP<l7,Rr:kauk(:d(0e[*@=!V#`$_fGW0iZDhYa="9g:s-GOFd8?eHU#,N550>[nPm*:n[bX,2uG"*ABEk7jo
%W[?MinqdjR8KSoT:m\pGLbXJDH,MkrQoY-^^1iY:g<Tg*1V(f=]mDNN\5M=#g$\0il1fL5Rf72+f5Dj0opZ<ha9e9.p-K4ib:9gE
%V/'K9+q33(S[9ahJC%ZLN]._FBocd>5:JQ@LA1?[p]%Y<#[0ndNh1uA:ROHSl,h/Hdp':BP=bs'as8TrUhd./<KP5$r5WPrd\34c
%rA7)"6OLarfL(8KRND.-JON)[h-L5J@M;:A,o/DYm>Bh=RM2c9VB0+784)G\T"`5)GL;QK_k6kE7oN&1WC9adM%m"]h>D<1VBc<A
%CX8Dre*9,c'75FgYLPZ"iA4P7Bh6r%]:`4dJPn4HUX`_TFXG5`=N4=?Y`hTl\fanQAXlFO,(62rHT8^nm'-kppBZ="61)g!VI_LH
%^P$7CMVBc+=%#'T9f45/l8&5ebA(sc2L8`gTPuG!c((Jrdm!f5(Og&UrohrlLt4s;OS[psrnEcHI/W"gI.>`/s7)_0rUj7lnB3Kb
%pl@Z:o%WWJr9eK5D"EEHqU8gLife/lrl*ptr6n`^r:4)=BTYdUfa[uE=+BuChoCE`bSALefl_fDj]=\HqsWR^-0KPH=T7]3r*OG\
%H@!hCIeDfpIJ\5<o'Oc<5&VnHa8GkgB1@Auq=X!%na6(cEoCAQqpkFJIIZu;rSK:-m^k-drVkE^_-_]l`HU3hI+/,ZCHhd`+2@a>
%^]3:8FO_2bIIYQ8j3Jh)i1kGh.mNk$0>@CsYJ:#'^O5Rr>IQc)H\()H3cog%FeR^fA9b]7ZgY_Ba4[Kd-6b,5ejjjsg/'V#\!9Ar
%4"5>:I>ZM1<jko6!a&?TKLaRGp*$;>5O]#D8:3`@.TBpn-f)dRdOoUn*4.en^P&JZXVjp/2qZqDR'[[!oTHi0IKM/OlalT!8h*'m
%K\ph?._T#>7Jj>*02`SWf.L?G?G`oGqPC6_`)<6*s/#T+=LtTjf-C("Q^Q(GcH;fl\+68N:k++@RfMO##8Fu_MP&].N%\DA?h&^5
%0Psi05t!59P7HYJX?`X?^V28[]K99?-:onrSnGII$aQ,,$#;rZ'M5r\%Ct`O->\M#mY/fVFP[`fPBp?fUe#$sDe_Z%;=II)>u86e
%-l=([,f*=,_RFKu.]'cT2T=aeV4uZkG**[HK_crK_+hm6V-@lgFB$.G-<_ZR>.@6@LHWeYP$%$$i2B<XnMhs>%]$D,R8"qo8qkRj
%DE2JmK[3V:-frRQNs&4?;Qk``!Qr(uJYiudQM-ljLO<AG21D.9I?<Z%dG8nYU^:*UhcN3]>r=3Z8amP%1eHcqiER@e9jJC]$mdtZ
%IU%Y;6+r:<9:ga]OuSb8UFP:!\KGGc"r4-,+b>'d/T'1pRl+!-E*:NLgZ/)dr3r"dHRhk],:k>OMG;_4`MM2jKL7Se8o`Ogl>BlR
%bt0C11r?Q2"P:1"&>dQSD,Ohd23UXWJrY&koe]bg'%#,r7*f*Jp,0Nu,ZbaYWlXt4$Gh=#C9SlG;IJKX3G#F*Ue:&m<=^D*5r#br
%Ce(@"d[@,"81N[G.=rJNf?3@oK\4GGV$QW=-+-^4s0<b.5lSD.PLd'ef1*!Hf%H1L>"$odb"s[n.Lfb'64"+H[7s1dMS=aP^IT1Z
%,#0s!`U;ZW:Y(K+a;g*"Yr4KSb-$sC&1<m]9j0)*Qk6)u>%1c6GgBUVWCejM8?I^;&.?l`WE;>%n]16Xn=D!c;eqcN*,n;i[3D?)
%c/]rH+U/jCU,$p!2C*7IU,8dD^7dFrS2iL2-GG4'EtNhp#"cZ_NXg[lOA(&Q<(k6VQqFRUqp;<cPRE10*'7($:8p.5[=[[S\HUV%
%j])fRUh_Je-=Nb,-O19K`0^:+_QD-FiUKD#r,,%%j+%*0[iQL_qY3RqfnH'ul.,8NJ'n;jA^Pr*`BSkJh94!ln-=I=`Qu<sn)&Q`
%eR]-erpTg`QXB[NQQNs:p0561QiD%'l,1i^qsp*2s5LXD5Q(*@J+6<Ld?!];r4sKQfmitH^]/Z\&!:8?-3~>
%AI9_PrivateDataEnd
